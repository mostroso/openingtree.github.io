{"version":3,"sources":["app/Analytics.js","app/Constants.js","app/OpeningTreeSerializer.js","pres/loader/Common.js","app/util.js","pres/loader/Filters.js","pres/loader/Actions.js","app/iterator/IteratorUtils.js","app/iterator/BaseUrlIterator.js","app/iterator/LichessIterator.js","app/iterator/ChessComIterator.js","app/iterator/PGNFileIterator.js","app/iterator/PGNUrlIterator.js","app/iterator/NotablePlayerIterator.js","app/PGNReader.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","app/Common.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/NotableChessGames.js","pres/loader/User.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/MovesList.js","pres/ControlsContainer.js","pres/StateManagement.js","pres/SnackbarContentWrapper.js","pres/MainContainer.js","index.js","app/SitePolicy.js","app/OpeningGraph.js","app/PGNParser.js"],"names":["trackPageView","ReactGA","pageview","window","location","pathname","trackEvent","category","action","label","value","event","initialize","TIME_CONTROL_ULTRA_BULLET","TIME_CONTROL_BULLET","TIME_CONTROL_BLITZ","TIME_CONTROL_RAPID","TIME_CONTROL_CLASSICAL","TIME_CONTROL_CORRESPONDENCE","TIME_CONTROL_DAILY","FILTER_NAME_RATED","FILTER_NAME_SELECTED_TIMEFRAME","FILTER_NAME_DOWNLOAD_LIMIT","FILTER_NAME_ELO_RANGE","SITE_LICHESS","SITE_CHESS_DOT_COM","SITE_PGN_FILE","SITE_EVENT_DB","SITE_PLAYER_DB","SITE_OPENING_TREE_FILE","MAX_DOWNLOAD_LIMIT","MAX_ELO_RATING","EVENT_CATEGORY_PGN_LOADER","EVENT_CATEGORY_MOVES_LIST","EVENT_CATEGORY_CONTROLS","EVENT_CATEGORY_NAVIGATOR","EVENT_CATEGORY_CHESSBOARD","EVENT_CATEGORY_ERROR","EVENT_CATEGORY_MESSAGE_SHOWN","ROOT_FEN","PLAYER_COLOR_WHITE","PLAYER_COLOR_BLACK","LOADER_ANIMATION_DURATION_MS","OPENING_TREE_EMAIL","OPENNIG_TREE_REDDIT","OPENING_TREE_LICHESS","OPENING_TREE_CHESS_COM","OPENING_TREE_DISCORD","serializeOpeningTree","treeData","filename","callback","console","log","chunkedArray","chunk","object","index","array","chunkSize","i","chunkIndex","length","push","slice","chunkArray","deflatedChunks","packControlWord","remainingChunks","hasError","forEach","zlib","deflate","Buffer","JSON","stringify","error","data","byteLength","saveAs","Blob","type","deserializeOpeningTree","file","reader","FileReader","onload","evt","target","result","version","unpackControlWord","numChunks","startIndex","handleInflate","parse","e","sortedChunks","sort","a","b","map","el","flat","reconstructObjectFromChunks","inflate","from","getInflatedChunks","onerror","name","message","readAsArrayBuffer","control","view","DataView","getUint16","getUint32","buffer","ArrayBuffer","setUint16","setUint32","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","getNumberIcon","n","alt","className","src","height","advancedFilters","state","createSubObjectWithProperties","Constants","copyText","elementId","document","getElementById","select","setSelectionRange","execCommand","mainObject","properties","subObject","property","simplifiedFen","fen","fenComponents","split","getTimeControlsArray","site","timeControlState","selected","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","toLongLabel","fromLongLabel","month","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","fromMonth","frmYear","getYear","fromTimeStamp","getTimeStampInfoFor","fromYear","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","getPerformanceDetails","totalElo","white","draws","black","playerColor","totalGames","averageElo","Math","round","playerWins","playerLosses","score","scorePercentage","ratingChange","results","performanceRating","Number","isInteger","toFixed","abs","isOpponentEloInSelectedRange","elo","range","isDateMoreRecentThan","date","than","User","props","isAdvancedFiltersOpen","Object","assign","defaultAdvancedFilters","this","rated","setState","newState","SitePolicy","setImmediate","setFilters","bind","checked","newValue","colorError","filtersChange","isDisabled","areAdvancedFiltersApplied","newProps","entries","key","deepEqual","playerName","selectedNotablePlayer","expandedPanel","TransitionComponent","MuiCollapse","TransitionProps","timeout","onChange","handleExpansionChange","disabled","expandIcon","getSummary","component","playerColorChange","color","onClick","toggleState","icon","faCaretUp","faCaretDown","isOpen","toggleRated","handleTimeControlChange","handleTimeframeChange","handleEloRangeChange","handleDownloadLimitChange","size","React","Component","Actions","unload","pgnReader","stopDownloading","isGamesSubsectionOpen","exportingInProgress","addEventListener","removeEventListener","importOpeningTree","files","err","subMesage","showError","importOpeningTreeObject","showInfo","exportOpeningTree","exportOpeningTreeObject","info","shouldDownloadToFile","PGNReader","fetchPGNFromSite","selectedNotableEvent","notify","readPgn","gamesProcessed","clear","loadedSite","setDownloading","importTreeClicked","variant","startIcon","disableElevation","downloadDisabledReason","isDownloading","load","download","placement","title","exportTreeClicked","stopDownloadingAction","switchToMovesTab","faList","openingTreeLoadActions","regularActions","mainComponent","in","normalizePGN","pgnString","dataString","normalizeNewLine","replace","BaseUrlIterator","url","shouldNormalizePGN","responseCodeCallback","errorCallback","dataCallback","endCallback","remainingBody","requestObject","request","get","json","on","response","statusCode","newBody","toString","lastValidPGN","lastIndexOf","body","callDataCallback","abort","trimString","LichessIterator","ready","playerNameFilter","encodeURIComponent","colorFilter","ratedFilter","selectedTimeFrameData","timeSinceFilter","timeUntilFilter","selectedTimeControls","perfFilter","join","responseCode","pgnStringArray","parsedPGNs","pgn","headers","Variant","opponentElo","BlackElo","WhiteElo","ChessComIterator","chessAPI","ChessWebAPI","queue","pendingRequests","parseGames","archiveResponse","games","game","rules","username","toLowerCase","ratedMode","time_class","rating","dequeue","fetchAllGames","responseBody","archives","reverse","archiveUrl","components","archiveMonth","archiveYear","shouldFetchGamesFromArchive","dispatch","getPlayerCompleteMonthlyArchives","jsonBody","setupReader","readAsText","playerColorHeaderName","lowerCasePlayerName","parsedPGN","playerColorHeaderValue","includes","onloadend","PGNUrlIterator","lowerCasePlayerNames","NotablePlayerIterator","selectedPlayer","lowerCaseAliases","pgnAliases","alias","pgnUrl","pendingGames","pendingDownloads","streamsaver","mitm","fileWriter","close","header","moves","moveObject","move","continueProcessingGames","fileStream","createWriteStream","getWriter","encoder","TextEncoder","processor","write","encode","getPgnString","then","setTimeout","parsePGNTimed","PGNFileIterator","pgnArray","move_number","chess","Chess","resultObject","gameResult","pgnParseFailed","element","sourceFen","sloppy","targetFen","openingGraph","addMoveForFen","addGameResultOnFen","addResultToRoot","Link","Site","White","Black","whiteElo","blackElo","timeClasses","unselectedTimeControls","includesAll","arr","subArray","every","v","getTimeControlLabel","timeClass","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","setCurrentlyOpenAdvancedFilter","Collapse","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","downloadLimit","getDownloadLimitFilters","Slider","valueLabelDisplay","valueLabelFormat","val","step","min","marks","max","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","Container","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Row","Col","sm","FormControlLabel","Checkbox","changeCallback","children","getFilters","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","str","DP_TABLE","OpeningManager","plys","currentIndex","san","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","Navigator","openingManager","currentMove","keyHandler","keyCode","previous","next","addPly","device","moveBack","opening","ChessEcoCodes","openingCode","code","lg","Button","faStepBackward","faStepForward","GlobalHeader","useState","setIsOpen","modal","setModal","toggleModal","launch","open","Navbar","light","expand","width","NavbarBrand","href","NavbarToggler","navbar","Nav","NavItem","NavLink","faDiscord","toggleFeedback","faComments","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","ModalFooter","Source","source","addNumber","Badge","ExpansionPanelSummary","aria-controls","id","getSourceOption","ExpansionPanelDetails","RadioGroup","siteChange","Radio","Divider","Dropzone","newFiles","filesChange","acceptedFiles","dropzoneText","handleFileChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","NotableChessGames","updateDetails","option","profile","imageUrl","subText","list","options","selectedDetail","placeholder","renderOption","renderDetails","selectedEvent","playerNameError","player","validateInputDetailsSet","playerDetailsChange","finalPlayerName","helperText","TextField","editPlayerName","onKeyUp","playerNameKeyUp","setPlayerDetails","notablePlayers","notablePlayerChange","notableEvents","notableEventChange","getPlayerNameInput","Card","CardBody","CardTitle","faInfoCircle","CardText","getPgnFileSelection","getGoatDBEventSelection","getGoatDBSelection","getOpeningTreeSelection","getInputsToShow","ExpansionPanelActions","PGNLoader","settings","panel","newExpanded","playername","graph","nodes","openingTreeSave","setEntries","importCallback","gamesDetails","newSite","fetchGOATGames","filters","Filters","SettingsView","eventName","reset","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ControlsContainer","stopPropagation","simplifiedView","multiline","rowsMax","inputProps","style","fontSize","spellCheck","copyFen","moveDetails","lastPlayedGame","getFenField","switchToUserTab","faUser","performanceDetails","totalOpponentElo","whiteWins","blackWins","Table","eatClicks","isNaN","TableHead","TableRow","TableCell","TableBody","bestWin","launchGame","bestWinGame","faExternalLinkAlt","worstLoss","worstLossGame","removeQuestionMarksFromDate","TableFooter","colSpan","rel","indexOf","MovesList","openPerformanceIndex","to","onMove","prevProps","prevState","turnColor","moveIndex","movesToShow","gameResults","resultsTable","movesTable","whitePlayer","blackPlayer","performancePopoverOpen","openMove","Popover","trigger","togglePerformancePopover","details","hasMoves","sampleResultWhite","sampleResultBlack","sampleResult","count","orig","dest","getPopover","Progress","multi","bar","activeTab","activeGame","tab","entry","tabs","classnames","active","faChartBar","faCog","TabContent","TabPane","tabId","settingsChange","updateProcessedGames","getDetailsForFen","turn","brushes","forBrushes","againstBrushes","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","promotion","lastMove","onMoveAction","navigateTo","previousMove","totalGamesProcessed","downloadingGames","moveToShape","brush","level","autoShapes","shapes","fillArray","movesForFen","gameResultsForFen","len","trackingEvent","subMessage","messageSeverity","trackingLabel","closeError","diagnosticsOpen","feedbackOpen","diagnosticsDataOpen","toggleDiagnosticsData","copyDiagnostics","importGameState","importState","getChessboardWidth","innerWidth","getDiagnosticsValue","navigator","userAgent","getRedditLink","getSubject","getBody","getEmailLink","addStateManagement","obj","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","iconVariant","opacity","marginRight","spacing","alignItems","classes","onClose","onReport","showReportButton","other","Icon","SnackbarContent","clsx","aria-describedby","IconButton","aria-label","MainContainer","chessboardWidth","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ModalBody","ReactDOM","render","isAdvancedFiltersEnabled","isFilterPanelEnabled","treeSaveDisabledReason","selectedSite","exportFileName","extension","OpeningGraph","Graph","arrayEntries","fullFen","getNodeFromGraph","targetNode","newDetails","getUpdatedMoveDetails","fullSourceFen","fullTargetFen","currNode","movePlayedBy","createOrGetMoveNode","playedBy","playedByMax","GraphNode","set","movesPlayedNode","movePlayed","GraphMove","currentMoveDetails","whiteWin","blackWin","draw","resultInt","parseInt","Array","gMove","levelFor","moveCount","maxCount","Map","peg$SyntaxError","expected","found","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","description","hex","ch","charCodeAt","toUpperCase","j","descriptions","describeExpected","describeFound","module","exports","SyntaxError","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","h","c","mr","r","reduce","acc","x","comment","make_game","peg$c4","peg$c6","peg$literalExpectation","peg$c7","peg$c8","peg$classExpectation","peg$c10","peg$c11","peg$c12","peg$c13","peg$c15","peg$c16","peg$c17","chars","peg$c19","peg$c21","peg$c23","peg$c25","peg$c27","peg$c29","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c41","peg$c42","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c53","peg$c57","peg$c58","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c69","peg$c71","peg$c73","peg$c74","peg$c75","peg$c77","peg$c79","peg$c82","peg$c84","peg$c85","flatten","isArray","peg$c86","mn","peg$c88","nags","com","peg$c92","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","peg$parsegame","peg$parsenewline","charAt","peg$parseEOF","g","s6","s7","peg$parseheader","peg$parseheaders","peg$parsecomment","peg$parsewhitespace","peg$parsemovetext","peg$parseresult","peg$c2","peg$parsedouble_quote","peg$parseinteger","test","peg$parsews","peg$parsesymbol","peg$parsestring","hn","hv","make_header","peg$parsepiece","peg$parserank","peg$parsefile","peg$parsecapture","peg$parseperiod","substr","peg$parsesquare","peg$parsenag","peg$parsecomment_chars","peg$parsepawn_half_move","peg$parsepromotion","peg$parsehalf_move","peg$parsecontinuation","peg$parsecastle_half_move","peg$parsepiece_disambiguation_half_move","peg$parsepiece_half_move","peg$parsecheck","peg$parsecheckmate","peg$parsenag_alts","peg$parsemove","s8","s9","peg$parsemove_number","peg$parserav","ravs","make_move","first","rest","concat"],"mappings":"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","file":"static/js/main.8c0d67e3.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\nexport const SITE_EVENT_DB = \"eventdb\"\nexport const SITE_PLAYER_DB = \"playerdb\"\nexport const SITE_OPENING_TREE_FILE = \"opntfile\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\nexport const EVENT_CATEGORY_MESSAGE_SHOWN = \"message\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500\n\nexport const OPENING_TREE_EMAIL = 'feedback@openingtree.com'\nexport const OPENNIG_TREE_REDDIT = 'opening_tree'\nexport const OPENING_TREE_LICHESS = 'vannooz'\nexport const OPENING_TREE_CHESS_COM = 'vannooz'\nexport const OPENING_TREE_DISCORD = 'https://discord.gg/hCwKkN8'","import zlib from 'zlib'\nimport {Buffer} from 'buffer'\nimport { saveAs } from 'file-saver';\n\nexport function serializeOpeningTree(treeData, filename, callback) {\n    console.log(treeData)\n    let chunkedArray = chunk(treeData)\n    let deflatedChunks = []\n    console.log(chunkedArray.length)\n    //push version number 1 for later backward compatibility\n    deflatedChunks.push(packControlWord(0x1))\n    deflatedChunks.push(packControlWord(chunkedArray.length))\n    let remainingChunks = chunkedArray.length\n    let hasError = false;\n    chunkedArray.forEach((chunk)=>{\n        zlib.deflate(\n            new Buffer(JSON.stringify(chunk)), \n            (error,data)=>{\n                remainingChunks--\n                if(error) {\n                    hasError = true\n                }\n                deflatedChunks.push(packControlWord(data.byteLength))\n                deflatedChunks.push(data)\n                if(remainingChunks<=0) {\n                    if(hasError) {\n                        callback(\"Could not save file\")\n                        return\n                    }\n                    saveAs(new Blob(deflatedChunks, {type: \"application/octet-stream\"}), filename)\n                    callback(null, `Saved opening tree to file ${filename}`)\n                }\n            });\n        })\n}\n\nexport function deserializeOpeningTree(file, callback) {\n    let reader = new FileReader()\n    reader.onload = function(evt) {\n        let data = evt.target.result\n        let index = 0\n        let version = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(version !== 0x1) {\n            callback(\"File is not an openingtree save file.\", null,\"Are you loading the correct file?\")\n            return\n        }\n        let numChunks = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(!numChunks) {\n            callback(\"Input file not in correct format\", null)\n            return\n        }\n        getInflatedChunks(data, index, numChunks, callback)\n    };\n    reader.onerror = function(e) {\n        callback(\"Failed to read openingtree file\", null, `${e.target.error.name}:${e.target.error.message}`)\n    }\n    reader.readAsArrayBuffer(file)\n}\n\nfunction getInflatedChunks(data, startIndex, numChunks, callback) {\n    let index = startIndex\n    let deflatedChunks = []\n    let remainingChunks = numChunks\n    let hasError=false\n    let handleInflate = (error, data)=> {\n        remainingChunks--\n        if(error) {\n            console.log(error)\n            hasError=true\n        }\n        try {\n            deflatedChunks.push(JSON.parse(data))\n        } catch (e) {\n            console.log(e)\n            hasError=true\n        }\n        if(remainingChunks===0) {\n            if(hasError) {\n                callback(\"Input file seems corrupted\", null)\n            }\n            \n            callback(null, reconstructObjectFromChunks(deflatedChunks))\n        }\n        \n    }\n    while(numChunks>0) {\n        let chunkSize = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        zlib.inflate(\n            Buffer.from(data,index,chunkSize), handleInflate)\n        index = index + chunkSize\n        numChunks--\n    }\n}\n\nfunction reconstructObjectFromChunks(deflatedChunks) {\n    let sortedChunks = deflatedChunks.sort((a,b)=>a.index-b.index)\n    return {\n        object:sortedChunks[0].chunk,\n        array:sortedChunks.slice(1).map((el)=>el.chunk).flat()\n    }\n}\n\nfunction unpackControlWord(control) {\n    let view = new DataView(control)\n    if(view.getUint16(0)!==0x1337 || view.getUint16(6)!==0xC0D3) {\n        return null\n    }\n    return view.getUint32(2)\n}\n\nfunction packControlWord(control) {\n    var buffer = new ArrayBuffer(8); \n    var view = new DataView(buffer); \n    view.setUint16(0, 0x1337)\n    view.setUint32(2, control>>>0)\n    view.setUint16(6, 0xC0D3)\n    return buffer\n}\n\nfunction chunk(treeData) {\n    let chunk1 = {chunk:treeData.object, index:0}\n    return [chunk1,...chunkArray(treeData.array, 1000)]\n}\n\nfunction chunkArray(array, chunkSize) {\n    let chunkedArray=[]\n    \n    for (let i=0, chunkIndex=1; i<array.length; i+=chunkSize, chunkIndex++) {\n        chunkedArray.push({chunk:array.slice(i,i+chunkSize), index:chunkIndex});\n    }\n    return chunkedArray\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport React from 'react'\nimport { createSubObjectWithProperties } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const ExpansionPanel = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nexport function getNumberIcon(n) {\n    return <img alt={`step ${n}`} className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}\n\nexport function copyText(elementId) {\n    /* Get the text field */\n    var copyText = document.getElementById(elementId);\n    try {\n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n        return true\n    } catch(e) {\n        return false\n    }\n}","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            frmYear:currentDate.getYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageElo = Math.round(totalElo/totalGames)\n    let playerWins = playerColor === Constants.PLAYER_COLOR_WHITE?white:black\n    let playerLosses = playerColor !== Constants.PLAYER_COLOR_WHITE?white:black\n    let score = playerWins+(draws/2)\n    let scorePercentage = Math.round(score*100/totalGames)\n    let ratingChange = Common.DP_TABLE[scorePercentage]\n    return {\n        results:`+${playerWins}-${playerLosses}=${draws}`,\n        performanceRating:averageElo+ratingChange,\n        averageElo: averageElo,\n        score:`${Number.isInteger(score)?score:score.toFixed(1)}/${totalGames}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport { Radio, FormControlLabel, RadioGroup, FormHelperText, FormControl, FormLabel} from '@material-ui/core';\nimport deepEqual from 'deep-equal'\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(event) {\n        let playerColor = event.target.value\n        this.setState({ playerColor: playerColor })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        if(!SitePolicy.isAdvancedFiltersEnabled(this.props.site)) {\n            setImmediate(this.setFilters.bind(this))\n        }\n}\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        if(!this.state.playerColor) {\n            this.setState({colorError:\"Please select a color\"})\n            return\n        }\n        this.setState({colorError:\"\"})\n        this.props.filtersChange(this.state)\n    }\n    getSummary(isDisabled) {\n        if(this.props.playerColor && !isDisabled) {\n            return <span>\n                {getNumberIcon('done')}\n                Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n                {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    componentWillReceiveProps(newProps) {\n        this.setState({...newProps.advancedFilters, playerColor:newProps.playerColor})\n    }\n\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key]===value) {\n                continue\n            }\n            if(!deepEqual(this.props.advancedFilters[key], value)) {\n                return true\n            } \n        }\n        return false\n    }\n\n    \n    render(){\n        let isDisabled = !SitePolicy.isFilterPanelEnabled(this.props.site, this.props.playerName, this.props.selectedNotablePlayer)\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={isDisabled}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary(isDisabled)}</ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloaderfirstsection\">\n                <FormControl component=\"fieldset\" error={!!this.state.colorError}>\n                    <FormLabel component=\"legend\">Games where <b>{this.props.playerName}</b> is playing as:</FormLabel>\n                    <RadioGroup onChange={this.playerColorChange.bind(this)} value={this.state.playerColor}>\n                        <FormControlLabel className=\"whitelabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_WHITE} label={this.state.playerColor === Constants.PLAYER_COLOR_WHITE?<b>White</b>:\"White\"}/>\n                        <FormControlLabel className=\"blacklabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_BLACK} label={this.state.playerColor === Constants.PLAYER_COLOR_BLACK?<b>Black</b>:\"Black\"}/>\n                    </RadioGroup>\n                    <FormHelperText>{this.state.colorError}</FormHelperText>\n                </FormControl>\n                </div>\n                {SitePolicy.isAdvancedFiltersEnabled(this.props.site)?<div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse>\n                </div>:null}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Continue</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n    \n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReader'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp'\nimport Equalizer from '@material-ui/icons/Equalizer'\nimport Fade from '@material-ui/core/Fade'\nimport Save from '@material-ui/icons/Save';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {Tooltip} from '@material-ui/core'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport {serializeOpeningTree, deserializeOpeningTree} from '../../app/OpeningTreeSerializer'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false,\n            exportingInProgress : false\n        }\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n    importTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"LoadTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.importOpeningTree.bind(this))\n    }\n    importOpeningTree() {\n        deserializeOpeningTree(this.props.files[0], \n            (err,data, subMesage)=> {\n                if(err) {\n                    this.props.showError(err, null, subMesage)\n                    this.setState({exportingInProgress:false})\n                    return\n                }\n                this.props.importOpeningTreeObject(data)\n                this.setState({exportingInProgress:false})\n                this.props.showInfo(\"Successfuly loaded openingtree\")                \n            })\n    }\n    exportTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"SaveTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.exportOpeningTree.bind(this))\n    }\n    exportOpeningTree() {\n        serializeOpeningTree(this.props.exportOpeningTreeObject(), \n            SitePolicy.exportFileName(this.props.site, this.props.playerName, this.props.playerColor, null, \"tree\"), \n            (err, info) => {\n                if(err) {\n                    this.props.showError(err)                    \n                } else {\n                    this.props.showInfo(info)\n                }\n                this.setState({exportingInProgress:false})\n            })\n    }\n\n\n    readPgn(shouldDownloadToFile) {\n        this.pgnReader = new PGNReader()\n        this.pgnReader.fetchPGNFromSite(this.props.playerName,\n            this.props.playerColor,\n            this.props.site,\n            this.props.selectedNotablePlayer,\n            this.props.selectedNotableEvent,\n            shouldDownloadToFile,\n            this.props.advancedFilters,\n            this.props.notify,\n            this.props.showError,\n            this.stopDownloading.bind(this),\n            this.props.files)\n    }\n\n    download() {\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    getPlayerName() {\n        if(this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.props.selectedNotablePlayer.name\n        }\n        return this.props.playerName\n    }\n    componentWillReceiveProps(newProps) {\n        if(newProps.gamesProcessed>0) {\n            this.setState({isGamesSubsectionOpen:true})\n        }\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true, loadedSite:this.props.site })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    openingTreeLoadActions() {\n        return <div className=\"pgnloadersection\">\n            <MaterialUIButton\n            onClick={this.importTreeClicked.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<GetApp/>}\n            className=\"mainButton\" disableElevation\n            disabled={this.state.exportingInProgress}\n            >\n                {this.state.exportingInProgress?\"Loading from file\":\"Load openingtree\"}\n        </MaterialUIButton></div>\n    }\n    regularActions() {\n        let downloadDisabledReason = SitePolicy.treeSaveDisabledReason(\n                                        this.state.loadedSite, \n                                        this.props.site,\n                                        this.props.gamesProcessed, \n                                        this.props.isDownloading)\n        return <div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            <div className=\"pgnloadersection\"><Tooltip placement=\"top\" title={downloadDisabledReason||\"Save a .tree file locally for faster reload later\"}>\n                <span><MaterialUIButton\n                onClick={this.exportTreeClicked.bind(this)}\n                variant=\"contained\"\n                color=\"default\"\n                startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<Save/>}\n                className=\"mainButton\" disableElevation\n                disabled={!!downloadDisabledReason || this.state.exportingInProgress}\n                >\n                    {this.state.exportingInProgress?\"Saving to file\":\"Save openingtree\"}\n                </MaterialUIButton></span></Tooltip></div>\n            }\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {!this.props.playerColor?\"Games\":this.props.playerColor === Constants.PLAYER_COLOR_WHITE?\"White games\":\"Black games\"}{` loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves>>\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    mainComponent() {\n        if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.openingTreeLoadActions()\n        }\n        return this.regularActions()\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import normalizeNewLine from 'normalize-newline'\n\nexport function normalizePGN(pgnString) {\n    // parser cannot handle \\r characters\n    // normalize newlines coverts everything to \\n\n    let dataString = normalizeNewLine(pgnString)\n\n    // Remove Single line commments because parser does not handle them\n    dataString = dataString.replace(/^;.*$/gm, '')\n\n    // Remove escaped quotes from headers\n    dataString = dataString.replace(/\\\\\"/gm, '')\n    \n    // some pgn files dont have triple \\n separating games\n    // so converting all double \\n with triple \\n if it happens before a [\n    // this separates games with atleast a triple \\n\n    dataString = dataString.replace(/\\n\\n+\\[/g, `\\n\\n\\n[`);\n\n    // some pgn files have the result in a separate line instead of \n    // at the end of the moves this moves those results to the end of the moves\n    // $1 replaces the first captured group which is the result\n    dataString = dataString.replace(/\\s*\\n+(1-0|0-1|1\\/2-1\\/2)/g, ` $1`);\n\n    return dataString\n}\n","import request from 'request'\nimport {normalizePGN} from './IteratorUtils'\nimport {trimString} from '../Common'\n\nexport default class BaseUrlIterator {\n\n    constructor(url, shouldNormalizePGN, responseCodeCallback, errorCallback, dataCallback, endCallback) {\n        let remainingBody=''\n\n        let requestObject = request.get(\n                url, \n                { json: false }).on('error', errorCallback)\n            .on('response',(response)=>{\n                return responseCodeCallback(response.statusCode)\n            }).on('data', (data) => {\n                let newBody = shouldNormalizePGN? \n                    normalizePGN(remainingBody + data.toString()):\n                    remainingBody + data.toString()\n                let lastValidPGN = newBody.lastIndexOf(`\\n\\n\\n`)\n                let body = newBody.slice(0, lastValidPGN)\n\n                remainingBody = newBody.slice(lastValidPGN)\n                if(!this.callDataCallback(body, dataCallback)) {\n                    requestObject.abort()\n                }\n            }).on('end', () => {\n                this.callDataCallback(remainingBody, dataCallback)\n                endCallback()\n            })\n    }\n\n    callDataCallback(body, dataCallback) {\n        let pgnArray = body.split(`\\n\\n\\n`)\n            .map(\n                pgnString=> trimString(pgnString)\n            )\n        return dataCallback(pgnArray)\n\n    }\n}","import { parse }  from '../PGNParser'\nimport {getTimeControlsArray, getTimeframeSteps, getSelectedTimeFrameData, isOpponentEloInSelectedRange} from '../util'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport BaseUrlIterator from './BaseUrlIterator'\n\nexport default class LichessIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let lichessBaseURL = `https://lichess.org/api/games/user/`\n        let playerNameFilter = encodeURIComponent(playerName)\n        let colorFilter = `?color=${playerColor}`\n        let ratedFilter = `${advancedFilters[Constants.FILTER_NAME_RATED]===\"all\"?\"\":`&rated=${advancedFilters[Constants.FILTER_NAME_RATED]===\"rated\"?\"true\":\"false\"}`}`\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let timeSinceFilter = `${selectedTimeFrameData.fromTimeStamp?`&since=${selectedTimeFrameData.fromTimeStamp}`:\"\"}`\n        let timeUntilFilter = `${selectedTimeFrameData.toTimeStamp?`&until=${selectedTimeFrameData.toTimeStamp}`:\"\"}`\n        let selectedTimeControls = getTimeControlsArray(Constants.SITE_LICHESS, advancedFilters, true)\n        let perfFilter = selectedTimeControls.length === 0 || selectedTimeControls.length === 6?\n                \"\" : `&perfType=${selectedTimeControls.join(\",\")}`\n        new BaseUrlIterator(lichessBaseURL+playerNameFilter+colorFilter+ratedFilter+perfFilter+timeSinceFilter+timeUntilFilter, false,\n            (responseCode)=>{\n                if(responseCode === 404) {\n                    showError('Could not find lichess user ' + playerName)\n                } else if (responseCode !== 200) {\n                    showError('Could not load games of lichess user ' + playerName)\n                }\n            }, (error)=> {\n                showError('Failed to connect to lichess.org. Lichess might be down right now', null, \"Some addons like 'Piracy Badger' can also cause this.\")\n                ready([], false)\n            }, (pgnStringArray) => {\n                let parsedPGNs = pgnStringArray.map((pgnString)=> {\n                    try {\n                        return parse(pgnString)[0]\n                    } catch (e) {\n                        console.log(\"Failed to parse pgn\", pgnString)\n                        console.log(e)\n                        trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedLichess\", playerName)\n                        return null\n                    }\n                })\n    \n                let continueProcessing = ready(parsedPGNs.filter((pgn)=>{\n                    if(!pgn || pgn.headers.Variant !== \"Standard\") {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?pgn.headers.BlackElo:pgn.headers.WhiteElo\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true\n                }), true)\n                return continueProcessing\n            }, ()=>{\n                ready([], false)\n            })\n    }\n}\n","import ChessWebAPI from 'chess-web-api'\nimport { parse }  from '../PGNParser'\nimport request from 'request'\nimport * as Constants from '../Constants'\nimport {isOpponentEloInSelectedRange, getTimeframeSteps, getSelectedTimeFrameData} from '../util'\nimport {trackEvent} from '../Analytics'\nimport {normalizePGN} from './IteratorUtils'\n\nexport default class ChessComIterator {\n\n    constructor(playerName, playerColor, advancedFilters, ready, showError) {\n        let chessAPI = new ChessWebAPI({\n            queue: true,\n        });\n        let pendingRequests = 0;\n        let parseGames= (archiveResponse)=>{\n            pendingRequests--\n            let continueProcessing = ready(archiveResponse.body.games.filter(\n                game=>{\n                    if(game.rules!==\"chess\" || game[playerColor].username.toLowerCase() !== playerName.toLowerCase()) {\n                        return false\n                    }\n                    let ratedMode = advancedFilters[Constants.FILTER_NAME_RATED]\n                    if(ratedMode === 'rated' && !game.rated) {\n                        return false\n                    } else if (ratedMode === 'casual' && game.rated) {\n                        return false\n                    }\n                    if(!advancedFilters[game.time_class]) {\n                        return false\n                    }\n                    let opponentElo = playerColor === Constants.PLAYER_COLOR_WHITE?game.black.rating:game.white.rating\n                    if(!isOpponentEloInSelectedRange(opponentElo, advancedFilters[Constants.FILTER_NAME_ELO_RANGE])) {\n                        return false\n                    }\n                    return true \n                }).map(\n                    game=> {\n                        try {\n                            return parse(normalizePGN(game.pgn))[0]\n                        } catch (e) {\n                            console.log(\"failed to parse pgn\", game)\n                            console.log(e)\n                            trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedChessCom\", `${playerName}:${playerColor}`)\n                            return null\n                        }\n                    }).filter(game=> game !== null), pendingRequests>0)\n            if(!continueProcessing) {\n                //cancel all pending requests\n                while(chessAPI.dequeue()){}\n                pendingRequests = 0\n                ready([],false)\n            }\n        }\n        let shouldFetchGamesFromArchive = (archiveMonth,archiveYear, selectedTimeFrameData) => {\n            let fromYear = selectedTimeFrameData.fromYear || 1970\n            let toYear = selectedTimeFrameData.toYear || 10000\n            let fromMonth = selectedTimeFrameData.fromYear || 0\n            let toMonth = selectedTimeFrameData.toYear || 11\n    \n            if(archiveYear>fromYear && archiveYear<toYear) {\n                return true\n            }\n            if(archiveYear<fromYear || archiveYear>toYear) {\n                return false\n            }\n            if(archiveYear === fromYear) {\n                return archiveMonth >= fromMonth\n            }\n            if(archiveYear === toYear) {\n                return archiveMonth <= toMonth\n            }\n            console.log(\"should not happen\")\n            return true\n        }\n        let selectedTimeFrameData = getSelectedTimeFrameData(advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], getTimeframeSteps())\n        let fetchAllGames = function(responseBody) {\n            responseBody.archives.reverse().forEach((archiveUrl)=>{\n\n                let components=archiveUrl.split('/')\n                let year=components[components.length-2]\n                let month=components[components.length-1]\n                if(shouldFetchGamesFromArchive(month,year, selectedTimeFrameData)) {\n                    pendingRequests++\n                    chessAPI.dispatch(chessAPI.getPlayerCompleteMonthlyArchives, parseGames, [playerName, year, month]);\n                }\n            })\n            if(pendingRequests === 0) {\n                showError('Could not find games for chess.com user '+playerName)\n                ready([], false)\n            }\n        }\n\n        request(`https://api.chess.com/pub/player/${playerName}/games/archives`, function (error, response, body) {\n            if(error) {\n                showError('Failed to connect to chess.com. chess.com might be down at the moment', null, \"Some addons like 'Piracy Badger' can also cause this.\")\n                ready([], false)\n            } else if(response.statusCode === 404) {\n                showError('Could not find chess.com user '+playerName)\n                ready([], false)\n            } else if (response.statusCode !== 200) {\n                showError('Could not load games for chess.com user '+playerName)\n                ready([], false)\n            } else {\n                if(response.body) {\n                    try{\n                        let jsonBody = JSON.parse(response.body)\n                        fetchAllGames(jsonBody)\n                    }catch(e) {\n                        showError('Could not find games for chess.com user '+playerName)\n                        ready([], false)\n                    }\n                }\n            }\n        });\n    }\n\n\n}","import { parse }  from '../PGNParser'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport {normalizePGN} from './IteratorUtils'\nimport {trimString} from '../Common'\n\nexport default class LichessIterator {\n\n    constructor(playerName, files, playerColor, advancedFilters, ready, showError) {\n        files.forEach((file)=>{\n            let reader = this.setupReader(playerName, playerColor, advancedFilters, ready, showError)\n            reader.readAsText(file)\n        })\n    }\n\n    setupReader(playerName, playerColor, advancedFilters, ready, showError) {\n        let reader = new FileReader()\n        let playerColorHeaderName = playerColor === Constants.PLAYER_COLOR_WHITE? 'White': 'Black'\n        let lowerCasePlayerName = playerName? playerName.toLowerCase() : null\n        reader.onload = function(evt) {\n            let fileData = normalizePGN(evt.target.result);\n            let pgnsArray = fileData.split(\"\\n\\n\\n\")\n\n            let parsedPGNs = pgnsArray.map((pgnString)=> {\n                try {\n                    let parsedPGN =  parse(trimString(pgnString))[0]\n                    let playerColorHeaderValue = parsedPGN.headers[playerColorHeaderName]\n                    if(playerName && playerColorHeaderValue && !playerColorHeaderValue.toLowerCase().includes(lowerCasePlayerName)) {\n                        // filter out games not from selected player\n                        return null\n                    }\n                    return parsedPGN\n                } catch (e) {\n                    console.log(\"failed to parse pgn\", pgnString)\n                    console.log(e)\n                    trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNFile\", playerName)\n                    return null\n                }\n            })\n            ready(parsedPGNs.filter(pgn=>!!pgn), true)\n        };\n        reader.onerror = function(e) {\n            showError(\"Failed to load pgn file\", null, e.target.error.name+\":\"+e.target.error.message)\n            ready([], false)\n        }\n        reader.onloadend = function() {\n            ready([], false)\n        }\n        return reader\n    }\n}","import { parse }  from '../PGNParser'\nimport * as Constants from '../Constants'\nimport {trackEvent} from '../Analytics'\nimport BaseUrlIterator from './BaseUrlIterator'\n\nexport default class PGNUrlIterator {\n\n    constructor(url, lowerCasePlayerNames, playerColor, advancedFilters, ready, showError) {\n        let playerColorHeaderName = playerColor === Constants.PLAYER_COLOR_WHITE? 'White': 'Black'\n        new BaseUrlIterator(url, true, \n            (responseCode)=>{\n                if (responseCode !== 200) {\n                    showError('Could not load url')\n                }\n            }, (error)=> {\n                showError('Could not connect to url')\n                ready([], false)\n            }, (pgnStringArray) => {\n                let parsedPGNs = pgnStringArray.map((pgnString)=> {\n                    try {\n\n                        return parse(pgnString)[0]\n                    } catch (e) {\n                        console.log(\"Failed to parse pgn\", pgnString)\n                        console.log(e)\n                        trackEvent(Constants.EVENT_CATEGORY_ERROR, \"parseFailedPGNUrl\")\n                        return null\n                    }\n                })\n    \n                let continueProcessing = ready(parsedPGNs.filter((game)=>{\n                    if(!game) {\n                        return false\n                    }\n                    if(lowerCasePlayerNames && !lowerCasePlayerNames.includes(game.headers[playerColorHeaderName].toLowerCase())) {\n                        return false\n                    }\n                    return true\n                }), true)\n                return continueProcessing\n            }, ()=>{\n                ready([], false)\n            })\n    }\n\n}\n","import PGNUrlIterator from './PGNUrlIterator'\n\nexport default class NotablePlayerIterator {\n\n    constructor(selectedPlayer, playerColor, advancedFilters, ready, showError) {\n        let lowerCaseAliases = selectedPlayer.pgnAliases?selectedPlayer.pgnAliases.map(alias=>alias.toLowerCase()):null\n        new PGNUrlIterator(selectedPlayer.pgnUrl, lowerCaseAliases, playerColor, advancedFilters, ready, showError)\n    }\n\n}\n","import {openingGraph} from './OpeningGraph'\nimport Chess from 'chess.js'\nimport LichessIterator from './iterator/LichessIterator'\nimport ChessComIterator from './iterator/ChessComIterator'\nimport PGNFileIterator from './iterator/PGNFileIterator'\nimport * as Constants from './Constants'\nimport streamsaver from 'streamsaver'\nimport NotablePlayerIterator from './iterator/NotablePlayerIterator'\nimport * as SitePolicy from './SitePolicy'\n\nexport default class PGNReader {\n    constructor() {\n        this.totalGames = 0;\n        this.pendingGames = 0;\n        this.pendingDownloads = true;\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.fileWriter = null\n    }\n\n    stopDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n\n    fetchPGNFromSite(playerName, playerColor, site, selectedNotablePlayer,\n        selectedNotableEvent, shouldDownloadToFile, advancedFilters, notify, \n        showError, stopDownloading, files) {\n        this.continueProcessingGames = true\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(SitePolicy.exportFileName(site, playerName, playerColor, selectedNotableEvent, \"pgn\"))\n            this.fileWriter = fileStream.getWriter()\n        }\n        let encoder = new TextEncoder()\n        let downloadResponse = (result, pendingDownloads) => {\n            this.fileWriter.write(encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n                if(!pendingDownloads) {\n                    this.stopDownloading()\n                }\n            })\n            return true\n        }\n        let handleResponse = (result, pendingDownloads) => {\n            if(!result) {\n                return this.continueProcessingGames\n            }\n            this.totalGames += result.length\n            this.pendingGames += result.length\n            this.pendingDownloads = pendingDownloads\n            \n\n            setTimeout(() => {\n                this.parsePGNTimed(site, result, advancedFilters, playerColor, 0, playerName, notify, showError, stopDownloading)\n            } ,1)\n            return this.continueProcessingGames\n        }\n        let processor = shouldDownloadToFile? downloadResponse: handleResponse\n        if (site === Constants.SITE_LICHESS) {\n            new LichessIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_CHESS_DOT_COM) {\n            new ChessComIterator(playerName, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PGN_FILE) {\n            new PGNFileIterator(playerName, files, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_PLAYER_DB) {\n            new NotablePlayerIterator(selectedNotablePlayer, playerColor, advancedFilters, processor, showError)\n        } else if (site === Constants.SITE_EVENT_DB) {\n            new NotablePlayerIterator(selectedNotableEvent, playerColor, advancedFilters, processor, showError)\n        } \n\n        \n    }\n\n    parsePGNTimed(site, pgnArray, advancedFilters, playerColor, index,  playerName, notify, showError, stopDownloading) {\n        if(index< pgnArray.length) {\n            this.pendingGames--\n        }\n        if(!this.pendingDownloads && this.pendingGames <= 0) {\n            stopDownloading()\n        }\n\n        if(index>= pgnArray.length || !this.continueProcessingGames) {\n            return\n        }\n\n        var pgn = pgnArray[index]\n        if(pgn.moves[0] && pgn.moves[0].move_number === 1) {\n            let chess = new Chess()\n            let resultObject = this.gameResult(pgn, site)\n            let pgnParseFailed = false;\n            pgn.moves.forEach(element => {\n                let sourceFen = chess.fen()\n                let move = chess.move(element.move, {sloppy: true})\n                let targetFen = chess.fen()\n                if(!move){\n                    pgnParseFailed=true\n                    return\n                }\n                openingGraph.addMoveForFen(sourceFen, targetFen, move, resultObject, playerColor)\n            })\n            if(pgnParseFailed) {\n                console.log('failed to load game ',  pgn)\n                showError(\"Failed to load a game\", `${playerName}:${playerColor}`)\n            }\n                    \n            let fen = chess.fen()\n            openingGraph.addGameResultOnFen(fen, resultObject)\n            openingGraph.addResultToRoot(resultObject, playerColor)\n            this.continueProcessingGames = notify(advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT],1, openingGraph)\n        }\n            setTimeout(()=>{this.parsePGNTimed(site, pgnArray, advancedFilters, playerColor, index+1, playerName, notify, showError, stopDownloading)},1)\n    }\n\n    gameResult(pgn, site) {\n        let url= null \n        if (site === Constants.SITE_CHESS_DOT_COM) {\n            url = pgn.headers.Link\n        } else if(site === Constants.SITE_LICHESS) {\n            url = pgn.headers.Site\n        }\n        let headers=null\n        if(!url) {\n            headers = pgn.headers\n        }\n        return {\n            result:pgn.result,\n            white:pgn.headers.White,\n            black:pgn.headers.Black,\n            whiteElo:pgn.headers.WhiteElo,\n            blackElo:pgn.headers.BlackElo,\n            url:url,\n            date:pgn.headers.Date,\n            headers:headers\n        }\n    }\n}","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport function trimString(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport const DP_TABLE = {\n    \"100\":800,   \"99\":677,    \"98\":589,    \"97\":538,\n    \"96\":501,    \"95\":470,    \"94\":444,    \"93\":422,\n    \"92\":401,    \"91\":383,    \"90\":366,    \"89\":351,\n    \"88\":336,    \"87\":322,    \"86\":309,    \"85\":296,\n    \"84\":284,    \"83\":273,    \"82\":262,    \"81\":251,\n    \"80\":240,    \"79\":230,    \"78\":220,    \"77\":211,\n    \"76\":202,    \"75\":193,    \"74\":184,    \"73\":175,\n    \"72\":166,    \"71\":158,    \"70\":149,    \"69\":141,\n    \"68\":133,    \"67\":125,    \"66\":117,    \"65\":110,\n    \"64\":102,    \"63\":95,     \"62\":87,     \"61\":80,\n    \"60\":72,     \"59\":65,     \"58\":57,     \"57\":50,\n    \"56\":43,     \"55\":36,     \"54\":29,     \"53\":21,\n    \"52\":14,     \"51\":7,      \"50\":0,      \"49\":-7,\n    \"48\":-14,    \"47\":-21,    \"46\":-29,    \"45\":-36,\n    \"44\":-43,    \"43\":-50,    \"42\":-57,    \"41\":-65,\n    \"40\":-72,    \"39\":-80,    \"38\":-87,    \"37\":-95,\n    \"36\":-102,   \"35\":-110,   \"34\":-117,   \"33\":-125,\n    \"32\":-133,   \"31\":-141,   \"30\":-149,   \"29\":-158,\n    \"28\":-166,   \"27\":-175,   \"26\":-184,   \"25\":-193,\n    \"24\":-202,   \"23\":-211,   \"22\":-220,   \"21\":-230,\n    \"20\":-240,   \"19\":-251,   \"18\":-262,   \"17\":-273,\n    \"16\":-284,   \"15\":-296,   \"14\":-309,   \"13\":-322,\n    \"12\":-336,   \"11\":-351,   \"10\":-366,   \"9\":-383,\n    \"8\":-401,    \"7\":-422,    \"6\":-444,    \"5\":-470,\n    \"4\":-501,    \"3\":-538,    \"2\":-589,    \"1\":-677,\n    \"0\":-800,\n}","import * as Constants from './Constants'\n\nexport default class OpeningManager {\n    plys = [{pgn:'', fen:Constants.ROOT_FEN, move:null}]\n    currentIndex = 0\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager()\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n          default:\n            break\n\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                this.openingManager = new OpeningManager()\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faComments, faCaretDown} from '@fortawesome/free-solid-svg-icons'\nimport { faDiscord } from '@fortawesome/free-brands-svg-icons'\nimport * as Constants from '../app/Constants'\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  NavItem, NavLink\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n\n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle}/>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(\"https://www.youtube.com/watch?v=AJ66-HqdpXE\")}>\"It's so powerful\" - IM Eric Rosen <span className=\"smallText\">[Watch video]</span></NavLink></NavItem>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(Constants.OPENING_TREE_DISCORD)}><FontAwesomeIcon icon={faDiscord} className=\"discordIcon\"/> Join our discord</NavLink></NavItem>\n          </Nav>\n          <Nav className=\"\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={props.toggleFeedback}><FontAwesomeIcon icon={faComments} className=\"feedbackIcon\"/> Send feedback</NavLink></NavItem>\n          </Nav>\n          <UncontrolledDropdown>\n              <DropdownToggle className=\"bootNavColor\" nav>\n              <FontAwesomeIcon icon={faCaretDown} className=\"moreIcon\"/>More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.openingtree.com/old\")}>\n                  Old version\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      \n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.npmjs.com/package/material-ui-dropzone\" target=\"_blank\" action>Dropzone</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.pgnmentor.com\" target=\"_blank\" action>PGN Mentor</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.twitch.tv/imrosen\" target=\"_blank\" action>IM Eric Rosen</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\nimport People from '@material-ui/icons/People';\nimport Save from '@material-ui/icons/Save';\nimport Divider from '@material-ui/core/Divider';\nimport DateRange from '@material-ui/icons/DateRange';\nimport {Badge} from 'reactstrap'\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> Upload PGN file</span></span>\n        } else if (source === Constants.SITE_EVENT_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<DateRange className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess events</span></span>\n        } else if (source === Constants.SITE_PLAYER_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<People className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess players</span></span>\n        }  else if (source === Constants.SITE_OPENING_TREE_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Save className=\"lowOpacity\"/><span className=\"sourceName\"> Openingtree file <Badge className=\"sourceName\" color=\"secondary\">New</Badge></span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n\n    render() {\n        return <ExpansionPanel TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <RadioGroup onChange={this.props.siteChange} value={this.props.site}>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_LICHESS} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_LICHESS)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_CHESS_DOT_COM} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_CHESS_DOT_COM)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_OPENING_TREE_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_OPENING_TREE_FILE)} />\n                    <Divider className=\"dividerMargin\"/>\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PLAYER_DB} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PLAYER_DB)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_EVENT_DB} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_EVENT_DB)} />\n                    <FormControlLabel className=\"sitelabel\" value={Constants.SITE_PGN_FILE} control={<Radio color=\"primary\" />} label={this.getSourceOption(Constants.SITE_PGN_FILE)} />\n               </RadioGroup>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n        \n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport { trackEvent } from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\n\nexport default class Dropzone extends React.Component{\n    handleFileChange(newFiles) {\n      trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FileSaved\", newFiles.length>0?newFiles[0].name:null)\n      this.props.filesChange(newFiles)\n    }\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText={this.props.dropzoneText}\n          onChange={this.handleFileChange.bind(this)}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={this.props.filesLimit}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import SelectSearch from 'react-select-search';\nimport React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport default class NotableChessGames extends React.Component {\n\n    updateDetails = (value) => {\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"NotableGameSelected\", value.value)\n        this.props.onChange(value)\n    }\n    \n    renderDetails(option) {\n        return (<div>\n                <span><LazyLoadImage alt={option.name} className=\"profilePicture\" width=\"40\" height=\"40\" src={option.profile.imageUrl} /></span>\n                <div>{option.name}</div>\n                <div className=\"smallText\">{option.profile.subText}</div>\n                </div>);\n    }\n    render() {\n        if(!this.props.list) {\n            return <div className=\"lowOpacity textCenter\"><img alt=\"loading\" width='25' height='25' src=\"./spinner.gif\"/> Loading List</div>\n        } else if(!this.props.list.length) {\n            return <div className=\"lowOpacity textCenter\"> Could not fetch list</div>\n        }\n        let options = this.props.list.map(option=>{return {...option, value:option.name}})\n        return <SelectSearch\n            name=\"goatPlayers\"\n            value={this.props.selectedDetail.value}\n            options={options}\n            placeholder={this.props.placeholder}\n            renderOption={this.renderDetails}\n            onChange={this.updateDetails}\n        />\n    }\n}\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { Button as MaterialUIButton, TextField } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport {ExpansionPanel} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nimport NotableChessGames from './NotableChessGames';\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap'\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            files:[],\n            selectedPlayer:{},\n            selectedEvent:{}\n        }\n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    notablePlayerChange(player) {\n        this.setState({\n            selectedPlayer:player})\n    }\n    notableEventChange(event) {\n        this.setState({\n            selectedEvent:event})\n    }\n\n    componentWillReceiveProps() {\n        this.setState({playerNameError:''})\n    }\n\n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_EVENT_DB){\n            if(!this.state.selectedEvent){\n                this.props.showError(\"Please select an event\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(!this.state.selectedPlayer){\n                this.props.showError(\"Please select a player\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload an openingtree file\")\n                return false\n            }\n        } \n        return true\n    }\n    finalPlayerName(source, playerName, selectedNotablePlayer) {\n        if(source === Constants.SITE_PLAYER_DB) {\n            return selectedNotablePlayer.name\n        }\n        if(source === Constants.SITE_EVENT_DB) {\n            return ''\n        }\n        return playerName\n    }\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(\n                this.finalPlayerName(\n                    this.props.site, \n                    this.state.playerName,\n                    this.state.selectedPlayer), \n                this.state.files, \n                this.state.selectedEvent, \n                this.state.selectedPlayer)\n        }\n    }\n    \n    getSummary() {\n        if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(this.props.selectedPlayer && this.props.selectedPlayer.name) {\n                return <span>\n                        {getNumberIcon('done')}\n                        {this.props.selectedPlayer.profile.title}{'\\u00A0'}\n                        <b>{this.props.selectedPlayer.name}</b>\n                    </span>\n            }\n        } else if(this.props.site === Constants.SITE_LICHESS || \n            this.props.site === Constants.SITE_CHESS_DOT_COM){\n            if(this.props.playerName) {\n                return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n            }\n        } else if(this.props.site === Constants.SITE_PGN_FILE || \n            this.props.site === Constants.SITE_OPENING_TREE_FILE){\n            if(this.props.files.length===1) {\n                return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n            }\n            if(this.props.files.length>1) {\n                return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n            }\n        } else if(this.props.site === Constants.SITE_EVENT_DB) {\n            if(this.props.selectedEvent && this.props.selectedEvent.name) {\n                return <span>{getNumberIcon('done')}{this.props.selectedEvent.name}</span>\n            }\n        }\n        return <span>{getNumberIcon(2)}Player details</span>\n    }\n\n    getPlayerNameInput(label, helperText) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.playerName}\n            helperText={this.state.playerNameError? this.state.playerNameError:helperText}\n            error={this.state.playerNameError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    playerNameKeyUp(evt) {\n        if(evt.keyCode === 13) { // enter key pressed\n            this.setPlayerDetails()\n        }\n    }\n    getGoatDBSelection(){\n        return <NotableChessGames \n            list={this.props.notablePlayers} \n            placeholder=\"Select a player\"\n            onChange={this.notablePlayerChange.bind(this)}\n            selectedDetail={this.state.selectedPlayer}/>\n    }\n    getGoatDBEventSelection(){\n        return <NotableChessGames \n            list={this.props.notableEvents} \n            placeholder=\"Select an event\"\n            onChange={this.notableEventChange.bind(this)}\n            selectedDetail={this.state.selectedEvent}/>\n    }\n\n    getPgnFileSelection() {\n        return <div><Dropzone filesChange={this.filesChange.bind(this)} filesLimit={10}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click here to select files\"\n                />\n                {this.getPlayerNameInput('player name in PGN', 'Leave blank to load all games')}\n                </div>\n    }\n\n    getOpeningTreeSelection() {\n        return <div>\n            <Card>\n                <CardBody className=\"singlePadding\">\n                <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n                <CardText className=\"smallText\">\n                    If you plan to revisit the same player, you can save a <b>.tree</b> file locally by loading a tree and then clicking <i>\"Save Openingtree\"</i>.\n                    To reload the same tree, drop the <b>.tree</b> file in the dropzone below.\n                </CardText>\n                </CardBody>\n                </Card><br/>\n            <Dropzone filesChange={this.filesChange.bind(this)} filesLimit={1}\n                    dropzoneText=\"Drag and drop openingtree save file here or click here to select a file\"\n                />\n        </div>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return this.getPgnFileSelection()\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getPlayerNameInput('lichess username')\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getPlayerNameInput('chess.com username')\n        } else if (this.props.site === Constants.SITE_EVENT_DB) {\n            return this.getGoatDBEventSelection()\n        } else if (this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.getGoatDBSelection()\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.getOpeningTreeSelection()\n        }\n        return <div/>\n    }\n\n    render() {\n        return <ExpansionPanel expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                        {this.getInputsToShow()}\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Continue</MaterialUIButton>\n                </ExpansionPanelActions></ExpansionPanel>\n            \n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\nimport request from 'request'\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {openingGraph} from '../../app/OpeningGraph'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName: '',\n            site: '',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: 'source',\n            notablePlayers:null,\n            notableEvents:null,\n            files:[],\n            selectedNotableEvent:{},\n            selectedNotablePlayer:{}\n\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    exportOpeningTreeObject(){\n        return {\n            object:{\n                gamesProcessed:this.props.gamesProcessed,\n                settings:this.props.settings,\n                playerName:this.state.playername,\n                site: this.state.site,\n                advancedFilters:this.advancedFilters()\n            },\n            array: [...this.props.openingGraph.graph.nodes.entries()]\n        }\n    }\n\n    importOpeningTreeObject(openingTreeSave) {\n        this.setState({\n            ...openingTreeSave.object.advancedFilters,\n            playerColor:openingTreeSave.object.settings.playerColor,\n            site:openingTreeSave.object.site,\n            playerName:openingTreeSave.object.settings.playerName\n        })\n        openingGraph.setEntries(openingTreeSave.array)\n        this.props.importCallback({\n            settings:openingTreeSave.object.settings,\n            gamesProcessed:openingTreeSave.object.gamesProcessed,\n            openingGraph:openingGraph\n        })\n    }\n\n    playerDetailsChange(playerName, files, selectedNotableEvent, selectedNotablePlayer) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:SitePolicy.isFilterPanelEnabled(this.state.site, playerName, selectedNotablePlayer)?'filters':'',\n            files:files,\n            selectedNotableEvent:selectedNotableEvent,\n            selectedNotablePlayer:selectedNotablePlayer,\n            playerColor:''\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n    fetchGOATGames(url, callback){\n        request.get(url, (error, response) =>{\n            if(error) {\n                this.props.showError(\"Could not fetch player list. Failed to connect to DB.\")\n                callback([])\n                return \n            }\n            let gamesDetails\n            try{\n                gamesDetails = JSON.parse(response.body).list\n            } catch (e) {\n                console.log(e)\n            }\n            if(!gamesDetails) {\n                this.props.showError(\"Failed to load games.\")\n                callback([])\n            } else {\n                callback(gamesDetails)\n            }\n        })\n    }\n\n    siteChange(event) {\n        let newSite = event.target.value\n        if(newSite === Constants.SITE_PLAYER_DB && !this.state.notablePlayers) {\n            this.fetchGOATGames('https://goatchess.github.io/list.json', (gamesDetails)=>{\n                this.setState({notablePlayers:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_EVENT_DB && !this.state.notableEvents) {\n            this.fetchGOATGames('https://goatevents.github.io/list.json', (gamesDetails)=>{\n                this.setState({notableEvents:gamesDetails})\n            })\n        }\n        this.setState({ site: newSite, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", newSite)\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files} notablePlayers={this.state.notablePlayers}\n                notableEvents={this.state.notableEvents} site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}\n                pgnUrl={this.state.pgnUrl} selectedPlayer={this.state.selectedNotablePlayer} selectedEvent={this.state.selectedNotableEvent}/>\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} playerName={this.state.playerName} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}\n                selectedNotablePlayer={this.state.selectedNotablePlayer} />\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed} \n                selectedNotablePlayer={this.state.selectedNotablePlayer} selectedNotableEvent={this.state.selectedNotableEvent}\n                exportOpeningTreeObject={this.exportOpeningTreeObject.bind(this)} showInfo={this.props.showInfo}\n                importOpeningTreeObject={this.importOpeningTreeObject.bind(this)}/>\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/standard/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails} from '../app/util'\nimport {copyText} from './loader/Common'\n\nexport default class ControlsContainer extends React.Component {\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        copyText(\"fenField\")/* Get the text field */\n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        if(!this.props.moveDetails.lastPlayedGame) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(this.props.moveDetails.totalOpponentElo, \n                                                        this.props.moveDetails.whiteWins, \n                                                        this.props.moveDetails.draws, \n                                                        this.props.moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            {isNaN(performanceDetails.performanceRating)?null:            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>}\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Results</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.results}</TableCell>\n            </TableRow>\n            {isNaN(performanceDetails.averageElo)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {this.props.simplifiedView || isNaN(performanceDetails.averageElo)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {!this.props.simplifiedView && this.props.moveDetails.bestWin?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.bestWin} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.bestWinGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {!this.props.simplifiedView && this.props.moveDetails.worstLoss?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.worstLoss} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.worstLossGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.removeQuestionMarksFromDate(this.props.moveDetails.lastPlayedGame.date)} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.lastPlayedGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>\n            </TableBody>\n            {this.props.simplifiedView?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n\n    removeQuestionMarksFromDate(date) {\n        if(date.indexOf('?') === -1) {\n            return date\n        }\n        return date.slice(0, date.indexOf('.'))\n    }\n}","import {Progress, Popover } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport ReportControls from './ReportControls'\n\nexport default class MovesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n\n    move(from, to) {\n        return () => {\n            this.props.onMove(from, to)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"MoveClicked\")\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    render(){\n        if(!this.props.movesToShow) {\n            return <div className = \"infoMessage\" >No moves to show. Please select a source from the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and enter the details.</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = this.player(result.white, result.whiteElo)\n                    let blackPlayer = this.player(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n    player(name, elo) {\n        return `${name}${elo?`(${elo})`:''}`\n    }\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`performancePopover${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} settings={this.props.settings}/>\n            </Popover>\n    }\n    movesTable() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let sampleResultWhite = this.player(move.details.lastPlayedGame.white, move.details.lastPlayedGame.whiteElo)\n            let sampleResultBlack = this.player(move.details.lastPlayedGame.black, move.details.lastPlayedGame.blackElo)\n            let sampleResult = move.details.lastPlayedGame.result\n\n            return move.details.count > 1?<TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n                <TableCell size=\"small\" id={`performancePopover${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                    {move.details.count} <FontAwesomeIcon className=\"lowOpacity\" icon={faInfoCircle}/>\n                    {this.getPopover(moveIndex)}\n                </TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.details.whiteWins/move.details.count*100}`}>{move.details.whiteWins/move.details.count>0.1?move.details.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.details.draws/move.details.count*100}`}>{move.details.draws/move.details.count>0.1?move.details.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.details.blackWins/move.details.count*100}`}>{move.details.blackWins/move.details.count>0.1?move.details.blackWins:''}</Progress>\n                    </Progress>\n                </TableCell>\n            </TableRow>:\n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n        {this.props.settings.playerName?\n\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing moves that have been \n                played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>:\n                <TableCell colSpan=\"3\">\n                No moves found played by {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>\n            :\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing all moves that have been \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>:                \n                <TableCell colSpan=\"3\">\n                No moves found \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>\n\n\n        }</TableRow></TableFooter>\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col,Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\nimport {Modal, ModalHeader, ModalFooter} from 'reactstrap'\nimport {Table, TableRow, TableBody, TableCell} from '@material-ui/core'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n          activeGame:null\n      }\n      this.toggleModal = ()=>{\n        this.setState({activeGame:null})\n      }\n    }\n    \n\n    launchGame(game) {\n      if(game.url) {\n          return (e) => {\n              e.stopPropagation()\n              window.open(game.url, '_blank');\n              trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n          }\n      }\n      return ((e) => {\n        e.stopPropagation()\n        this.setState({activeGame:game})\n      })\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n              <Modal isOpen={this.state.activeGame} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Game details</ModalHeader>\n              {!this.state.activeGame?null:\n              <Table>\n                \n                <TableBody>\n                  {\n                    Object.entries(this.state.activeGame.headers).map((entry)=>!entry[1]?null:<TableRow className=\"performanceRatingRow\">\n                        <TableCell className=\"performanceRatingRow\">{entry[0]}</TableCell>\n                        <TableCell className=\"performanceRatingRow\">{entry[1]}</TableCell>\n                    </TableRow>\n                    )}\n                  \n                </TableBody>\n              </Table>\n              }\n              <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleModal}>Done</Button>\n        </ModalFooter>\n              </Modal>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              showInfo = {this.props.showInfo}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              openingGraph={this.props.openingGraph}\n              importCallback={this.props.importCallback}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame.bind(this)} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import Chess from 'chess.js'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport {copyText} from './loader/Common'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to) {\n    const chess = this.chess\n    let move = chess.move({ from, to, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(from, to) {\n    this.onMove(from,to)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = new Chess(fen)\n    this.setState({fen:fen, lastMove:previousMove})\n}\nfunction updateProcessedGames(downloadLimit, n, openingGraph) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.setState({\n    gamesProcessed: totalGamesProcessed,\n    openingGraph: openingGraph,\n    downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    if(!this.state.openingGraph.hasMoves) {\n        return null;\n    }\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.details.count-a.details.count):[]\n}\n\n\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = new Chess()\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\nfunction showError(message, trackingEvent, subMessage) {\n    this.setState({message:message, subMessage:subMessage\n        , messageSeverity:\"error\"})\n    let eventName = \"errorShown\"\n    if(trackingEvent) {\n        eventName = eventName+\":\"+trackingEvent\n    }\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,eventName, message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:\"success\"})\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:'', subMessage:''})\n}\n\nfunction toggleFeedback(diagnosticsOpen) {\n    return () => {\n        let feedbackOpen = this.state.feedbackOpen\n        this.closeError()\n        this.setState({feedbackOpen:!feedbackOpen,\n                diagnosticsDataOpen:diagnosticsOpen})\n    }\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction toggleDiagnosticsData() {\n    this.setState({diagnosticsDataOpen:!this.state.diagnosticsDataOpen})\n}\n\nfunction copyDiagnostics() {\n    copyText(\"diagnosticsText\")\n    this.showInfo(\"Copied Diagnostics data\")\n}\n\n\nfunction importGameState(importState) {\n    this.setState({\n      settings:importState.settings,\n      openingGraph:importState.openingGraph,\n      gamesProcessed:importState.gamesProcessed\n    })\n  }\n  function getChessboardWidth(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return `${Math.round(window.innerWidth*95/100)}px` //95vw\n    } else if ((window.innerWidth<=1024)) {\n      return `${Math.round(window.innerWidth*40/100)}px` // 40vw\n    } else {\n      return \"512px\"\n    }\n\n  }\n\nfunction getDiagnosticsValue() {\n  return `--------------------\n  ${navigator.userAgent}\n  -------------------\n  ${JSON.stringify(this.state)}\n  -------------------\n  `\n}\nfunction getRedditLink() {\n    return `https://www.reddit.com/message/compose/?to=${Constants.OPENNIG_TREE_REDDIT}&subject=${this.getSubject()}&message=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getEmailLink() {\n    return `mailto:${Constants.OPENING_TREE_EMAIL}?subject=${this.getSubject()}&body=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getSubject() {\n    return this.state.diagnosticsDataOpen?\"Possible Openingtree bug\":\"Feedback on Openingtree\"\n}\nfunction getBody() {\n    return this.state.diagnosticsDataOpen?this.getDiagnosticsValue():\"\"\n}\n\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.toggleFeedback = toggleFeedback.bind(obj)\n    obj.setDownloading = setDownloading\n    obj.toggleDiagnosticsData = toggleDiagnosticsData.bind(obj)\n    obj.copyDiagnostics = copyDiagnostics.bind(obj)\n    obj.importGameState = importGameState\n    obj.getDiagnosticsValue = getDiagnosticsValue\n    obj.getChessboardWidth = getChessboardWidth\n    obj.getEmailLink = getEmailLink\n    obj.getSubject = getSubject\n    obj.getBody = getBody.bind(obj)\n    obj.getRedditLink = getRedditLink\n}\n\nexport {addStateManagement}","import green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, subMessage, onReport, showReportButton, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <div><span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message} \n                    \n                </span>\n                {!subMessage?null:<div className=\"smallText\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{subMessage}</div>}\n                </div>\n            }\n            action={[ \n                !showReportButton?null:<Button key=\"report\" onClick = {onReport} color=\"inherit\" size=\"small\">\n                  Report this\n                </Button>,\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    onReport: PropTypes.func,\n    subMessage: PropTypes.string,\n    showReportButton: PropTypes.bool,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);","import React from 'react'\nimport Chess from 'chess.js'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport {openingGraph} from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar, TextField} from '@material-ui/core'\nimport SnackbarContentWrapper from './SnackbarContentWrapper'\nimport * as Constants from '../app/Constants'\nimport {  Modal, ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,Collapse\n} from 'reactstrap'\n\nimport {FormControlLabel, Checkbox} from '@material-ui/core'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.chess = new Chess()\n    addStateManagement(this)\n    this.state = {\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:openingGraph,\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:''\n        },\n        message:'',\n        downloadingGames:false,\n        feedbackOpen:false,\n        diagnosticsDataOpen:false\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n\n  }\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    return <div className=\"rootView\"> \n        <GlobalHeader toggleFeedback = {this.toggleFeedback(false)}/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}><Navigator fen = {this.state.fen} move={this.state.lastMove} onChange ={this.navigateTo.bind(this)}/>\n    </Col><Col lg=\"6\"><Chessground\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      \n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                importCallback={this.importGameState.bind(this)}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'bottom', horizontal:\"left\" }} \n            open={snackBarOpen} autoHideDuration={6000} \n            onClose={this.closeError.bind(this)}\n    >\n    <SnackbarContentWrapper\n                            onClose={this.closeError.bind(this)}\n                            variant={this.state.messageSeverity}\n                            message={this.state.message}\n                            subMessage={this.state.subMessage}\n                            showReportButton={this.state.messageSeverity==='error'}\n                            onReport={this.toggleFeedback(true)}\n                        />\n    </Snackbar>\n\n    <Modal isOpen={this.state.feedbackOpen} toggle={this.toggleFeedback(false)}>\n        <ModalHeader toggle={this.toggleFeedback(false)}>Feedback</ModalHeader>\n        <ModalBody>\n          Your feedback is greatly appreciated. Reach out to me for feedback, suggestions, bug report or just a game of chess.\n          <ul>\n            <li>Email me: <a rel=\"noopener noreferrer\" href={this.getEmailLink()} target=\"_blank\">{Constants.OPENING_TREE_EMAIL}</a></li>\n            <li>Message me on reddit <a rel=\"noopener noreferrer\" href={this.getRedditLink()} target=\"_blank\">u/{Constants.OPENNIG_TREE_REDDIT}</a></li>\n            <li>Message me on lichess: <a rel=\"noopener noreferrer\" href={`https://lichess.org/inbox/${Constants.OPENING_TREE_LICHESS}`} target=\"_blank\">{Constants.OPENING_TREE_LICHESS}</a></li>\n            <li>Message me on chess.com: <a rel=\"noopener noreferrer\" href={`https://www.chess.com/messages/compose/${Constants.OPENING_TREE_CHESS_COM}`} target=\"_blank\">{Constants.OPENING_TREE_CHESS_COM}</a></li>\n            <li>Join my <a rel=\"noopener noreferrer\" href={Constants.OPENING_TREE_DISCORD}target=\"_blank\">discord server</a> to chat</li>\n          </ul>\n          <FormControlLabel\n        control={\n          <Checkbox\n            checked={this.state.diagnosticsDataOpen}\n            onChange={this.toggleDiagnosticsData}\n            name=\"diagnostics\"\n            color=\"primary\"\n          />\n        }\n        label=\"Add diagnostics data to message\"\n      />\n          <Collapse isOpen={this.state.diagnosticsDataOpen}>\n            <TextField id=\"diagnosticsText\" label=\"Click to copy.\" variant=\"outlined\" \n            className=\"fullWidth\" value={this.getDiagnosticsValue()} \n            rowsMax={4} onClick={this.copyDiagnostics} multiline/>\n            </Collapse>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleFeedback(false)}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","import * as Constants from './Constants'\n\nexport function isAdvancedFiltersEnabled(source) {\n    return source === Constants.SITE_CHESS_DOT_COM ||\n        source === Constants.SITE_LICHESS\n}\n\n\nexport function isFilterPanelEnabled(source, playerName) {\n    if(source === Constants.SITE_EVENT_DB ||\n        source === Constants.SITE_OPENING_TREE_FILE) {\n            return false\n    }\n    return !!playerName\n}\n\nexport function treeSaveDisabledReason(loadedSite, selectedSite, gamesProcessed, isDownloading){\n    if(selectedSite !== Constants.SITE_LICHESS && \n        selectedSite !== Constants.SITE_CHESS_DOT_COM) {\n        return \"Only supported for chess.com and lichess\"\n    }\n    if(loadedSite !== selectedSite || gamesProcessed<=0) {\n        return \"You need to analyze games before saving\"\n    }\n    if(isDownloading) {\n        return \"Action not supported while games are loading\"\n    }\n    return ''\n}\nexport function exportFileName(source, playerName, playerColor, selectedEvent, extension) {\n    if(source === Constants.SITE_EVENT_DB) {\n        return `${selectedEvent.name}.${extension}`\n    }\n    if(playerName) {\n        return `${playerName}-${playerColor}.${extension}`\n    }\n    return `openingtree-exportedgames.${extension}`\n}","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\n\nclass OpeningGraph {\n    constructor() {\n        this.graph=new Graph()\n        this.hasMoves = false\n    }\n    setEntries(arrayEntries){\n        this.graph=new Graph(arrayEntries)\n        this.hasMoves = true\n    }\n\n    clear() {\n        this.graph = new Graph()\n        this.hasMoves = false\n    }\n    addGameResultOnFen(fullFen, resultObject) {\n        var currNode = this.getNodeFromGraph(fullFen)\n        currNode.gameResults.push(resultObject)\n    }\n    addResultToRoot(resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(Constants.ROOT_FEN)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        return this.getNodeFromGraph(simplifiedFen(fullFen)).details\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject, playerColor) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject, playerColor)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen)\n        var movePlayedBy = this.createOrGetMoveNode(currNode.playedBy, move, fullTargetFen)\n        currNode.playedByMax = Math.max(currNode.playedByMax, targetNode.details.count)\n        currNode.playedBy = movePlayedBy\n        this.hasMoves = true\n\n    }\n\n    getNodeFromGraph(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n    createOrGetMoveNode(movesPlayedNode, move, fullTargetFen){\n        var movePlayed = movesPlayedNode[move.san]\n\n        if(!movePlayed) {\n            movePlayed = new GraphMove()\n            movePlayed.move = move\n            movePlayed.fen = simplifiedFen(fullTargetFen)\n            movesPlayedNode[move.san]= movePlayed\n        }\n        return movesPlayedNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject, playerColor) {\n        let whiteWin = 0, blackWin = 0, draw = 0, opponentElo=0, resultInt = 0;\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            opponentElo = resultObject.blackElo\n        } else {\n            opponentElo = resultObject.whiteElo\n        }\n        if(resultInt === 1) {\n            if(!currentMoveDetails.bestWin || parseInt(opponentElo)>parseInt(currentMoveDetails.bestWin)) {\n                currentMoveDetails.bestWin = opponentElo\n                currentMoveDetails.bestWinGame = resultObject\n            }\n        }\n        if(resultInt === -1) {\n            if(!currentMoveDetails.worstLoss || parseInt(opponentElo)<parseInt(currentMoveDetails.worstLoss)) {\n                currentMoveDetails.worstLoss = opponentElo\n                currentMoveDetails.worstLossGame = resultObject\n            }\n        }\n        if(!currentMoveDetails.lastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentMoveDetails.lastPlayedGame.date)) {\n                currentMoveDetails.lastPlayedGame = resultObject\n        }\n        currentMoveDetails.count += 1\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        return currentMoveDetails\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return currNode.gameResults\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode) {\n            return Array.from(Object.entries(currNode.playedBy)).map((entry)=> {\n                let gMove = entry[1]\n                let targetNode = this.graph.nodes.get(gMove.fen)\n                return {\n                    orig:gMove.move.from,\n                    dest:gMove.move.to,\n                    level:this.levelFor(targetNode.details.count, currNode.playedByMax),\n                    san:gMove.move.san,\n                    details:targetNode.details\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    constructor(arrayEntries){\n        this.nodes = new Map()\n        if(arrayEntries) {\n            arrayEntries.forEach((entry)=> {\n                this.nodes.set(entry[0],entry[1])\n            })\n        }\n    }\n}\n\nclass GraphNode {\n    \n            fen = ''\n            playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n            playedBy = {}\n            gameResults = []\n            properties = {}\n            details = emptyDetails()\n}\n\nclass GraphMove {\n    fen = ''\n    move = {}\n}\n\nfunction emptyDetails() {\n    return {\n        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        bestWin:null,\n        bestWinGame:null,\n        worstLoss:null,\n        worstLossGame:null,\n        lastPlayedGame:null\n    }\n}\n\nexport const openingGraph = new OpeningGraph()","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(gs) {return gs.map(function(g) { return g[0]})},\n      peg$c1 = function(h, c, m, r) {return [m, r]},\n      peg$c2 = function(h, c, r) {return [null, r]},\n      peg$c3 = function(h, c, mr) {return make_game(h, c, mr[0], mr[1])},\n      peg$c4 = peg$anyExpectation(),\n      peg$c5 = \"\\\"\",\n      peg$c6 = peg$literalExpectation(\"\\\"\", false),\n      peg$c7 = /^[^\"]/,\n      peg$c8 = peg$classExpectation([\"\\\"\"], true, false),\n      peg$c9 = function(str) {return str.join('')},\n      peg$c10 = /^[1-9]/,\n      peg$c11 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c12 = /^[0-9]/,\n      peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c14 = function(a, b) {return parseInt(a+b.join(''), 10)},\n      peg$c15 = /^[A-Za-z0-9_\\-]/,\n      peg$c16 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"-\"], false, false),\n      peg$c17 = function(chars) {return chars.join('')},\n      peg$c18 = \" \",\n      peg$c19 = peg$literalExpectation(\" \", false),\n      peg$c20 = \"\\f\",\n      peg$c21 = peg$literalExpectation(\"\\f\", false),\n      peg$c22 = \"\\t\",\n      peg$c23 = peg$literalExpectation(\"\\t\", false),\n      peg$c24 = \"\\n\",\n      peg$c25 = peg$literalExpectation(\"\\n\", false),\n      peg$c26 = \"[\",\n      peg$c27 = peg$literalExpectation(\"[\", false),\n      peg$c28 = \"]\",\n      peg$c29 = peg$literalExpectation(\"]\", false),\n      peg$c30 = function(hn, hv) { return make_header(hn,hv) },\n      peg$c31 = function(hs) {return hs},\n      peg$c32 = /^[NKQRBP]/,\n      peg$c33 = peg$classExpectation([\"N\", \"K\", \"Q\", \"R\", \"B\", \"P\"], false, false),\n      peg$c34 = /^[a-h]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c36 = /^[1-8]/,\n      peg$c37 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c38 = \"+\",\n      peg$c39 = peg$literalExpectation(\"+\", false),\n      peg$c40 = \"#\",\n      peg$c41 = peg$literalExpectation(\"#\", false),\n      peg$c42 = /^[x@]/,\n      peg$c43 = peg$classExpectation([\"x\", \"@\"], false, false),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = \"1-0\",\n      peg$c47 = peg$literalExpectation(\"1-0\", false),\n      peg$c48 = \"0-1\",\n      peg$c49 = peg$literalExpectation(\"0-1\", false),\n      peg$c50 = \"*\",\n      peg$c51 = peg$literalExpectation(\"*\", false),\n      peg$c52 = \"1/2-1/2\",\n      peg$c53 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c54 = function(mn) {return mn},\n      peg$c55 = function(r, f) {return r+f},\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c58 = /^[QRBNK]/,\n      peg$c59 = peg$classExpectation([\"Q\", \"R\", \"B\", \"N\", \"K\"], false, false),\n      peg$c60 = \"$\",\n      peg$c61 = peg$literalExpectation(\"$\", false),\n      peg$c62 = \"!!\",\n      peg$c63 = peg$literalExpectation(\"!!\", false),\n      peg$c64 = \"??\",\n      peg$c65 = peg$literalExpectation(\"??\", false),\n      peg$c66 = \"!?\",\n      peg$c67 = peg$literalExpectation(\"!?\", false),\n      peg$c68 = \"?!\",\n      peg$c69 = peg$literalExpectation(\"?!\", false),\n      peg$c70 = \"!\",\n      peg$c71 = peg$literalExpectation(\"!\", false),\n      peg$c72 = \"?\",\n      peg$c73 = peg$literalExpectation(\"?\", false),\n      peg$c74 = /^[^}]/,\n      peg$c75 = peg$classExpectation([\"}\"], true, false),\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(cc) {return cc.join('');},\n      peg$c81 = \"O-O-O\",\n      peg$c82 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c83 = \"O-O\",\n      peg$c84 = peg$literalExpectation(\"O-O\", false),\n      peg$c85 = function(m) {return flatten(m).join('');},\n      peg$c86 = function(mn, m, n) {return n},\n      peg$c87 = function(mn, m, nags, c2) {return c2},\n      peg$c88 = function(mn, m, nags, com, r) {return r},\n      peg$c89 = function(mn, m, nags, com, ravs) {return make_move(mn, m, nags, ravs, com)},\n      peg$c90 = function(first, rest) {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []},\n      peg$c91 = \"(\",\n      peg$c92 = peg$literalExpectation(\"(\", false),\n      peg$c93 = \")\",\n      peg$c94 = peg$literalExpectation(\")\", false),\n      peg$c95 = function(m, r) {return make_rav(m, r)},\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsegame();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parsenewline();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parsenewline();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parsegame();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsenewline();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsenewline();\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOF();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsegame() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseheaders();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsewhitespace();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsewhitespace();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsemovetext();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseresult();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c1(s1, s2, s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseresult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c2(s1, s2, s5);\n            }\n            s4 = s5;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsewhitespace();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsewhitespace();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedouble_quote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedouble_quote();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c7.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c7.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsedouble_quote();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c9(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c10.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c15.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c15.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 12) {\n        s0 = peg$c20;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 9) {\n          s0 = peg$c22;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhitespace() {\n    var s0;\n\n    s0 = peg$parsews();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenewline();\n    }\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c24;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseheader() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesymbol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestring();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c30(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseheaders() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseheader();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseheader();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c31(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepiece() {\n    var s0;\n\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserank() {\n    var s0;\n\n    if (peg$c34.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefile() {\n    var s0;\n\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c38;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckmate() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c40;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecapture() {\n    var s0;\n\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseperiod() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c44;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseresult() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c46) {\n      s0 = peg$c46;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c48) {\n        s0 = peg$c48;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c50;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c52) {\n            s0 = peg$c52;\n            peg$currPos += 7;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemove_number() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseperiod();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseperiod();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesquare() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parserank();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefile();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c56;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c58.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c60;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseinteger();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenag_alts() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s0 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s0 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s0 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c68) {\n            s0 = peg$c68;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c69); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s0 = peg$c70;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s0 = peg$c72;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontinuation() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseperiod();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseperiod();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseperiod();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment_chars() {\n    var s0;\n\n    if (peg$c74.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecomment_chars();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsecomment_chars();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c78;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepawn_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parserank();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecapture();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesquare();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepromotion();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_half_move() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecapture();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsesquare();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepiece_disambiguation_half_move() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepiece();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parserank();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsefile();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecapture();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesquare();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecastle_half_move() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c81) {\n      s0 = peg$c81;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c83) {\n        s0 = peg$c83;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehalf_move() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsecontinuation();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsecastle_half_move();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parsepiece_disambiguation_half_move();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsepiece_half_move();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parsepawn_half_move();\n          }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsecheck();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsecheckmate();\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenag_alts();\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c85(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove_number();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsehalf_move();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parsewhitespace();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsewhitespace();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenag();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c86(s1, s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenag();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c86(s1, s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsewhitespace();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecomment();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c87(s1, s3, s4, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$currPos;\n              s8 = [];\n              s9 = peg$parsewhitespace();\n              if (s9 !== peg$FAILED) {\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parsewhitespace();\n                }\n              } else {\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parserav();\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s7;\n                  s8 = peg$c88(s1, s3, s4, s5, s9);\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parsewhitespace();\n                if (s9 !== peg$FAILED) {\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parsewhitespace();\n                  }\n                } else {\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parserav();\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c88(s1, s3, s4, s5, s9);\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c89(s1, s3, s4, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemovetext() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemove();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parsewhitespace();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewhitespace();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsemove();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsewhitespace();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsemove();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserav() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c91;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewhitespace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsemovetext();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsewhitespace();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsewhitespace();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseresult();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsewhitespace();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsewhitespace();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c93;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      function flatten(a, acc = []) {\n          for (var i = 0; i < a.length; i++) {\n              if (Array.isArray(a[i])) {\n                  flatten(a[i], acc);\n              } else {\n                  acc.push(a[i]);\n              }\n          }\n          return acc;\n      }\n      function make_header(hn,hv) {\n          var m = {};\n          m[hn] = hv;\n          return m;\n      }\n      function make_move(move_number, move, nags, ravs, comment) {\n          var m = {};\n          if (move_number) m.move_number = move_number;\n          if (move) m.move = move;\n          if (nags && nags.length) m.nags = nags;\n          if (ravs && ravs.length) m.ravs = ravs;\n          if (comment) m.comment = comment;\n          return m;\n      }\n      function make_rav(moves, result) {\n          return {\n              moves, \n              result\n          };\n      }\n      function make_game(h, c, m, r) {\n          h = h || [];\n          return {\n              headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n              comment: c,\n              moves: m || [],\n              result: r\n          };\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}