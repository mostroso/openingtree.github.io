{"version":3,"sources":["app/CookieManager.js","app/Analytics.js","app/OpeningGraph.js","pres/loader/Common.js","app/OpeningTreeSerializer.js","app/Constants.js","pres/loader/Filters.js","pres/loader/Actions.js","app/PGNReaderWorker.js","pres/StateManagement.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","app/PGNReader.js","app/util.js","app/Common.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/NotableChessGames.js","pres/loader/User.js","pres/loader/Variants.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/MovesList.js","pres/ControlsContainer.js","pres/SnackbarContentWrapper.js","pres/MainContainer.js","index.js","app/chess/RacingKingsChess.js","app/chess/CrazyhouseChess.js","app/chess/ChessLogic.js","app/SitePolicy.js"],"names":["CookieManager","Cookies","get","remove","path","domain","trackPageView","ReactGA","pageview","window","location","pathname","trackEvent","category","action","label","value","event","initialize","OpeningGraph","variant","this","graph","Graph","hasMoves","arrayEntries","pgnStats","parsedMoves","lastFen","playerColor","index","length","push","forEach","parsedMove","addMoveForFen","sourceFen","targetFen","moveSan","addGameResultOnFen","addStatsToRoot","fullFen","resultIndex","currNode","getNodeFromGraph","gameResults","targetNode","rootFen","details","blackWins","whiteWins","draws","totalOpponentElo","shortestGame","longestGame","lastPlayed","newDetails","getUpdatedMoveDetails","node","simplifiedFen","Number","isInteger","updateCalculatedValues","bestWin","bestWinGame","bestWinElo","getOpponentElo","worstLoss","worstLossGame","worstLossElo","lastPlayedGame","longestGameInfo","shortestGameInfo","count","fullSourceFen","fullTargetFen","move","resultObject","playedByMax","Math","max","getTargetDetailsCount","playedBy","targetDetails","addIfNull","fen","nodes","GraphNode","set","currentMoveDetails","whiteWin","blackWin","draw","resultInt","result","Constants","opponentElo","currentBestWinGame","parseInt","currentWorstLossGame","currentLastPlayedGame","isDateMoreRecentThan","date","currentLongestGame","numberOfPlys","currentShortestGame","blackElo","whiteElo","map","Array","from","Object","entries","entry","chess","chessLogic","sloppy","targetNodeDetails","getDetailsForFen","orig","dest","to","level","levelFor","san","moveCount","maxCount","Map","Accordion","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MUIAccordion","getNumberIcon","n","alt","className","src","height","advancedFilters","state","createSubObjectWithProperties","copyText","elementId","document","getElementById","select","setSelectionRange","execCommand","e","serializeOpeningTree","treeData","filename","callback","chunkedArray","chunks","chunk","header","arraySizes","arrays","arr","array","prototype","apply","chunkSize","startIndex","i","chunkIndex","slice","chunkArray","deflatedChunks","packControlWord","remainingChunks","hasError","zlib","deflate","Buffer","JSON","stringify","error","data","byteLength","saveAs","Blob","type","deserializeOpeningTree","file","reader","FileReader","onload","evt","target","version","unpackControlWord","numChunks","handleInflate","console","log","parse","sortedChunks","sort","a","b","flattenedChunks","el","flat","size","reconstructObjectFromChunks","inflate","getInflatedChunks","onerror","name","message","readAsArrayBuffer","control","view","DataView","getUint16","getUint32","buffer","ArrayBuffer","setUint16","setUint32","TIME_CONTROL_ULTRA_BULLET","TIME_CONTROL_BULLET","TIME_CONTROL_BLITZ","TIME_CONTROL_RAPID","TIME_CONTROL_CLASSICAL","TIME_CONTROL_CORRESPONDENCE","TIME_CONTROL_DAILY","FILTER_NAME_RATED","FILTER_NAME_SELECTED_TIMEFRAME","FILTER_NAME_DOWNLOAD_LIMIT","FILTER_NAME_ELO_RANGE","SITE_LICHESS","SITE_CHESS_DOT_COM","SITE_PGN_FILE","SITE_EVENT_DB","SITE_PLAYER_DB","SITE_OPENING_TREE_FILE","SITE_ONLINE_TOURNAMENTS","MAX_DOWNLOAD_LIMIT","MAX_ELO_RATING","EVENT_CATEGORY_PGN_LOADER","EVENT_CATEGORY_MOVES_LIST","EVENT_CATEGORY_CONTROLS","EVENT_CATEGORY_NAVIGATOR","EVENT_CATEGORY_CHESSBOARD","EVENT_CATEGORY_MESSAGE_SHOWN","ROOT_FEN","RACING_KINGS_ROOT_FEN","PLAYER_COLOR_WHITE","PLAYER_COLOR_BLACK","LOADER_ANIMATION_DURATION_MS","OPENING_TREE_EMAIL","OPENNIG_TREE_REDDIT","OPENING_TREE_LICHESS","OPENING_TREE_CHESS_COM","OPENING_TREE_DISCORD","OPENING_TREE_FILE_CURRENT_VERSION","ERROR_ACTION_VISIT_OLD_SITE","ERROR_ACTION_NONE","LICHESS_NOT_LOGGED_IN","LICHESS_STATE_PENDING","LICHESS_LOGGED_IN","LICHESS_FAILED_FETCH","ERROR_SEVERITY_ERROR","ERROR_SEVERITY_SUCCESS","VARIANT_STANDARD","VARIANT_RACING_KINGS","VARIANT_THREE_CHECK","VARIANT_KING_OF_THE_HILL","VARIANT_CRAZYHOUSE","CHESS_COM_RULES_STANDARD","CHESS_COM_RULES_THREE_CHECK","CHESS_COM_RULES_KING_OF_THE_HILL","CHESS_COM_RULES_CRAZYHOUSE","LICHESS_PERF_RACING_KINGS","LICHESS_PERF_THREE_CHECK","LICHESS_PERF_KING_OF_THE_HILL","LICHESS_PERF_CRAZYHOUSE","LICHESS_HEADER_RACING_KINGS","LICHESS_HEADER_THREE_CHECK","LICHESS_HEADER_KING_OF_THE_HILL","LICHESS_HEADER_STANDARD","LICHESS_HEADER_CRAZYHOUSE","User","props","isAdvancedFiltersOpen","timeframeSteps","assign","defaultAdvancedFilters","rated","setState","property","newState","site","SitePolicy","setImmediate","setFilters","bind","checked","newValue","colorError","filtersChange","isDisabled","areAdvancedFiltersApplied","newProps","key","deepEqual","playerName","selectedNotablePlayer","expandedPanel","TransitionComponent","MuiCollapse","TransitionProps","timeout","onChange","handleExpansionChange","disabled","expandIcon","getSummary","component","playerColorChange","color","onClick","toggleState","icon","faCaretUp","faCaretDown","isOpen","toggleRated","handleTimeControlChange","handleTimeframeChange","handleEloRangeChange","handleDownloadLimitChange","React","Component","Actions","unload","pgnReader","stopDownloading","isGamesSubsectionOpen","exportingInProgress","streamsaver","mitm","encoder","TextEncoder","addEventListener","removeEventListener","importOpeningTree","files","err","subMesage","showError","success","importOpeningTreeObject","showInfo","exportOpeningTree","exportOpeningTreeObject","info","fileWriter","close","game","headers","join","moves","moveObject","pendingDownloads","write","encode","getPgnString","then","abortDownloading","shouldDownloadToFile","fileStream","createWriteStream","selectedNotableEvent","getWriter","PGNReader","readerInstance","fetchPGNFromSite","selectedOnlineTournament","proxy","notify","downloadResponse","getTokens","lichess","cookieManager","getLichessAccessToken","readPgn","gamesProcessed","clear","loadedSite","setDownloading","importTreeClicked","startIcon","disableElevation","downloadDisabledReason","isDownloading","load","download","placement","title","exportTreeClicked","stopDownloadingAction","switchToMovesTab","faList","openingTreeLoadActions","regularActions","mainComponent","in","wrap","Worker","turnColor","turn","settings","brushes","againstBrushes","forBrushes","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","onMove","promotion","lastMove","onMoveAction","navigateTo","previousMove","updateProcessedGames","downloadLimit","parsedGame","totalGamesProcessed","openingGraph","addPGN","latestFen","downloadingGames","moveToShape","brush","autoShapes","movesToShow","shapes","fillArray","movesForFen","gameResultsForFen","len","reset","settingsChange","trackingEvent","subMessage","severity","errorActionText","errorAction","url","messageSeverity","open","toggleFeedback","eventName","trackingLabel","closeError","diagnosticsOpen","feedbackOpen","diagnosticsDataOpen","val","toggleDiagnosticsData","copyDiagnostics","importGameState","importState","getChessboardWidth","nearestMultipleOf8","innerWidth","round","min","innerHeight","getDiagnosticsValue","navigator","userAgent","getRedditLink","getSubject","getBody","getEmailLink","variantChange","newVariant","addStateManagement","obj","timeClasses","selectedTimeControls","unselectedTimeControls","includesAll","subArray","every","v","includes","getTimeControlLabel","timeControlState","getTimeControlsArray","Common","timeClass","filter","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","setCurrentlyOpenAdvancedFilter","Collapse","getTimeControlFilters","timeframe","getSelectedTimeFrameData","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","getDownloadLimitFilters","Slider","valueLabelDisplay","valueLabelFormat","step","marks","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","Container","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Row","Col","sm","FormControlLabel","Checkbox","changeCallback","children","getFilters","module","exports","mainObject","properties","subObject","fenComponents","split","selected","timeControl","monthLabels","getTimeframeSteps","steps","year","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","toLongLabel","fromLongLabel","month","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","fromMonth","fromYear","fromTimeStamp","getTimeStampInfoFor","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","getPerformanceDetails","totalElo","white","black","totalGames","averageElo","playerWins","playerLosses","score","scorePercentage","ratingChange","results","performanceRating","toFixed","abs","than","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","DP_TABLE","OpeningManager","plys","currentIndex","pgn","ChessLogic","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","Navigator","openingManager","currentMove","keyHandler","keyCode","previous","next","addPly","device","moveBack","opening","ChessEcoCodes","openingCode","code","lg","Button","faStepBackward","faStepForward","GlobalHeader","useState","setIsOpen","modal","setModal","toggleModal","launch","Navbar","light","expand","width","NavbarBrand","href","NavbarToggler","navbar","Nav","NavItem","NavLink","faDiscord","faComments","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","ModalFooter","SOURCE_VARIANT_COMBINATION","Source","source","addNumber","faChessRook","Badge","siteChange","newSite","supportedSources","AccordionSummary","aria-controls","id","getSourceOption","AccordionDetails","RadioGroup","setSite","getSourceRadio","Divider","AccordionActions","continue","isSourceAvailable","Radio","Dropzone","newFiles","filesChange","acceptedFiles","dropzoneText","handleFileChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","NotableChessGames","updateDetails","option","profile","imageUrl","subText","list","options","selectedDetail","placeholder","renderOption","renderDetails","tournamentUrl","selectedPlayer","selectedEvent","playerNameError","tournamentUrlError","player","nextProps","trim","startsWith","parsedUrl","URL","hostname","tournamentSite","endsWith","pathComponents","tournamentId","tournamentType","validateInputDetailsSet","playerDetailsChange","finalPlayerName","setTimeout","getLichessCardBody","getPlayerNameInput","lichessLoginState","Card","Spinner","CardBody","CardTitle","faInfoCircle","faSync","refreshLichessStatus","faSignOutAlt","logoutOfLichess","launchLichessOauth","lichessLoginName","faCheck","CardText","rel","helperText","TextField","editPlayerName","onKeyUp","playerNameKeyUp","getOnlineTournamentCard","getOnlineTournamentInput","editTournamentUrl","setPlayerDetails","notablePlayers","notablePlayerChange","notableEvents","notableEventChange","getPgnFileSelection","getLichessSelection","getChessComSelection","getGoatDBEventSelection","getGoatDBSelection","getOpeningTreeSelection","getOnlineTournamentSelection","getInputsToShow","getVariantIcon","getVariantText","faFlagCheckered","faDiceThree","faMountain","faHouseDamage","faChessKing","style","getVariantOption","changeLink","setVariant","getVariantRadio","PGNLoader","selectedSite","URLSearchParams","search","fetchLichessLoginStatus","panel","newExpanded","timestamp","now","playername","openingTreeSave","saveVersion","setEntries","importCallback","request","response","gamesDetails","body","fetchGOATGames","auth","bearer","responseObj","username","deleteLichessAccessToken","filters","pgnUrl","Filters","SettingsView","srcElement","tagName","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ReportControls","stopPropagation","simplifiedView","multiline","rowsMax","inputProps","fontSize","spellCheck","copyFen","moveDetails","getFenField","switchToUserTab","faUser","performanceDetails","Table","eatClicks","isNaN","TableHead","TableRow","TableCell","TableBody","launchGame","faExternalLinkAlt","removeQuestionMarksFromDate","TableFooter","colSpan","indexOf","MovesList","openPerformanceIndex","prevProps","prevState","moveIndex","resultsTable","movesTable","whitePlayer","blackPlayer","elo","performancePopoverOpen","openMove","Popover","trigger","togglePerformancePopover","sampleResultWhite","sampleResultBlack","sampleResult","getPopover","Progress","multi","bar","ControlsContainer","activeTab","activeGame","tab","tabs","classnames","active","faChartBar","faCog","TabContent","TabPane","tabId","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","iconVariant","opacity","marginRight","spacing","alignItems","classes","onClose","actionText","showReportButton","other","Icon","SnackbarContent","clsx","aria-describedby","IconButton","aria-label","MainContainer","urlVariant","selectedVariant","resize","chessboardWidth","handleResize","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ModalBody","ReactDOM","render","RacingKingsChess","Chess","substring","disambiguatedMove","problematicMove","potentialMoves","filteredMoves","potentialMove","charAt","disambiguate","CrazyhouseChess","locationOfAt","piece","PAWN","toLowerCase","put","toggleTurn","tokens","isAdvancedFiltersEnabled","isFilterPanelEnabled","treeSaveDisabledReason","exportFileName","extension"],"mappings":"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","file":"static/js/main.4851f57a.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\n\nclass CookieManager {\n    getLichessAccessToken() {\n        return Cookies.get('at')\n    }\n    deleteLichessAccessToken() {\n        Cookies.remove('at', { path: '/', domain:'www.openingtree.com' })\n    }\n}\n\nexport default new CookieManager();","import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}\n\n","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\nimport {chessLogic, rootFen} from '../app/chess/ChessLogic'\n\nexport default class OpeningGraph {\n    constructor(variant) {\n        this.graph=new Graph()\n        this.hasMoves = false\n        this.variant = variant\n    }\n    setEntries(arrayEntries, pgnStats){\n        this.graph=new Graph(arrayEntries, pgnStats)\n        this.hasMoves = true\n    }\n\n    clear() {\n        this.graph = new Graph()\n        this.hasMoves = false\n    }\n\n    addPGN(pgnStats, parsedMoves, lastFen, playerColor) {\n        pgnStats.index = this.graph.pgnStats.length\n        this.graph.pgnStats.push(pgnStats)\n        this.graph.playerColor = playerColor\n        this.hasMoves = true\n        parsedMoves.forEach(parsedMove => {\n            this.addMoveForFen(parsedMove.sourceFen, parsedMove.targetFen, parsedMove.moveSan, pgnStats)\n        })\n        this.addGameResultOnFen(lastFen, pgnStats.index)\n        this.addStatsToRoot(pgnStats, this.variant)\n    }\n\n    addGameResultOnFen(fullFen, resultIndex) {\n        var currNode = this.getNodeFromGraph(fullFen, true)\n        if(!currNode.gameResults) {\n            currNode.gameResults = []\n        }\n        currNode.gameResults.push(resultIndex)\n    }\n    addStatsToRoot(pgnStats, variant) {\n        var targetNode = this.getNodeFromGraph(rootFen(variant), true)\n        if(!targetNode.details) {\n            targetNode.details = emptyDetails()\n        }\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, pgnStats)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        let node = this.getNodeFromGraph(simplifiedFen(fullFen), false)\n        let details = node && node.details\n        if (Number.isInteger(details)) {\n            details = this.getUpdatedMoveDetails(emptyDetails(), this.graph.pgnStats[details])\n        } else if(!details) {\n            return emptyDetails()\n        }\n        details = this.updateCalculatedValues(details)   \n        return details\n    }\n\n    updateCalculatedValues(details) {\n        if(Number.isInteger(details.bestWin)) {\n            details.bestWinGame = this.graph.pgnStats[details.bestWin]\n            details.bestWinElo = this.getOpponentElo(this.graph.playerColor,details.bestWinGame)\n        }\n        if(Number.isInteger(details.worstLoss)) {\n            details.worstLossGame = this.graph.pgnStats[details.worstLoss]\n            details.worstLossElo = this.getOpponentElo(this.graph.playerColor,details.worstLossGame)\n        }\n        if(Number.isInteger(details.lastPlayed)) {\n            details.lastPlayedGame = this.graph.pgnStats[details.lastPlayed]\n        }\n        if(Number.isInteger(details.longestGame)) {\n            details.longestGameInfo = this.graph.pgnStats[details.longestGame]\n        }\n        if(Number.isInteger(details.shortestGame)) {\n            details.shortestGameInfo = this.graph.pgnStats[details.shortestGame]\n        }\n        details.count = details.whiteWins+details.blackWins+details.draws\n        return details\n\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen, true)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen, true)\n        currNode.playedByMax = Math.max(currNode.playedByMax, this.getTargetDetailsCount(targetNode.details))\n        if(!currNode.playedBy) {\n            currNode.playedBy = {}\n        }\n        currNode.playedBy[move] = ''\n    }\n\n    getTargetDetailsCount(targetDetails) {\n        if(!targetDetails) {\n            return 0\n        }\n        if(Number.isInteger(targetDetails)) {\n            //if details is an integer, then this has been played once\n            return 1\n        }\n        return targetDetails.draws+targetDetails.blackWins+targetDetails.whiteWins\n    }\n\n    getNodeFromGraph(fullFen, addIfNull) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode && addIfNull) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject) {\n        if(Number.isInteger(currentMoveDetails)) {\n            // if this is the second stat object being added\n            // calculate the first move details and then merge it with the second one\n            currentMoveDetails = this.getUpdatedMoveDetails(emptyDetails(),\n                            this.graph.pgnStats[currentMoveDetails])\n        } else if(!currentMoveDetails) {\n            // if this is the first stat being added to this node,\n            // just write the index to calculate the stats later\n            return resultObject.index\n        }\n        \n        let whiteWin = 0, blackWin = 0, draw = 0, resultInt = 0;\n        let playerColor = this.graph.playerColor\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        let opponentElo = this.getOpponentElo(playerColor, resultObject)\n        if(resultInt === 1) {\n            let currentBestWinGame = null\n            if(Number.isInteger(currentMoveDetails.bestWin)) {\n                currentBestWinGame = this.graph.pgnStats[currentMoveDetails.bestWin]\n            }\n            if(!currentBestWinGame || parseInt(opponentElo)>parseInt(this.getOpponentElo(playerColor, currentBestWinGame))) {\n                currentMoveDetails.bestWin = resultObject.index\n            }\n        }\n        if(resultInt === -1) {\n            let currentWorstLossGame = null\n            if(Number.isInteger(currentMoveDetails.worstLoss)) {\n                currentWorstLossGame = this.graph.pgnStats[currentMoveDetails.worstLoss]\n            }\n            if(!currentWorstLossGame || parseInt(opponentElo)<parseInt(this.getOpponentElo(playerColor, currentWorstLossGame))) {\n                currentMoveDetails.worstLoss = resultObject.index\n            }\n        }\n        let currentLastPlayedGame = null\n        if(Number.isInteger(currentMoveDetails.lastPlayed)) {\n            currentLastPlayedGame = this.graph.pgnStats[currentMoveDetails.lastPlayed]\n        }\n        if(!currentLastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentLastPlayedGame.date)) {\n                currentMoveDetails.lastPlayed = resultObject.index\n        }\n        let currentLongestGame = null\n        if(Number.isInteger(currentMoveDetails.longestGame)) {\n            currentLongestGame = this.graph.pgnStats[currentMoveDetails.longestGame]\n        }\n        if(!currentLongestGame || \n            resultObject.numberOfPlys > currentLongestGame.numberOfPlys) {\n                currentMoveDetails.longestGame = resultObject.index\n        }\n\n        let currentShortestGame = null\n        if(Number.isInteger(currentMoveDetails.shortestGame)) {\n            currentShortestGame = this.graph.pgnStats[currentMoveDetails.shortestGame]\n        }\n        if(!currentShortestGame || \n            resultObject.numberOfPlys < currentShortestGame.numberOfPlys) {\n                currentMoveDetails.shortestGame = resultObject.index\n        }\n\n\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        return currentMoveDetails\n    }\n\n    getOpponentElo(playerColor, resultObject) {\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            return resultObject.blackElo\n        }\n        return resultObject.whiteElo\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode && currNode.gameResults) {\n            return currNode.gameResults.map((index)=>this.graph.pgnStats[index])\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode && currNode.playedBy) {\n            return Array.from(Object.entries(currNode.playedBy)).map((entry)=> {\n                let chess = chessLogic(this.variant, fullFen)\n                let move = chess.move(entry[0], {sloppy: true})\n                let targetNodeDetails = this.getDetailsForFen(chess.fen())\n                return {\n                    orig:move.from,\n                    dest:move.to,\n                    level:this.levelFor(targetNodeDetails.count, currNode.playedByMax),\n                    san:move.san,\n                    details:targetNodeDetails\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    constructor(arrayEntries, pgnStats){\n        this.nodes = new Map()\n        this.pgnStats = []\n        this.playerColor = ''\n        if(arrayEntries) {\n            arrayEntries.forEach((entry)=> {\n                this.nodes.set(entry[0],entry[1])\n            })\n        }\n        if(pgnStats) {\n            this.pgnStats = pgnStats\n        }\n    }\n}\n\nclass GraphNode {\n            playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n            //playedBy = {}\n            //gameResults = []\n}\n\nfunction emptyDetails() {\n    return {\n//        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        shortestGame:null,\n        longestGame:null,\n//        bestWin:null,\n//        bestWinGame:null,\n//        worstLoss:null,\n//        worstLossGame:null,\n        lastPlayed:null\n//        lastPlayedGame:null\n    }\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport MUIAccordion from '@material-ui/core/Accordion';\nimport React from 'react'\nimport { createSubObjectWithProperties } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MUIAccordion);\n\nexport function getNumberIcon(n) {\n    return <img alt={`step ${n}`} className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}\n\nexport function copyText(elementId) {\n    /* Get the text field */\n    var copyText = document.getElementById(elementId);\n    try {\n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n        return true\n    } catch(e) {\n        return false\n    }\n}","import zlib from 'zlib'\nimport {Buffer} from 'buffer'\nimport { saveAs } from 'file-saver';\n\nexport function serializeOpeningTree(treeData, filename, callback) {\n    let chunkedArray = chunk(treeData)\n    let deflatedChunks = []\n    //push version number 1 for later backward compatibility\n    deflatedChunks.push(packControlWord(0x1))\n    deflatedChunks.push(packControlWord(chunkedArray.length))\n    let remainingChunks = chunkedArray.length\n    let hasError = false;\n    chunkedArray.forEach((chunk)=>{\n        zlib.deflate(\n            new Buffer(JSON.stringify(chunk)), \n            (error,data)=>{\n                remainingChunks--\n                if(error) {\n                    hasError = true\n                }\n                deflatedChunks.push(packControlWord(data.byteLength))\n                deflatedChunks.push(data)\n                if(remainingChunks<=0) {\n                    if(hasError) {\n                        callback(\"Could not save file\")\n                        return\n                    }\n                    saveAs(new Blob(deflatedChunks, {type: \"application/octet-stream\"}), filename)\n                    callback(null, `Saved opening tree to file ${filename}`)\n                }\n            });\n        })\n}\n\nexport function deserializeOpeningTree(file, callback) {\n    let reader = new FileReader()\n    reader.onload = function(evt) {\n        let data = evt.target.result\n        let index = 0\n        let version = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(version !== 0x1) {\n            callback(\"File is not an openingtree save file.\", null,\"Are you loading the correct file?\")\n            return\n        }\n        let numChunks = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(!numChunks) {\n            callback(\"Input file not in correct format\", null)\n            return\n        }\n        getInflatedChunks(data, index, numChunks, callback)\n    };\n    reader.onerror = function(e) {\n        callback(\"Failed to read openingtree file\", null, `${e.target.error.name}:${e.target.error.message}`)\n    }\n    reader.readAsArrayBuffer(file)\n}\n\nfunction getInflatedChunks(data, startIndex, numChunks, callback) {\n    let index = startIndex\n    let deflatedChunks = []\n    let remainingChunks = numChunks\n    let hasError=false\n    let handleInflate = (error, data)=> {\n        remainingChunks--\n        if(error) {\n            console.log(error)\n            hasError=true\n        }\n        try {\n            deflatedChunks.push(JSON.parse(data))\n        } catch (e) {\n            console.log(e)\n            hasError=true\n        }\n        if(remainingChunks===0) {\n            if(hasError) {\n                callback(\"Input file seems corrupted\", null)\n            }\n            \n            callback(null, reconstructObjectFromChunks(deflatedChunks))\n        }\n        \n    }\n    while(numChunks>0) {\n        let chunkSize = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        zlib.inflate(\n            Buffer.from(data,index,chunkSize), handleInflate)\n        index = index + chunkSize\n        numChunks--\n    }\n}\n\nfunction reconstructObjectFromChunks(deflatedChunks) {\n    let sortedChunks = deflatedChunks.sort((a,b)=>a.index-b.index)\n    let flattenedChunks = sortedChunks.slice(1).map(el=>el.chunk).flat()\n    let header = sortedChunks[0]\n    let arrays = []\n    let index = 0\n    let arraySizes = header.arraySizes || [flattenedChunks.length]\n    arraySizes.forEach((size)=>{\n        arrays.push(flattenedChunks.slice(index,index+size))\n        index+=size\n    })\n    return {\n        header:header.chunk,\n        arrays:arrays\n    }\n}\n\nfunction unpackControlWord(control) {\n    let view = new DataView(control)\n    if(view.getUint16(0)!==0x1337 || view.getUint16(6)!==0xC0D3) {\n        return null\n    }\n    return view.getUint32(2)\n}\n\nfunction packControlWord(control) {\n    var buffer = new ArrayBuffer(8); \n    var view = new DataView(buffer); \n    view.setUint16(0, 0x1337)\n    view.setUint32(2, control>>>0)\n    view.setUint16(6, 0xC0D3)\n    return buffer\n}\n\nfunction chunk(treeData) {\n    let chunk1 = {chunk:treeData.header, index:0, \n        arraySizes:treeData.arrays.map(arr=>arr.length)}\n    let chunks = [chunk1]\n    treeData.arrays.forEach((array)=>{\n        Array.prototype.push.apply(chunks, chunkArray(array, 1000, chunks.length));\n    })\n    return chunks\n}\n\nfunction chunkArray(array, chunkSize, startIndex) {\n    let chunkedArray=[]\n    \n    for (let i=0, chunkIndex=1; i<array.length; i+=chunkSize, chunkIndex++) {\n        chunkedArray.push({chunk:array.slice(i,i+chunkSize), index:startIndex+chunkIndex});\n    }\n    return chunkedArray\n}\n","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\nexport const SITE_EVENT_DB = \"eventdb\"\nexport const SITE_PLAYER_DB = \"playerdb\"\nexport const SITE_OPENING_TREE_FILE = \"opntfile\"\nexport const SITE_ONLINE_TOURNAMENTS = \"tournament\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\nexport const EVENT_CATEGORY_MESSAGE_SHOWN = \"message\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\nexport const RACING_KINGS_ROOT_FEN=\"8/8/8/8/8/8/krbnNBRK/qrbnNBRQ w - - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500\n\nexport const OPENING_TREE_EMAIL = 'feedback@openingtree.com'\nexport const OPENNIG_TREE_REDDIT = 'opening_tree'\nexport const OPENING_TREE_LICHESS = 'vannooz'\nexport const OPENING_TREE_CHESS_COM = 'vannooz'\nexport const OPENING_TREE_DISCORD = 'https://discord.gg/hCwKkN8'\n\nexport const OPENING_TREE_FILE_CURRENT_VERSION = 2\n\nexport const ERROR_ACTION_REPORT = 'report'\nexport const ERROR_ACTION_VISIT_OLD_SITE = 'visitOld'\nexport const ERROR_ACTION_NONE = 'noAction'\nexport const LICHESS_NOT_LOGGED_IN = 0;\nexport const LICHESS_STATE_PENDING = 1;\nexport const LICHESS_LOGGED_IN = 2;\nexport const LICHESS_FAILED_FETCH = 3;\n\nexport const ERROR_SEVERITY_ERROR = \"error\";\nexport const ERROR_SEVERITY_WARNING = \"warning\";\nexport const ERROR_SEVERITY_SUCCESS = \"success\";\n\nexport const VARIANT_STANDARD = \"standard\";\nexport const VARIANT_RACING_KINGS = \"racingkings\";\nexport const VARIANT_THREE_CHECK = \"threecheck\";\nexport const VARIANT_KING_OF_THE_HILL = \"kingofthehill\";\nexport const VARIANT_CRAZYHOUSE = \"crazyhouse\";\n\nexport const CHESS_COM_RULES_STANDARD = \"chess\";\nexport const CHESS_COM_RULES_THREE_CHECK = \"threeCheck\";\nexport const CHESS_COM_RULES_KING_OF_THE_HILL = \"kingofthehill\";\nexport const CHESS_COM_RULES_CRAZYHOUSE = \"crazyhouse\";\n\nexport const LICHESS_PERF_RACING_KINGS = \"racingKings\"\nexport const LICHESS_PERF_THREE_CHECK = \"threeCheck\"\nexport const LICHESS_PERF_KING_OF_THE_HILL = \"kingOfTheHill\"\nexport const LICHESS_PERF_CRAZYHOUSE = \"crazyhouse\"\n\nexport const LICHESS_HEADER_RACING_KINGS = \"Racing Kings\"\nexport const LICHESS_HEADER_THREE_CHECK = \"Three-check\"\nexport const LICHESS_HEADER_KING_OF_THE_HILL = \"King of the Hill\"\nexport const LICHESS_HEADER_STANDARD = \"Standard\"\nexport const LICHESS_HEADER_CRAZYHOUSE = \"Crazyhouse\"\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport { Radio, FormControlLabel, RadioGroup, FormHelperText, FormControl, FormLabel} from '@material-ui/core';\nimport deepEqual from 'deep-equal'\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(event) {\n        let playerColor = event.target.value\n        this.setState({ playerColor: playerColor })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        if(!SitePolicy.isAdvancedFiltersEnabled(this.props.site)) {\n            setImmediate(this.setFilters.bind(this))\n        }\n}\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        if(!this.state.playerColor) {\n            this.setState({colorError:\"Please select a color\"})\n            return\n        }\n        this.setState({colorError:\"\", isAdvancedFiltersOpen:false})\n        this.props.filtersChange(this.state)\n    }\n    getSummary(isDisabled) {\n        if(this.props.playerColor && !isDisabled) {\n            return <span>\n                {getNumberIcon('done')}\n                Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n                {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    componentWillReceiveProps(newProps) {\n        this.setState({...newProps.advancedFilters, playerColor:newProps.playerColor})\n    }\n\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key]===value) {\n                continue\n            }\n            if(!deepEqual(this.props.advancedFilters[key], value)) {\n                return true\n            } \n        }\n        return false\n    }\n\n    \n    render(){\n        let isDisabled = !SitePolicy.isFilterPanelEnabled(this.props.site, this.props.playerName, this.props.selectedNotablePlayer)\n        return <Accordion expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={isDisabled}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary(isDisabled)}</AccordionSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloaderfirstsection\">\n                <FormControl component=\"fieldset\" error={!!this.state.colorError}>\n                    <FormLabel component=\"legend\">Games where <b>{this.props.playerName}</b> is playing as:</FormLabel>\n                    <RadioGroup onChange={this.playerColorChange.bind(this)} value={this.state.playerColor}>\n                        <FormControlLabel className=\"whitelabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_WHITE} label={this.state.playerColor === Constants.PLAYER_COLOR_WHITE?<b>White</b>:\"White\"}/>\n                        <FormControlLabel className=\"blacklabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_BLACK} label={this.state.playerColor === Constants.PLAYER_COLOR_BLACK?<b>Black</b>:\"Black\"}/>\n                    </RadioGroup>\n                    <FormHelperText>{this.state.colorError}</FormHelperText>\n                </FormControl>\n                </div>\n                {SitePolicy.isAdvancedFiltersEnabled(this.props.site)?<div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse>\n                </div>:null}\n                </ExpansionPanelDetails>\n                <Divider />\n                <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></Accordion>\n    \n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReaderWorker'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp'\nimport Equalizer from '@material-ui/icons/Equalizer'\nimport Fade from '@material-ui/core/Fade'\nimport Save from '@material-ui/icons/Save';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {Tooltip} from '@material-ui/core'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport {serializeOpeningTree, deserializeOpeningTree} from '../../app/OpeningTreeSerializer'\nimport {proxy} from 'comlink'\nimport streamsaver from 'streamsaver'\nimport cookieManager from '../../app/CookieManager'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false,\n            exportingInProgress : false\n        }\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.encoder = new TextEncoder()\n\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n    importTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"LoadTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.importOpeningTree.bind(this))\n    }\n    importOpeningTree() {\n        deserializeOpeningTree(this.props.files[0], \n            (err,data, subMesage)=> {\n                if(err) {\n                    this.props.showError(err, null, subMesage)\n                    this.setState({exportingInProgress:false})\n                    return\n                }\n                let success = this.props.importOpeningTreeObject(data)\n                this.setState({exportingInProgress:false})\n                if(success) {\n                    this.props.showInfo(\"Successfuly loaded openingtree\")                \n                }\n            })\n    }\n    exportTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"SaveTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.exportOpeningTree.bind(this))\n    }\n    exportOpeningTree() {\n        serializeOpeningTree(this.props.exportOpeningTreeObject(), \n            SitePolicy.exportFileName(this.props.site, this.props.playerName, this.props.playerColor, null, \"tree\"), \n            (err, info) => {\n                if(err) {\n                    this.props.showError(err)                    \n                } else {\n                    this.props.showInfo(info)\n                }\n                this.setState({exportingInProgress:false})\n            })\n    }\n    abortDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n    downloadResponse(result, pendingDownloads) {\n        this.fileWriter.write(this.encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n            if(!pendingDownloads) {\n                this.abortDownloading()\n                return false\n            }\n        })\n        return true\n    }\n\n    readPgn(shouldDownloadToFile) {\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(\n                SitePolicy.exportFileName(\n                    this.props.site, this.props.playerName, \n                    this.props.playerColor, this.props.selectedNotableEvent, \"pgn\"))\n            this.fileWriter = fileStream.getWriter()\n        }\n\n        new PGNReader(this.props.variant).then((readerInstance) => {\n            this.pgnReader = readerInstance\n            this.pgnReader.fetchPGNFromSite(this.props.playerName,\n                this.props.playerColor,\n                this.props.site,\n                this.props.selectedNotablePlayer,\n                this.props.selectedNotableEvent,\n                this.props.selectedOnlineTournament,\n                shouldDownloadToFile,\n                this.props.advancedFilters,\n                proxy(this.props.notify),\n                proxy(this.props.showError),\n                proxy(this.stopDownloading.bind(this)),\n                this.props.files,\n                proxy(this.downloadResponse.bind(this)),\n                this.getTokens())\n        })\n    }\n    \n    getTokens(){\n        return {\n            lichess:cookieManager.getLichessAccessToken()\n        }\n    }\n    download() {\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    getPlayerName() {\n        if(this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.props.selectedNotablePlayer.name\n        }\n        return this.props.playerName\n    }\n    componentWillReceiveProps(newProps) {\n        if(newProps.gamesProcessed>0) {\n            this.setState({isGamesSubsectionOpen:true})\n        }\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true, loadedSite:this.props.site })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    openingTreeLoadActions() {\n        return <div className=\"pgnloadersection\">\n            <MaterialUIButton\n            onClick={this.importTreeClicked.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<GetApp/>}\n            className=\"mainButton\" disableElevation\n            disabled={this.state.exportingInProgress}\n            >\n                {this.state.exportingInProgress?\"Loading from file\":\"Load openingtree\"}\n        </MaterialUIButton></div>\n    }\n    regularActions() {\n        let downloadDisabledReason = SitePolicy.treeSaveDisabledReason(\n                                        this.state.loadedSite, \n                                        this.props.site,\n                                        this.props.gamesProcessed, \n                                        this.props.isDownloading)\n        return <div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            <div className=\"pgnloadersection\"><Tooltip placement=\"top\" title={downloadDisabledReason||\"Save a .tree file locally for faster reload later\"}>\n                <span><MaterialUIButton\n                onClick={this.exportTreeClicked.bind(this)}\n                variant=\"contained\"\n                color=\"default\"\n                startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<Save/>}\n                className=\"mainButton\" disableElevation\n                disabled={!!downloadDisabledReason || this.state.exportingInProgress}\n                >\n                    {this.state.exportingInProgress?\"Saving to file\":\"Save .tree file\"}\n                </MaterialUIButton></span></Tooltip></div>\n            }\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {!this.props.playerColor?\"Games\":this.props.playerColor === Constants.PLAYER_COLOR_WHITE?\"White games\":\"Black games\"}{` loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves&gt;&gt;\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    mainComponent() {\n        if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.openingTreeLoadActions()\n        }\n        return this.regularActions()\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import {wrap} from 'comlink'\n\nconst PGNReader = wrap(new Worker('./PGNReader.js', { type: 'module' }))\n\nexport default PGNReader","import * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport {copyText} from './loader/Common'\nimport {chessLogic} from '../app/chess/ChessLogic'\nimport OpeningGraph from '../app/OpeningGraph'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(!this.playerColor() || this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(from, to, san) {\n    const chess = this.chess\n    let move = chess.move({ from, to, san, promotion: 'q'})\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(from, to, san) {\n    this.onMove(from,to, san)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = chessLogic(this.state.variant, fen)\n    this.setState({fen:fen, lastMove:previousMove})\n}\nfunction updateProcessedGames(downloadLimit, n, parsedGame) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.state.openingGraph.addPGN(parsedGame.pgnStats, parsedGame.parsedMoves,\n            parsedGame.latestFen,parsedGame.playerColor, this.state.variant)\n    this.setState({\n        gamesProcessed: totalGamesProcessed,\n        downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest !== move.orig? move.dest:null,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes() {\n    var moves = this.movesToShow()\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction movesToShow() {\n    if(!this.state.openingGraph.hasMoves) {\n        return null;\n    }\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.details.count-a.details.count):[]\n}\n\n\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = chessLogic(this.state.variant)\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\n\nfunction launch(url) {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n\n\nfunction showError(message, trackingEvent, subMessage, action, severity) {\n    let errorActionText, errorAction\n    let messageSeverity = severity || Constants.ERROR_SEVERITY_ERROR\n    if(action === Constants.ERROR_ACTION_VISIT_OLD_SITE) {\n        errorActionText=\"Visit old site\"\n        errorAction = launch(\"https://www.openingtree.com/old\")\n    } else if(action !== Constants.ERROR_ACTION_NONE){\n        errorActionText=\"Report this\"\n        errorAction = this.toggleFeedback(true)\n    }\n    this.setState({message:message, subMessage:subMessage,\n        errorAction:errorAction, errorActionText:errorActionText,\n        messageSeverity:messageSeverity})\n    let eventName = messageSeverity+\"Shown\"\n    if(trackingEvent) {\n        eventName = eventName+\":\"+trackingEvent\n    }\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,eventName, message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:Constants.ERROR_SEVERITY_SUCCESS})\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:'', subMessage:''})\n}\n\nfunction toggleFeedback(diagnosticsOpen) {\n    return () => {\n        let feedbackOpen = this.state.feedbackOpen\n        this.closeError()\n        this.setState({feedbackOpen:!feedbackOpen,\n                diagnosticsDataOpen:diagnosticsOpen})\n    }\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction toggleDiagnosticsData() {\n    this.setState({diagnosticsDataOpen:!this.state.diagnosticsDataOpen})\n}\n\nfunction copyDiagnostics() {\n    copyText(\"diagnosticsText\")\n    this.showInfo(\"Copied Diagnostics data\")\n}\n\n\nfunction importGameState(importState) {\n    this.setState({\n      settings:importState.settings,\n      openingGraph:importState.openingGraph,\n      gamesProcessed:importState.gamesProcessed,\n      variant:importState.variant?importState.variant:Constants.VARIANT_STANDARD\n    })\n    setImmediate(this.reset.bind(this))// setImmediate because we want the variant change to take effect\n  }\n  function getChessboardWidth(){\n    // getting nearest multiple of 8 because chessground has \n    // css alignment issues if board width is not a multple of 8\n    \n    return `${nearestMultipleOf8(getChessboardWidthInternal())}px`\n  }\n  function nearestMultipleOf8(n){\n      while(n%8!==0) {\n          n++;\n      }\n      return n;\n  }\n  function getChessboardWidthInternal(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return Math.round(window.innerWidth*95/100) //95vw\n    } else if ((window.innerWidth<=1424)) {\n      return Math.round(Math.min(window.innerWidth*48/100,Math.max(512,window.innerHeight-100))) // 40vw\n    } else {\n      return Math.round(Math.min(712,Math.max(512,window.innerHeight-100)))// innherHeight-100 to leave some space for header and footer\n    }\n\n  }\n\nfunction getDiagnosticsValue() {\n  return `--------------------\n  ${navigator.userAgent}\n  -------------------\n  ${JSON.stringify(this.state)}\n  -------------------\n  `\n}\nfunction getRedditLink() {\n    return `https://www.reddit.com/message/compose/?to=${Constants.OPENNIG_TREE_REDDIT}&subject=${this.getSubject()}&message=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getEmailLink() {\n    return `mailto:${Constants.OPENING_TREE_EMAIL}?subject=${this.getSubject()}&body=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getSubject() {\n    return this.state.diagnosticsDataOpen?\"Possible Openingtree bug\":\"Feedback on Openingtree\"\n}\nfunction getBody() {\n    return this.state.diagnosticsDataOpen?this.getDiagnosticsValue():\"\"\n}\n\nfunction variantChange(newVariant) {\n    this.setState({variant:newVariant, openingGraph:new OpeningGraph(newVariant)})\n    setImmediate(this.reset.bind(this))\n}\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.movesToShow = movesToShow\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.toggleFeedback = toggleFeedback.bind(obj)\n    obj.setDownloading = setDownloading\n    obj.toggleDiagnosticsData = toggleDiagnosticsData.bind(obj)\n    obj.copyDiagnostics = copyDiagnostics.bind(obj)\n    obj.importGameState = importGameState\n    obj.getDiagnosticsValue = getDiagnosticsValue\n    obj.getChessboardWidth = getChessboardWidth\n    obj.getEmailLink = getEmailLink\n    obj.getSubject = getSubject\n    obj.getBody = getBody.bind(obj)\n    obj.getRedditLink = getRedditLink\n    obj.variantChange = variantChange\n}\n\nexport {addStateManagement}","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","module.exports = __webpack_public_path__ + \"static/js/0.eecb9319.chunk.worker.js\"","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            fromYear:currentDate.getFullYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getFullYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageElo = Math.round(totalElo/totalGames)\n    let playerWins = playerColor === Constants.PLAYER_COLOR_BLACK?black:white\n    let playerLosses = playerColor !== Constants.PLAYER_COLOR_BLACK?black:white\n    let score = playerWins+(draws/2)\n    let scorePercentage = Math.round(score*100/totalGames)\n    let ratingChange = Common.DP_TABLE[scorePercentage]\n    return {\n        results:`+${playerWins}-${playerLosses}=${draws}`,\n        performanceRating:averageElo+ratingChange,\n        averageElo: averageElo,\n        score:`${Number.isInteger(score)?score:score.toFixed(1)}/${totalGames}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport function trimString(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport function lichessVariantHeader(variant) {\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.LICHESS_HEADER_RACING_KINGS\n    } else if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.LICHESS_HEADER_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.LICHESS_HEADER_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.LICHESS_HEADER_CRAZYHOUSE\n    }\n    return Constants.LICHESS_HEADER_STANDARD\n}\nexport function lichessPerf(variant) {\n    if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.LICHESS_PERF_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.LICHESS_PERF_RACING_KINGS\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.LICHESS_PERF_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.LICHESS_PERF_CRAZYHOUSE\n    }\n}\nexport function chessDotComRules(variant) {\n    if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.CHESS_COM_RULES_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.CHESS_COM_RULES_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.CHESS_COM_RULES_CRAZYHOUSE\n    }\n    return Constants.CHESS_COM_RULES_STANDARD\n}\n\n\nexport const DP_TABLE = {\n    \"100\":800,   \"99\":677,    \"98\":589,    \"97\":538,\n    \"96\":501,    \"95\":470,    \"94\":444,    \"93\":422,\n    \"92\":401,    \"91\":383,    \"90\":366,    \"89\":351,\n    \"88\":336,    \"87\":322,    \"86\":309,    \"85\":296,\n    \"84\":284,    \"83\":273,    \"82\":262,    \"81\":251,\n    \"80\":240,    \"79\":230,    \"78\":220,    \"77\":211,\n    \"76\":202,    \"75\":193,    \"74\":184,    \"73\":175,\n    \"72\":166,    \"71\":158,    \"70\":149,    \"69\":141,\n    \"68\":133,    \"67\":125,    \"66\":117,    \"65\":110,\n    \"64\":102,    \"63\":95,     \"62\":87,     \"61\":80,\n    \"60\":72,     \"59\":65,     \"58\":57,     \"57\":50,\n    \"56\":43,     \"55\":36,     \"54\":29,     \"53\":21,\n    \"52\":14,     \"51\":7,      \"50\":0,      \"49\":-7,\n    \"48\":-14,    \"47\":-21,    \"46\":-29,    \"45\":-36,\n    \"44\":-43,    \"43\":-50,    \"42\":-57,    \"41\":-65,\n    \"40\":-72,    \"39\":-80,    \"38\":-87,    \"37\":-95,\n    \"36\":-102,   \"35\":-110,   \"34\":-117,   \"33\":-125,\n    \"32\":-133,   \"31\":-141,   \"30\":-149,   \"29\":-158,\n    \"28\":-166,   \"27\":-175,   \"26\":-184,   \"25\":-193,\n    \"24\":-202,   \"23\":-211,   \"22\":-220,   \"21\":-230,\n    \"20\":-240,   \"19\":-251,   \"18\":-262,   \"17\":-273,\n    \"16\":-284,   \"15\":-296,   \"14\":-309,   \"13\":-322,\n    \"12\":-336,   \"11\":-351,   \"10\":-366,   \"9\":-383,\n    \"8\":-401,    \"7\":-422,    \"6\":-444,    \"5\":-470,\n    \"4\":-501,    \"3\":-538,    \"2\":-589,    \"1\":-677,\n    \"0\":-800,\n}","import * as ChessLogic from './chess/ChessLogic'\n\nexport default class OpeningManager {\n    plys = []\n    currentIndex = 0\n    constructor(variant) {\n        this.plys = [{pgn:'', fen:ChessLogic.rootFen(variant), move:null}]\n        this.currentIndex = 0\n    }\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager(this.props.variant)\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n          default:\n            break\n\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.variant !== this.props.variant) {\n            this.openingManager = new OpeningManager(newProps.variant)\n            return true\n\n        }\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                // called when \"clear\" or \"starting position\" actions are hit\n                this.openingManager = new OpeningManager(newProps.variant)\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faComments, faCaretDown} from '@fortawesome/free-solid-svg-icons'\nimport { faDiscord } from '@fortawesome/free-brands-svg-icons'\nimport * as Constants from '../app/Constants'\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  NavItem, NavLink\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n\n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle}/>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(\"https://www.youtube.com/watch?v=AJ66-HqdpXE\")}>\"It's so powerful\" - IM Eric Rosen <span className=\"smallText\">[Watch video]</span></NavLink></NavItem>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(Constants.OPENING_TREE_DISCORD)}><FontAwesomeIcon icon={faDiscord} className=\"discordIcon\"/> Join our discord</NavLink></NavItem>\n          </Nav>\n          <Nav className=\"\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={props.toggleFeedback}><FontAwesomeIcon icon={faComments} className=\"feedbackIcon\"/> Send feedback</NavLink></NavItem>\n          </Nav>\n          <UncontrolledDropdown>\n              <DropdownToggle className=\"bootNavColor\" nav>\n              <FontAwesomeIcon icon={faCaretDown} className=\"moreIcon\"/>More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.openingtree.com/old\")}>\n                  Old version\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://github.com/openingtree/openingtree\")}>\n                  Github\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      \n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.npmjs.com/package/material-ui-dropzone\" target=\"_blank\" action>Dropzone</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.pgnmentor.com\" target=\"_blank\" action>PGN Mentor</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.twitch.tv/imrosen\" target=\"_blank\" action>IM Eric Rosen</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\nimport People from '@material-ui/icons/People';\nimport Save from '@material-ui/icons/Save';\nimport Divider from '@material-ui/core/Divider';\nimport DateRange from '@material-ui/icons/DateRange';\nimport {Badge} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChessRook } from '@fortawesome/free-solid-svg-icons'\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport { Button as MaterialUIButton } from '@material-ui/core'\n\n\nconst SOURCE_VARIANT_COMBINATION = {\n    [Constants.VARIANT_RACING_KINGS]:[Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_KING_OF_THE_HILL]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_THREE_CHECK]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_CRAZYHOUSE]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE]\n}\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> Load <i>PGN</i> file</span></span>\n        } else if (source === Constants.SITE_EVENT_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<DateRange className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess events</span></span>\n        } else if (source === Constants.SITE_PLAYER_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<People className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess players</span></span>\n        }  else if (source === Constants.SITE_OPENING_TREE_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Save className=\"lowOpacity\"/><span className=\"sourceName\"> Load <b>.tree</b> file</span></span>\n        } else if (source === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}{addNumber?<FontAwesomeIcon icon={faChessRook} className=\"lowOpacity\" />:<Badge className=\"sourceName\" color=\"info\">New!</Badge>}<span className=\"sourceName\"> Lichess tournaments</span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n    continue(){\n        this.props.siteChange(this.props.site)\n    }\n    setSite(event) {\n        let newSite = event.target.value\n        this.props.siteChange(newSite)\n    }\n    isSourceAvailable(source, variant) {\n        let supportedSources = SOURCE_VARIANT_COMBINATION[variant]\n        if(!supportedSources) {\n            return true\n        }\n        return supportedSources.includes(source)\n    }\n    render() {\n        return <Accordion TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <RadioGroup onChange={this.setSite.bind(this)} value={this.props.site}>\n                {this.getSourceRadio(Constants.SITE_LICHESS)}\n                {this.getSourceRadio(Constants.SITE_CHESS_DOT_COM)}\n                {this.getSourceRadio(Constants.SITE_ONLINE_TOURNAMENTS)}\n                {this.getSourceRadio(Constants.SITE_OPENING_TREE_FILE)}\n                {this.props.variant === Constants.VARIANT_STANDARD?<Divider className=\"dividerMargin\"/>:null}\n                {this.getSourceRadio(Constants.SITE_PLAYER_DB)}\n                {this.getSourceRadio(Constants.SITE_EVENT_DB)}\n                {this.getSourceRadio(Constants.SITE_PGN_FILE)}\n               </RadioGroup>\n            </AccordionDetails>\n            {this.props.site?\n            <span>\n            <Divider />\n\n            <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.continue.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></span>:\n                null\n            }\n        </Accordion>\n        \n    }\n\n    getSourceRadio(source) {\n        if(!this.isSourceAvailable(source,this.props.variant)) {\n            return null\n        }\n        return <FormControlLabel \n                className=\"sitelabel\" \n                value={source} \n                control={<Radio color=\"primary\" />} \n                label={this.getSourceOption(source)} />\n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport { trackEvent } from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\n\nexport default class Dropzone extends React.Component{\n    handleFileChange(newFiles) {\n      trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FileSaved\", newFiles.length>0?newFiles[0].name:null)\n      this.props.filesChange(newFiles)\n    }\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText={this.props.dropzoneText}\n          onChange={this.handleFileChange.bind(this)}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={this.props.filesLimit}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import SelectSearch from 'react-select-search';\nimport React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport default class NotableChessGames extends React.Component {\n\n    updateDetails = (value) => {\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"NotableGameSelected\", value.value)\n        this.props.onChange(value)\n    }\n    \n    renderDetails(option) {\n        return (<div>\n                <span><LazyLoadImage alt={option.name} className=\"profilePicture\" width=\"40\" height=\"40\" src={option.profile.imageUrl} /></span>\n                <div>{option.name}</div>\n                <div className=\"smallText\">{option.profile.subText}</div>\n                </div>);\n    }\n    render() {\n        if(!this.props.list) {\n            return <div className=\"lowOpacity textCenter\"><img alt=\"loading\" width='25' height='25' src=\"./spinner.gif\"/> Loading List</div>\n        } else if(!this.props.list.length) {\n            return <div className=\"lowOpacity textCenter\"> Could not fetch list</div>\n        }\n        let options = this.props.list.map(option=>{return {...option, value:option.name}})\n        return <SelectSearch\n            name=\"goatPlayers\"\n            value={this.props.selectedDetail.value}\n            options={options}\n            placeholder={this.props.placeholder}\n            renderOption={this.renderDetails}\n            onChange={this.updateDetails}\n        />\n    }\n}\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport { Button as MaterialUIButton, TextField, AccordionDetails } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle} from '@fortawesome/free-solid-svg-icons'\nimport {faCheck, faSync, faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\nimport Divider from '@material-ui/core/Divider';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nimport NotableChessGames from './NotableChessGames';\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap'\nimport LockOpen from '@material-ui/icons/Lock'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport {Spinner} from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            tournamentUrl:'',\n            files:[],\n            selectedPlayer:{},\n            selectedEvent:{}\n        }\n        \n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n    editTournamentUrl(event) {\n        this.setState({\n            tournamentUrl: event.target.value,\n            tournamentUrlError:''\n        })\n    }\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    notablePlayerChange(player) {\n        this.setState({\n            selectedPlayer:player})\n    }\n    notableEventChange(event) {\n        this.setState({\n            selectedEvent:event})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({playerNameError:'', tournamentUrlError: ''})\n    }\n    \n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_EVENT_DB){\n            if(!this.state.selectedEvent){\n                this.props.showError(\"Please select an event\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(!this.state.selectedPlayer){\n                this.props.showError(\"Please select a player\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload an openingtree file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            if(!this.state.tournamentUrl){\n                this.setState({\n                    tournamentUrlError:'Please enter a url'\n                })\n                return false\n            } else {\n                \n                let url = this.state.tournamentUrl.trim()\n                if(!url.startsWith(\"http\")) {\n                    url = \"https://\"+url\n                }\n                let parsedUrl = null\n                try {\n                    parsedUrl = new URL(url)\n                } catch (e) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a valid url'\n                    })\n                    return false\n                }\n                let hostname = parsedUrl.hostname\n                let tournamentSite = null;\n                if(hostname === 'lichess.org' || hostname.endsWith('.lichess.org')) {\n                    tournamentSite = Constants.SITE_LICHESS\n                } else if(hostname === 'chess.com' || hostname.endsWith('.chess.com')) {\n                    this.setState({\n                        tournamentUrlError:'chess.com tournaments are not currently supported'\n                    })\n                    return false;\n                }\n                if(!tournamentSite) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a lichess.org url'\n                    })\n                    return false;\n                }\n                let pathComponents = parsedUrl.pathname.split(\"/\")\n                let tournamentId = null\n                let tournamentType = null\n                for(let i=0;i<pathComponents.length;i++) {\n                    if(pathComponents[i]) {\n                        tournamentType = pathComponents[i]\n                        break\n                    }\n                }\n\n                for(let i=pathComponents.length-1;i>=0;i--) {\n                    if(pathComponents[i]) {\n                        tournamentId = pathComponents[i]\n                        break\n                    }\n                }\n                if(!tournamentId) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a valid tournament url'\n                    })\n                    return false;\n                }\n                \n                this.selectedOnlineTournament = {\n                    tournamentSite:tournamentSite,\n                    tournamentId:tournamentId,\n                    tournamentType:tournamentType\n                \n                }\n            }\n        }\n        return true\n    }\n    finalPlayerName(source, playerName, selectedNotablePlayer) {\n        if(source === Constants.SITE_PLAYER_DB) {\n            return selectedNotablePlayer.name\n        }\n        if(source === Constants.SITE_EVENT_DB) {\n            return ''\n        }\n        return playerName\n    }\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(\n                this.finalPlayerName(\n                    this.props.site, \n                    this.state.playerName,\n                    this.state.selectedPlayer), \n                this.state.files, \n                this.state.selectedEvent, \n                this.state.selectedPlayer,\n                this.selectedOnlineTournament)\n        }\n    }\n    \n    getSummary() {\n        if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(this.props.selectedPlayer && this.props.selectedPlayer.name) {\n                return <span>\n                        {getNumberIcon('done')}\n                        {this.props.selectedPlayer.profile.title}{'\\u00A0'}\n                        <b>{this.props.selectedPlayer.name}</b>\n                    </span>\n            }\n        } else if(this.props.site === Constants.SITE_LICHESS || \n            this.props.site === Constants.SITE_CHESS_DOT_COM){\n            if(this.props.playerName) {\n                return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n            }\n        } else if(this.props.site === Constants.SITE_PGN_FILE || \n            this.props.site === Constants.SITE_OPENING_TREE_FILE){\n            if(this.props.files.length===1) {\n                return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n            }\n            if(this.props.files.length>1) {\n                return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n            }\n        } else if(this.props.site === Constants.SITE_EVENT_DB) {\n            if(this.props.selectedEvent && this.props.selectedEvent.name) {\n                return <span>{getNumberIcon('done')}{this.props.selectedEvent.name}</span>\n            }\n        }\n        else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            if(this.props.selectedOnlineTournament) {\n                return <span>{getNumberIcon('done')}Id: <b>{this.props.selectedOnlineTournament.tournamentId}</b></span>\n            }\n        }\n        return <span>{getNumberIcon(2)}{this.title(this.props.site)}</span>\n    }\n\n    title(site){\n        if(site === Constants.SITE_ONLINE_TOURNAMENTS \n            || site === Constants.SITE_EVENT_DB) {\n            return \"Tournament details\"\n        } else if(site === Constants.SITE_OPENING_TREE_FILE \n            || site === Constants.SITE_PGN_FILE) {\n                return \"File details\"\n        } \n        return \"Player details\"\n    }\n\n    launchLichessOauth() {\n        trackEvent(\n            Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessLogin\")\n        setTimeout(()=>{\n            window.location.href = \n                'https://oauth.lichess.org/oauth/authorize?response_type=code&client_id=EBXrB9R9OXpaRvOU&scope=preference:read&redirect_uri=https%3A%2F%2Flichesslogin.openingtree.com&state='+window.location.pathname\n            }, 150)\n        }\n    getLichessSelection() {\n        return <div>\n            {this.getLichessCardBody()}\n            <br/>\n            {this.getPlayerNameInput('lichess username')}\n        </div>\n    }\n\n    getLichessCardBody() {\n        if (this.props.lichessLoginState === Constants.LICHESS_STATE_PENDING) {\n            return <Card>\n                <div className=\"center\">\n                    <Spinner className=\"bigSpinner dividerMargin\" /><br/>\n                </div>\n            </Card>\n        } else if(this.props.lichessLoginState === Constants.LICHESS_FAILED_FETCH) {\n            return <Card><CardBody className=\"singlePadding\">\n            <CardTitle className=\"smallBottomMargin redColor\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> Failed to fetch login status</CardTitle>\n            <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faSync} className=\"lowOpacity smallText leftMargin2\"/>\n            <span onClick={this.props.refreshLichessStatus} className=\"smallText linkStyle leftMargin4\"> Retry fetching status</span>\n            </CardTitle>\n            <CardTitle><FontAwesomeIcon icon={faSignOutAlt} className=\"lowOpacity smallText leftMargin2\"/>\n            <span onClick={this.props.logoutOfLichess} className=\"smallText linkStyle leftMargin4\"> Logout of lichess</span>\n            </CardTitle>\n    \n                    <MaterialUIButton\n                onClick={this.launchLichessOauth}\n                variant=\"contained\"\n                color=\"default\"\n                className=\"mainButton\" disableElevation\n                startIcon={<LockOpen />}\n                >\n                    LOGIN AGAIN\n                </MaterialUIButton>\n            </CardBody></Card>\n        } else if (this.props.lichessLoginState === Constants.LICHESS_LOGGED_IN && this.props.lichessLoginName) {\n            return <Card>\n                <CardBody className=\"singlePadding\">\n                    <CardTitle>\n                        <FontAwesomeIcon icon={faCheck} className=\"lowOpacity greenColor\"/> Logged in as\n                        <b> {this.props.lichessLoginName}</b>\n                        \n                    </CardTitle>\n                    \n                    <MaterialUIButton\n                        onClick={this.props.logoutOfLichess}\n                        variant=\"contained\"\n                        color=\"default\"\n                        className=\"mainButton\" disableElevation\n                        startIcon={<ExitToApp />}\n                        >\n                            LOGOUT\n                    </MaterialUIButton>\n                </CardBody>\n            </Card>\n        }\n        return <Card><CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> Speed up tree building (optional)</CardTitle>\n        <CardText className=\"smallText\">\n            Lichess allows much faster download of games if you login. You can learn more about this <a href = 'https://lichess.org/api#operation/apiGamesUser' rel=\"noopener noreferrer\" target=\"_blank\">here</a>. \n            Recommended for viewing your own games or when your opponent has lots of games.\n        </CardText>\n        <MaterialUIButton\n                onClick={this.launchLichessOauth}\n                variant=\"contained\"\n                color=\"default\"\n                className=\"mainButton\" disableElevation\n                startIcon={<LockOpen />}\n                >\n                    LOGIN TO LICHESS\n                </MaterialUIButton>\n        </CardBody>\n        </Card>\n    }\n\n    getChessComSelection() {\n        return this.getPlayerNameInput('chess.com username')\n    }\n\n    getPlayerNameInput(label, helperText) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.playerName}\n            helperText={this.state.playerNameError? this.state.playerNameError:helperText}\n            error={this.state.playerNameError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    getOnlineTournamentSelection() {\n        return <div>\n            {this.getOnlineTournamentCard()}\n            <br/>\n            {this.getOnlineTournamentInput('Enter tournament url', 'eg. https://lichess.org/tournament/QlooVt7W')}\n        </div>\n    }\n    getOnlineTournamentCard(){\n        return <Card>\n        <CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n        <CardText className=\"smallText\">\n            You can load all of the games of a lichess tournament by copying the  url from your address bar on those sites and pasting it below.\n            <br/><br/>\n            <b>Why is chess.com not supported?</b>\n            <br/>chess.com API has a few bugs in returning tournament games so we are not able to support them currently. Bugs have been reported to chess.com.\n            \n        </CardText>\n        </CardBody>\n        </Card>\n    }\n    \n\n    getOnlineTournamentInput(label, helperText) {\n        return <TextField\n            className=\"urlField\" name=\"onlineTournament\" id=\"onlineTournamentTextBox\" \n            margin=\"dense\" onChange={this.editTournamentUrl.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.tournamentUrl}\n            helperText={this.state.tournamentUrlError? this.state.tournamentUrlError:helperText}\n            error={this.state.tournamentUrlError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    playerNameKeyUp(evt) {\n        if(evt.keyCode === 13) { // enter key pressed\n            this.setPlayerDetails()\n        }\n    }\n    getGoatDBSelection(){\n        return <NotableChessGames \n            list={this.props.notablePlayers} \n            placeholder=\"Select a player\"\n            onChange={this.notablePlayerChange.bind(this)}\n            selectedDetail={this.state.selectedPlayer}/>\n    }\n    getGoatDBEventSelection(){\n        return <NotableChessGames \n            list={this.props.notableEvents} \n            placeholder=\"Select an event\"\n            onChange={this.notableEventChange.bind(this)}\n            selectedDetail={this.state.selectedEvent}/>\n    }\n\n    getPgnFileSelection() {\n        return <div><Dropzone filesChange={this.filesChange.bind(this)} filesLimit={10}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click here to select files\"\n                />\n                {this.getPlayerNameInput('player name in PGN', 'Leave blank to load all games')}\n                </div>\n    }\n\n    getOpeningTreeSelection() {\n        return <div>\n            <Card>\n                <CardBody className=\"singlePadding\">\n                <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n                <CardText className=\"smallText\">\n                    If you plan to revisit the same player, you can save a <b>.tree</b> file locally by loading a tree and then clicking <i>\"Save .tree file\"</i>.\n                    To reload the same tree, drop the <b>.tree</b> file in the dropzone below.\n                </CardText>\n                </CardBody>\n                </Card><br/>\n            <Dropzone filesChange={this.filesChange.bind(this)} filesLimit={1}\n                    dropzoneText=\"Drag and drop openingtree save file here or click here to select a file\"\n                />\n        </div>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return this.getPgnFileSelection()\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getLichessSelection()\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getChessComSelection()\n        } else if (this.props.site === Constants.SITE_EVENT_DB) {\n            return this.getGoatDBEventSelection()\n        } else if (this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.getGoatDBSelection()\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.getOpeningTreeSelection()\n        } else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return this.getOnlineTournamentSelection()\n        }\n        return <div/>\n    }\n\n    render() {\n        return <Accordion expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</AccordionSummary>\n                <AccordionDetails>\n                        {this.getInputsToShow()}\n                </AccordionDetails>\n                <Divider />\n                <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></Accordion>\n            \n    }\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFlagCheckered, faChessKing, faDiceThree, faMountain , faHouseDamage} from '@fortawesome/free-solid-svg-icons'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider';\n\n\nexport default class Source extends React.Component {\n\n\n    getVariantOption(variant, addNumber) {\n        return <span>\n            {addNumber?getNumberIcon('done', addNumber):null}\n            <FontAwesomeIcon icon={this.getVariantIcon(variant)} /> <span> {this.getVariantText(variant)} </span>\n        </span>\n    }\n\n    getVariantText(variant) {\n        if (variant === Constants.VARIANT_RACING_KINGS) {\n            return \"Racing kings\"\n        } else if (variant === Constants.VARIANT_THREE_CHECK) {\n            return \"Three check\"\n        } else if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n            return \"King of the hill\"\n        } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n            return \"Crazyhouse\"\n        } \n        return \"Standard rules\" \n    }\n\n    getVariantIcon(variant) {\n        if (variant === Constants.VARIANT_RACING_KINGS) {\n            return faFlagCheckered\n        } else if (variant === Constants.VARIANT_THREE_CHECK) {\n            return faDiceThree\n        } else if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n            return faMountain\n        } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n            return faHouseDamage\n        } \n        return faChessKing\n    }\n    changeLink(){\n        return this.props.expandedPanel === 'variant'?null:<span className=\"smallText\" style={{\"verticalAlign\":\"text-bottom\"}}>&nbsp;[<span className=\"linkStyle\">change</span>]</span>\n    }\n    getVariantRadio(source) {\n        return <FormControlLabel \n                className=\"sitelabel\" \n                value={source} \n                control={<Radio color=\"primary\" />} \n                label={this.getVariantOption(source)} />\n    }\n    continue(){\n        this.props.variantChange(this.props.variant)\n    }\n    setVariant(event){\n        let newVariant = event.target.value\n        this.props.variantChange(newVariant)\n    }\n\n    render() {\n        return <Accordion TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'variant'}\n            onChange={this.props.handleExpansionChange}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getVariantOption(this.props.variant, true)}\n                </div>\n                <div>\n             {this.changeLink()}\n            </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <RadioGroup onChange={this.setVariant.bind(this)} value={this.props.variant}>\n                {this.getVariantRadio(Constants.VARIANT_STANDARD)}\n                {this.getVariantRadio(Constants.VARIANT_CRAZYHOUSE)}\n                {this.getVariantRadio(Constants.VARIANT_THREE_CHECK)}\n                {this.getVariantRadio(Constants.VARIANT_KING_OF_THE_HILL)}\n                {this.getVariantRadio(Constants.VARIANT_RACING_KINGS)}\n               </RadioGroup>\n            </AccordionDetails>\n            <Divider />\n\n            <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.continue.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions>\n        </Accordion>\n        \n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\nimport Variants from './Variants'\nimport request from 'request'\nimport * as SitePolicy from '../../app/SitePolicy'\nimport cookieManager from '../../app/CookieManager'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let selectedSite = new URLSearchParams(window.location.search).get(\"source\")\n\n        this.state = {\n            playerName: '',\n            site: selectedSite?selectedSite:'',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: selectedSite?'user':'source',\n            notablePlayers:null,\n            notableEvents:null,\n            files:[],\n            selectedNotableEvent:{},\n            selectedNotablePlayer:{},\n            lichessLoginState: Constants.LICHESS_NOT_LOGGED_IN,\n            lichessLoginName: null\n\n        }\n        if(selectedSite === Constants.SITE_LICHESS) {\n            this.fetchLichessLoginStatus()\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    exportOpeningTreeObject(){\n        return {\n            header:{\n                version:2,// current openingtree file version. used to check compatibility of files\n                timestamp:Math.floor(Date.now() / 1000),\n                gamesProcessed:this.props.gamesProcessed,\n                settings:this.props.settings,\n                playerName:this.state.playername,\n                site: this.state.site,\n                advancedFilters:this.advancedFilters(),\n                variant:this.props.variant\n            },\n            arrays: [[...this.props.openingGraph.graph.nodes.entries()],\n                        [...this.props.openingGraph.graph.pgnStats]]\n        }\n    }\n\n    importOpeningTreeObject(openingTreeSave) {\n        let saveVersion = 1;\n        if(openingTreeSave.header.version) {\n            saveVersion = openingTreeSave.header.version\n        }\n        if(saveVersion < Constants.OPENING_TREE_FILE_CURRENT_VERSION) {\n            this.props.showError(\"This is an old format of openingtree file.\", null, \n                \"You can try loading it by visiting the old website\", Constants.ERROR_ACTION_VISIT_OLD_SITE)\n            return false\n        }\n        this.setState({\n            ...openingTreeSave.header.advancedFilters,\n            playerColor:openingTreeSave.header.settings.playerColor,\n            site:openingTreeSave.header.site,\n            playerName:openingTreeSave.header.settings.playerName,\n        })\n        this.props.openingGraph.setEntries(openingTreeSave.arrays[0], openingTreeSave.arrays[1])\n        this.props.importCallback({\n            settings:openingTreeSave.header.settings,\n            gamesProcessed:openingTreeSave.header.gamesProcessed,\n            openingGraph:this.props.openingGraph,\n            variant:openingTreeSave.header.variant\n        })\n        return true\n    }\n\n    playerDetailsChange(playerName, files, selectedNotableEvent, selectedNotablePlayer, selectedOnlineTournament) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:SitePolicy.isFilterPanelEnabled(this.state.site, playerName, selectedNotablePlayer)?'filters':'',\n            files:files,\n            selectedNotableEvent:selectedNotableEvent,\n            selectedNotablePlayer:selectedNotablePlayer,\n            playerColor:'',\n            selectedOnlineTournament:selectedOnlineTournament\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n    fetchGOATGames(url, callback){\n        request.get(url, (error, response) =>{\n            if(error) {\n                this.props.showError(\"Could not fetch player list. Failed to connect to DB.\")\n                callback([])\n                return \n            }\n            let gamesDetails\n            try{\n                gamesDetails = JSON.parse(response.body).list\n            } catch (e) {\n                console.log(e)\n            }\n            if(!gamesDetails) {\n                this.props.showError(\"Failed to load games.\")\n                callback([])\n            } else {\n                callback(gamesDetails)\n            }\n        })\n    }\n\n\n\n    siteChange(newSite) {\n        if(newSite === Constants.SITE_PLAYER_DB && !this.state.notablePlayers) {\n            this.fetchGOATGames('https://goatchess.github.io/list.json', (gamesDetails)=>{\n                this.setState({notablePlayers:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_EVENT_DB && !this.state.notableEvents) {\n            this.fetchGOATGames('https://goatevents.github.io/list.json', (gamesDetails)=>{\n                this.setState({notableEvents:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_LICHESS) {\n            this.fetchLichessLoginStatus()\n        }\n\n        this.setState({ site: newSite, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", newSite)\n    }\n    fetchLichessLoginStatus(){\n        let lichessAccessToken = cookieManager.getLichessAccessToken()\n        if(lichessAccessToken) {\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessTokenFound\")\n\n            this.setState({lichessLoginState:Constants.LICHESS_STATE_PENDING})\n            \n            request.get(\"https://lichess.org/api/account\", {timeout:5000, auth:{bearer:cookieManager.getLichessAccessToken()}}, (error, response)=>{\n                if(!error && response) {\n                    let responseObj = JSON.parse(response.body) \n                    if(responseObj && responseObj.username) {\n                        this.setState({\n                            lichessLoginState:Constants.LICHESS_LOGGED_IN,\n                            lichessLoginName:responseObj.username\n                        })\n                        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessFetchSuccess\")\n                        return\n                    } \n                } \n                trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessFetchFailed\")\n                this.setState({lichessLoginState:Constants.LICHESS_FAILED_FETCH})\n            })\n        } else {\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessNoToken\")\n        }\n    }\n    logoutOfLichess() {\n        cookieManager.deleteLichessAccessToken()\n        this.setState({\n            lichessLoginState:Constants.LICHESS_NOT_LOGGED_IN,\n            lichessLoginName:''\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessLogout\")\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n    variantChange(newVariant) {\n        this.setState({expandedPanel:'source'})\n        this.props.variantChange(newVariant)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Variants expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('variant').bind(this)}\n                variantChange={this.variantChange.bind(this)} variant={this.props.variant}/>\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}\n                variant={this.props.variant}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files} notablePlayers={this.state.notablePlayers}\n                notableEvents={this.state.notableEvents} site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}\n                pgnUrl={this.state.pgnUrl} selectedPlayer={this.state.selectedNotablePlayer} selectedEvent={this.state.selectedNotableEvent}\n                lichessLoginState={this.state.lichessLoginState} lichessLoginName={this.state.lichessLoginName}\n                logoutOfLichess={this.logoutOfLichess.bind(this)} refreshLichessStatus={this.fetchLichessLoginStatus.bind(this)}\n                selectedOnlineTournament={this.state.selectedOnlineTournament}\n            />\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} playerName={this.state.playerName} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}\n                selectedNotablePlayer={this.state.selectedNotablePlayer} />\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed} \n                selectedNotablePlayer={this.state.selectedNotablePlayer} selectedNotableEvent={this.state.selectedNotableEvent}\n                exportOpeningTreeObject={this.exportOpeningTreeObject.bind(this)} showInfo={this.props.showInfo}\n                importOpeningTreeObject={this.importOpeningTreeObject.bind(this)} selectedOnlineTournament={this.state.selectedOnlineTournament}\n                variant={this.props.variant}/>\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    constructor(props){\n        super(props)\n        window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        if(e.srcElement && e.srcElement.tagName === 'INPUT') {\n            return \n        }\n        switch(e.keyCode) {\n          case 70: // F key\n          this.toggle('orientation')()\n          break\n          default:\n            break\n\n        }\n      }\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/standard/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails} from '../app/util'\nimport {copyText} from './loader/Common'\n\nexport default class ReportControls extends React.Component {\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        copyText(\"fenField\")/* Get the text field */\n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        if(!this.props.moveDetails.lastPlayedGame) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(this.props.moveDetails.totalOpponentElo, \n                                                        this.props.moveDetails.whiteWins, \n                                                        this.props.moveDetails.draws, \n                                                        this.props.moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            {(isNaN(performanceDetails.performanceRating) || !this.props.settings.playerName)?null:            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>}\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Results</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.results}</TableCell>\n            </TableRow>\n            {(isNaN(performanceDetails.averageElo) || !this.props.settings.playerName)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {((this.props.simplifiedView || isNaN(performanceDetails.averageElo)) || !this.props.settings.playerName)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {(this.props.settings.playerName && !this.props.simplifiedView && this.props.moveDetails.bestWinElo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.bestWinElo} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.bestWinGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(this.props.settings.playerName && !this.props.simplifiedView && this.props.moveDetails.worstLossElo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.worstLossElo} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.worstLossGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(!this.props.simplifiedView && this.props.moveDetails.longestGameInfo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Longest game</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.longestGameInfo.numberOfPlys} Plys <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.longestGameInfo)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(!this.props.simplifiedView && this.props.moveDetails.shortestGameInfo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Shortest game</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.props.moveDetails.shortestGameInfo.numberOfPlys} Plys <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.shortestGameInfo)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.removeQuestionMarksFromDate(this.props.moveDetails.lastPlayedGame.date)} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(this.props.moveDetails.lastPlayedGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>\n            </TableBody>\n            {this.props.simplifiedView?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n\n    removeQuestionMarksFromDate(date) {\n        if(date.indexOf('?') === -1) {\n            return date\n        }\n        return date.slice(0, date.indexOf('.'))\n    }\n}","import {Progress, Popover } from \"reactstrap\"\nimport React from 'react'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport ReportControls from './ReportControls'\n\nexport default class MovesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n\n    move(from, to, san) {\n        return () => {\n            this.props.onMove(from, to, san)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"MoveClicked\")\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    render(){\n        if(!this.props.movesToShow) {\n            return <div className = \"infoMessage\" >No moves to show. Please select a source from the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and enter the details.</div>\n        }\n    return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n    resultsTable() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = this.player(result.white, result.whiteElo)\n                    let blackPlayer = this.player(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n    player(name, elo) {\n        return `${name}${elo?`(${elo})`:''}`\n    }\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`performancePopover${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} settings={this.props.settings}/>\n            </Popover>\n    }\n    movesTable() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let sampleResultWhite = this.player(move.details.lastPlayedGame.white, move.details.lastPlayedGame.whiteElo)\n            let sampleResultBlack = this.player(move.details.lastPlayedGame.black, move.details.lastPlayedGame.blackElo)\n            let sampleResult = move.details.lastPlayedGame.result\n\n            return move.details.count > 1?<TableRow className=\"moveRow\" key = {`m${move.orig}${move.dest}${move.san}`} onClick={this.move(move.orig, move.dest, move.san)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n                <TableCell size=\"small\" id={`performancePopover${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                    {move.details.count} <FontAwesomeIcon className=\"lowOpacity\" icon={faInfoCircle}/>\n                    {this.getPopover(moveIndex)}\n                </TableCell>\n                <TableCell>\n                    <Progress className = \"border\" multi>\n                        <Progress bar className=\"whiteMove\" value={`${move.details.whiteWins/move.details.count*100}`}>{move.details.whiteWins/move.details.count>0.1?move.details.whiteWins:''}</Progress>\n                        <Progress bar className=\"grayMove\" value={`${move.details.draws/move.details.count*100}`}>{move.details.draws/move.details.count>0.1?move.details.draws:''}</Progress>\n                        <Progress bar className=\"blackMove\" value={`${move.details.blackWins/move.details.count*100}`}>{move.details.blackWins/move.details.count>0.1?move.details.blackWins:''}</Progress>\n                    </Progress>\n                    <div style={{width:'100%', height:5, border:1}}>\n\n                    </div>\n                </TableCell>\n            </TableRow>:\n            <TableRow className=\"moveRow\" key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest, move.san)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n        {this.props.settings.playerName?\n\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing moves that have been \n                played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>:\n                <TableCell colSpan=\"3\">\n                No moves found played by {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                </TableCell>\n            :\n            hasMoves?\n                <TableCell colSpan=\"3\">\n                Showing all moves that have been \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>:                \n                <TableCell colSpan=\"3\">\n                No moves found \n                played by <b>{this.props.turnColor}</b> in \n                this position.\n                </TableCell>\n\n\n        }</TableRow></TableFooter>\n    </Table>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col,Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './MovesList';\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\nimport {Modal, ModalHeader, ModalFooter} from 'reactstrap'\nimport {Table, TableRow, TableBody, TableCell} from '@material-ui/core'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n          activeGame:null\n      }\n      this.toggleModal = ()=>{\n        this.setState({activeGame:null})\n      }\n    }\n    \n\n    launchGame(game) {\n      if(game.url) {\n          return (e) => {\n              e.stopPropagation()\n              window.open(game.url, '_blank');\n              trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n          }\n      }\n      return ((e) => {\n        e.stopPropagation()\n        this.setState({activeGame:game})\n      })\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab() {\n      this.toggle('moves')\n    }\n\n    render(){\n        return <div>\n              <Modal isOpen={this.state.activeGame} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Game details</ModalHeader>\n              {!this.state.activeGame?null:\n              <Table>\n                \n                <TableBody>\n                  {\n                    Object.entries(this.state.activeGame.headers).map((entry)=>!entry[1]?null:<TableRow className=\"performanceRatingRow\">\n                        <TableCell className=\"performanceRatingRow\">{entry[0]}</TableCell>\n                        <TableCell className=\"performanceRatingRow\">{entry[1]}</TableCell>\n                    </TableRow>\n                    )}\n                  \n                </TableBody>\n              </Table>\n              }\n              <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleModal}>Done</Button>\n        </ModalFooter>\n              </Modal>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              showInfo = {this.props.showInfo}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              openingGraph={this.props.openingGraph}\n              importCallback={this.props.importCallback}\n              variant={this.props.variant}\n              variantChange={this.props.variantChange}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              movesToShow={this.props.movesToShow} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame.bind(this)} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n}","import green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, subMessage, action, actionText, showReportButton, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <div><span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message} \n                    \n                </span>\n                {!subMessage?null:<div className=\"smallText\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{subMessage}</div>}\n                </div>\n            }\n            action={[ \n                !showReportButton?null:<Button key=\"report\" onClick = {action} color=\"inherit\" size=\"small\">\n                  {actionText}\n                </Button>,\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    onReport: PropTypes.func,\n    subMessage: PropTypes.string,\n    showReportButton: PropTypes.bool,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);","import React from 'react'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport OpeningGraph from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar, TextField} from '@material-ui/core'\nimport SnackbarContentWrapper from './SnackbarContentWrapper'\nimport * as Constants from '../app/Constants'\nimport {  Modal, ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,Collapse\n} from 'reactstrap'\nimport {chessLogic} from '../app/chess/ChessLogic'\n\nimport {FormControlLabel, Checkbox} from '@material-ui/core'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    let urlVariant = new URLSearchParams(window.location.search).get(\"variant\")\n    let selectedVariant = urlVariant?urlVariant:Constants.VARIANT_STANDARD\n    this.chess = chessLogic(selectedVariant)\n    addStateManagement(this)\n    this.state = {\n        resize:0,\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:new OpeningGraph(selectedVariant),\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:''\n        },\n        message:'',\n        downloadingGames:false,\n        feedbackOpen:false,\n        diagnosticsDataOpen:false,\n        variant:selectedVariant\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n    window.addEventListener('resize', this.handleResize.bind(this))\n  }\n  handleResize() {\n    this.setState({resize:this.state.resize+1})\n    this.chessboardWidth = this.getChessboardWidth()\n  }\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    return <div className=\"rootView\"> \n        <GlobalHeader toggleFeedback = {this.toggleFeedback(false)}/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}>\n            <Navigator fen = {this.state.fen} move={this.state.lastMove} \n              onChange ={this.navigateTo.bind(this)}\n              variant = {this.state.variant}\n            />\n    </Col><Col lg=\"6\"><Chessground key={this.state.resize}\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes()\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                movesToShow={this.movesToShow()}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                importCallback={this.importGameState.bind(this)}\n                variant={this.state.variant}\n                variantChange={this.variantChange.bind(this)}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'bottom', horizontal:\"left\" }} \n            open={snackBarOpen} autoHideDuration={6000} \n            onClose={this.closeError.bind(this)}\n    >\n    <SnackbarContentWrapper\n                            onClose={this.closeError.bind(this)}\n                            variant={this.state.messageSeverity}\n                            message={this.state.message}\n                            subMessage={this.state.subMessage}\n                            showReportButton={this.state.messageSeverity==='error'}\n                            action={this.state.errorAction}\n                            actionText={this.state.errorActionText}\n                        />\n    </Snackbar>\n\n    <Modal isOpen={this.state.feedbackOpen} toggle={this.toggleFeedback(false)}>\n        <ModalHeader toggle={this.toggleFeedback(false)}>Feedback</ModalHeader>\n        <ModalBody>\n          Your feedback is greatly appreciated. Reach out to me for feedback, suggestions, bug report or just a game of chess.\n          <ul>\n            <li>Email me: <a rel=\"noopener noreferrer\" href={this.getEmailLink()} target=\"_blank\">{Constants.OPENING_TREE_EMAIL}</a></li>\n            <li>Message me on reddit <a rel=\"noopener noreferrer\" href={this.getRedditLink()} target=\"_blank\">u/{Constants.OPENNIG_TREE_REDDIT}</a></li>\n            <li>Message me on lichess: <a rel=\"noopener noreferrer\" href={`https://lichess.org/inbox/${Constants.OPENING_TREE_LICHESS}`} target=\"_blank\">{Constants.OPENING_TREE_LICHESS}</a></li>\n            <li>Message me on chess.com: <a rel=\"noopener noreferrer\" href={`https://www.chess.com/messages/compose/${Constants.OPENING_TREE_CHESS_COM}`} target=\"_blank\">{Constants.OPENING_TREE_CHESS_COM}</a></li>\n            <li>Join my <a rel=\"noopener noreferrer\" href={Constants.OPENING_TREE_DISCORD}target=\"_blank\">discord server</a> to chat</li>\n          </ul>\n          <FormControlLabel\n        control={\n          <Checkbox\n            checked={this.state.diagnosticsDataOpen}\n            onChange={this.toggleDiagnosticsData}\n            name=\"diagnostics\"\n            color=\"primary\"\n          />\n        }\n        label=\"Add diagnostics data to message\"\n      />\n          <Collapse isOpen={this.state.diagnosticsDataOpen}>\n            <TextField id=\"diagnosticsText\" label=\"Click to copy.\" variant=\"outlined\" \n            className=\"fullWidth\" value={this.getDiagnosticsValue()} \n            rowsMax={4} onClick={this.copyDiagnostics} multiline/>\n            </Collapse>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleFeedback(false)}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","import Chess from 'chess.js'\n\nexport default class RacingKingsChess {\n    constructor(fen){\n        this.chess = new Chess(fen);\n        this.SQUARES = this.chess.SQUARES\n    }\n    fen(){\n        return this.chess.fen()\n    }\n    turn() {\n        return this.chess.turn()\n    }\n    moves(options) {\n        // checks are not allowed in racing kings \n        // so remove moves that cause a check\n        return this.chess.moves(options).filter((move)=>{\n            let san = move.san || move\n            return !san.endsWith(\"+\") && !san.endsWith(\"#\")\n        })\n    }\n\n    move(moveObject, options) {\n        if(typeof moveObject !== \"string\") {\n            return this.chess.move(moveObject, options)\n        }\n        \n        if (moveObject.endsWith('#')) {\n            // a move ending in checkmate in racing kings will not \n            // be a checkmate under standard rules. so remove the # at the end \n            // to make it pass as a standard notation \n            moveObject = moveObject.substring(0, moveObject.length - 1);\n        } \n        let move = this.chess.move(moveObject, options)\n        if(move) {\n            return move\n        }\n        let disambiguatedMove = disambiguate(moveObject, this.moves())\n        if(!disambiguatedMove) {\n            // disambiguation failed\n            return move\n        }\n        // making this move failed so try disambiguating\n        return this.chess.move(disambiguatedMove, options)\n    }\n\n}\n\n// this is needed because in certain positions, while a disambiguating notation is needed \n// in standard chess, it is not needed in racing kings. \n// for example in this position \"1q4R1/1kN2Q2/8/5K2/8/4Nn2/8/b7 w - - 1 21\"\n// Move Nd5 is ambiguous in standard chess but is clear in Racing kings\n// because Ncd5 will lead to check\n\n// The way this function works is by actually finding the disambiguated move Ned5\n// to pass to the chess.js library. Since the move Ncd5 will end with a check (+) \n// it will fail the filter below\nfunction disambiguate(problematicMove, potentialMoves) {\n    let filteredMoves = potentialMoves.filter((potentialMove)=>{\n        if(problematicMove.charAt(0) !== potentialMove.charAt(0)) {\n            return false;\n        }\n        return problematicMove.slice(-2) === potentialMove.slice(-2)\n    })\n    if(filteredMoves.length !== 1) {\n        return null\n    }\n    return filteredMoves[0]\n}","import Chess from 'chess.js'\n\nexport default class CrazyhouseChess {\n    constructor(fen){\n        this.chess = new Chess(fen);\n        this.SQUARES = this.chess.SQUARES\n    }\n    fen(){\n        return this.chess.fen()\n    }\n    turn() {\n        return this.chess.turn()\n    }\n    moves(options) {\n        return this.chess.moves(options)\n    }\n\n    move(moveObject, options) {\n        let move = this.chess.move(moveObject, options)\n        if(move) {\n            return move\n        }\n        if(typeof moveObject === \"string\") {\n            return this.moveSan(moveObject)\n        } else {\n            return this.moveSan(moveObject.san)\n        }\n    }\n\n    moveSan(san) {\n        if(san.includes('@')){\n            let locationOfAt = san.indexOf('@')\n            let piece = ''\n            if(locationOfAt === 0) {\n                piece = this.chess.PAWN\n            } else {\n                piece = san.charAt(0).toLowerCase()\n            }\n            let location = san.slice(locationOfAt+1,locationOfAt+3)\n            let success = this.chess.put({type:piece, color:this.turn()}, location)\n            if(!success) {\n                return null\n            }\n            let color = this.turn()\n\n            this.toggleTurn()\n            return {\n                color: color,\n                from:location,\n                to:location,\n                san:san\n            }\n        }\n        return null\n    }\n    toggleTurn() {\n        var tokens = this.chess.fen().split(' ');\n        // switch the color\n        tokens[1] = tokens[1] === 'b'? 'w' : 'b'\n        // remove en passent\n        tokens[3] = '-'\n        this.chess.load(tokens.join(' '));\n    }\n    \n}\n\n","import * as Constants from '../Constants'\nimport Chess from 'chess.js'\nimport RacingKingsChess from './RacingKingsChess'\nimport CrazyhouseChess from './CrazyhouseChess'\n\nexport function chessLogic(variant, fen) {\n    if(!fen) {\n        fen = rootFen(variant)\n    }\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return new RacingKingsChess(fen)\n    }\n    if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return new CrazyhouseChess(fen)\n    }\n    return new Chess(fen)\n}\n\nexport function rootFen(variant) {\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.RACING_KINGS_ROOT_FEN\n    }\n    return Constants.ROOT_FEN\n}","import * as Constants from './Constants'\n\nexport function isAdvancedFiltersEnabled(source) {\n    return source === Constants.SITE_CHESS_DOT_COM ||\n        source === Constants.SITE_LICHESS\n}\n\n\nexport function isFilterPanelEnabled(source, playerName) {\n    if(source === Constants.SITE_EVENT_DB ||\n        source === Constants.SITE_OPENING_TREE_FILE ||\n        source === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return false\n    }\n    return !!playerName\n}\n\nexport function treeSaveDisabledReason(loadedSite, selectedSite, gamesProcessed, isDownloading){\n    if(selectedSite === Constants.SITE_ONLINE_TOURNAMENTS) {\n        return \"Not currently supported for tournaments\"\n    }\n    if(selectedSite !== Constants.SITE_LICHESS && \n        selectedSite !== Constants.SITE_CHESS_DOT_COM) {\n        return \"Only supported for chess.com and lichess\"\n    }\n    if(loadedSite !== selectedSite || gamesProcessed<=0) {\n        return \"You need to analyze games before saving\"\n    }\n    if(isDownloading) {\n        return \"Action not supported while games are loading\"\n    }\n    return ''\n}\nexport function exportFileName(source, playerName, playerColor, selectedEvent, extension) {\n    if(source === Constants.SITE_EVENT_DB) {\n        return `${selectedEvent.name}.${extension}`\n    }\n    if(playerName) {\n        return `${playerName}-${playerColor}.${extension}`\n    }\n    return `openingtree-exportedgames.${extension}`\n}"],"sourceRoot":""}