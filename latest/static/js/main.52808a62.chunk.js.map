{"version":3,"sources":["app/CookieManager.js","app/OpeningGraph.js","app/Analytics.js","app/OpeningTreeSerializer.js","pres/loader/Common.js","app/Constants.js","app/util.js","pres/loader/Filters.js","pres/loader/Actions.js","app/PGNReaderWorker.js","pres/StateManagement.js","app/OpeningBook.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","app/PGNReader.js","app/Common.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/NotableChessGames.js","pres/loader/User.js","pres/loader/Variants.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/moves/MovesCommon.js","pres/moves/MovesTable.js","pres/moves/ResultsTable.js","pres/moves/MovesList.js","pres/moves/BookMoves.js","pres/ControlsContainer.js","pres/SnackbarContentWrapper.js","pres/MainContainer.js","index.js","app/chess/RacingKingsChess.js","app/chess/CrazyhouseChess.js","app/chess/ChessLogic.js","app/SitePolicy.js"],"names":["CookieManager","Cookies","get","remove","path","domain","OpeningGraph","variant","this","graph","Graph","hasMoves","arrayEntries","pgnStats","parsedMoves","lastFen","playerColor","index","length","push","forEach","parsedMove","addMoveForFen","sourceFen","targetFen","moveSan","addGameResultOnFen","addStatsToRoot","fullFen","resultIndex","currNode","getNodeFromGraph","gameResults","targetNode","rootFen","details","hasData","blackWins","whiteWins","draws","totalOpponentElo","shortestGame","longestGame","lastPlayed","newDetails","getUpdatedMoveDetails","node","simplifiedFen","Number","isInteger","updateCalculatedValues","bestWin","bestWinGame","bestWinElo","getOpponentElo","worstLoss","worstLossGame","worstLossElo","lastPlayedGame","longestGameInfo","shortestGameInfo","count","fullSourceFen","fullTargetFen","move","resultObject","playedBy","moveCount","playedByMax","Math","max","book","fen","set","transform","moves","fetch","map","black","white","san","averageElo","averageRating","addIfNull","nodes","GraphNode","currentMoveDetails","whiteWin","blackWin","draw","resultInt","result","Constants","opponentElo","currentBestWinGame","parseInt","currentWorstLossGame","currentLastPlayedGame","isDateMoreRecentThan","date","currentLongestGame","numberOfPlys","currentShortestGame","blackElo","whiteElo","Array","from","Object","entries","entry","chess","chessLogic","sloppy","targetNodeDetails","getDetailsForFen","orig","dest","to","level","levelFor","maxCount","Map","trackPageView","ReactGA","pageview","window","location","pathname","trackEvent","category","action","label","value","event","initialize","serializeOpeningTree","treeData","filename","callback","chunkedArray","chunks","chunk","header","arraySizes","arrays","arr","array","prototype","apply","chunkSize","startIndex","i","chunkIndex","slice","chunkArray","deflatedChunks","packControlWord","remainingChunks","hasError","zlib","deflate","Buffer","JSON","stringify","error","data","byteLength","saveAs","Blob","type","deserializeOpeningTree","file","reader","FileReader","onload","evt","target","version","unpackControlWord","numChunks","handleInflate","console","log","parse","e","sortedChunks","sort","a","b","flattenedChunks","el","flat","size","reconstructObjectFromChunks","inflate","getInflatedChunks","onerror","name","message","readAsArrayBuffer","control","view","DataView","getUint16","getUint32","buffer","ArrayBuffer","setUint16","setUint32","Accordion","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MUIAccordion","getNumberIcon","n","alt","className","src","height","advancedFilters","state","createSubObjectWithProperties","copyText","elementId","document","getElementById","select","setSelectionRange","execCommand","TIME_CONTROL_ULTRA_BULLET","TIME_CONTROL_BULLET","TIME_CONTROL_BLITZ","TIME_CONTROL_RAPID","TIME_CONTROL_CLASSICAL","TIME_CONTROL_CORRESPONDENCE","TIME_CONTROL_DAILY","FILTER_NAME_RATED","FILTER_NAME_SELECTED_TIMEFRAME","FILTER_NAME_DOWNLOAD_LIMIT","FILTER_NAME_ELO_RANGE","SITE_LICHESS","SITE_CHESS_DOT_COM","SITE_PGN_FILE","SITE_EVENT_DB","SITE_PLAYER_DB","SITE_OPENING_TREE_FILE","SITE_ONLINE_TOURNAMENTS","MAX_DOWNLOAD_LIMIT","MAX_ELO_RATING","EVENT_CATEGORY_PGN_LOADER","EVENT_CATEGORY_MOVES_LIST","EVENT_CATEGORY_CONTROLS","EVENT_CATEGORY_NAVIGATOR","EVENT_CATEGORY_CHESSBOARD","EVENT_CATEGORY_MESSAGE_SHOWN","ROOT_FEN","RACING_KINGS_ROOT_FEN","PLAYER_COLOR_WHITE","PLAYER_COLOR_BLACK","LOADER_ANIMATION_DURATION_MS","OPENING_TREE_EMAIL","OPENNIG_TREE_REDDIT","OPENING_TREE_LICHESS","OPENING_TREE_CHESS_COM","OPENING_TREE_DISCORD","OPENING_TREE_FILE_CURRENT_VERSION","ERROR_ACTION_VISIT_OLD_SITE","ERROR_ACTION_NONE","LICHESS_NOT_LOGGED_IN","LICHESS_STATE_PENDING","LICHESS_LOGGED_IN","LICHESS_FAILED_FETCH","ERROR_SEVERITY_ERROR","ERROR_SEVERITY_SUCCESS","VARIANT_STANDARD","VARIANT_RACING_KINGS","VARIANT_THREE_CHECK","VARIANT_KING_OF_THE_HILL","VARIANT_CRAZYHOUSE","CHESS_COM_RULES_STANDARD","CHESS_COM_RULES_THREE_CHECK","CHESS_COM_RULES_KING_OF_THE_HILL","CHESS_COM_RULES_CRAZYHOUSE","LICHESS_PERF_RACING_KINGS","LICHESS_PERF_THREE_CHECK","LICHESS_PERF_KING_OF_THE_HILL","LICHESS_PERF_CRAZYHOUSE","LICHESS_HEADER_RACING_KINGS","LICHESS_HEADER_THREE_CHECK","LICHESS_HEADER_KING_OF_THE_HILL","LICHESS_HEADER_STANDARD","LICHESS_HEADER_CRAZYHOUSE","mainObject","properties","subObject","property","fenComponents","split","getTimeControlsArray","site","timeControlState","selected","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","toLongLabel","fromLongLabel","month","simplifyCount","toFixed","round","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","fromMonth","fromYear","fromTimeStamp","getTimeStampInfoFor","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","getPerformanceDetails","totalGames","averageOpponentElo","playerWins","playerLosses","scorePercentage","ratingChange","performanceRating","results","score","abs","than","User","props","isAdvancedFiltersOpen","assign","defaultAdvancedFilters","rated","setState","newState","SitePolicy","setImmediate","setFilters","bind","checked","newValue","colorError","filtersChange","isDisabled","areAdvancedFiltersApplied","newProps","key","deepEqual","playerName","selectedNotablePlayer","expandedPanel","TransitionComponent","MuiCollapse","TransitionProps","timeout","onChange","handleExpansionChange","disabled","expandIcon","getSummary","component","playerColorChange","color","onClick","toggleState","icon","faCaretUp","faCaretDown","isOpen","toggleRated","handleTimeControlChange","handleTimeframeChange","handleEloRangeChange","handleDownloadLimitChange","React","Component","Actions","unload","pgnReader","stopDownloading","isGamesSubsectionOpen","exportingInProgress","streamsaver","mitm","encoder","TextEncoder","addEventListener","removeEventListener","importOpeningTree","files","err","subMesage","showError","success","importOpeningTreeObject","showInfo","exportOpeningTree","exportOpeningTreeObject","info","fileWriter","close","game","headers","join","moveObject","pendingDownloads","write","encode","getPgnString","then","abortDownloading","shouldDownloadToFile","fileStream","createWriteStream","selectedNotableEvent","getWriter","PGNReader","readerInstance","fetchPGNFromSite","selectedOnlineTournament","proxy","notify","downloadResponse","getTokens","lichess","cookieManager","getLichessAccessToken","readPgn","gamesProcessed","clear","loadedSite","setDownloading","importTreeClicked","startIcon","disableElevation","downloadDisabledReason","isDownloading","load","download","placement","title","exportTreeClicked","stopDownloadingAction","switchToMovesTab","faList","openingTreeLoadActions","regularActions","mainComponent","in","wrap","Worker","turnColor","turn","settings","brushes","againstBrushes","forBrushes","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","onMove","lastMove","onMoveAction","navigateTo","previousMove","updateProcessedGames","downloadLimit","parsedGame","totalGamesProcessed","openingGraph","addPGN","latestFen","downloadingGames","moveToShape","brush","autoShapes","shapes","fillArray","getPlayerMoves","movesForFen","gameResultsForFen","len","reset","settingsChange","trackingEvent","subMessage","severity","errorActionText","errorAction","url","messageSeverity","open","toggleFeedback","eventName","trackingLabel","closeError","diagnosticsOpen","feedbackOpen","diagnosticsDataOpen","val","toggleDiagnosticsData","copyDiagnostics","importGameState","importState","getChessboardWidth","nearestMultipleOf8","innerWidth","min","innerHeight","getDiagnosticsValue","navigator","userAgent","getRedditLink","getSubject","getBody","getEmailLink","variantChange","newVariant","getBookMoves","getBookNode","fetchBookMoves","addBookNode","update","mergePlayerAndBookMoves","playerMovesToShow","bookMovesToShow","bookMovesMap","movesToShow","createMap","bookMove","compareTo","getCompareToValues","addStateManagement","obj","ratings","speeds","joinParams","request","response","body","paramName","r","timeClasses","selectedTimeControls","unselectedTimeControls","includesAll","subArray","every","v","includes","getTimeControlLabel","timeClass","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","setCurrentlyOpenAdvancedFilter","Collapse","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","getDownloadLimitFilters","Slider","valueLabelDisplay","valueLabelFormat","step","marks","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","Container","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Row","Col","sm","FormControlLabel","Checkbox","changeCallback","children","getFilters","module","exports","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","lichessPerf","DP_TABLE","OpeningManager","plys","currentIndex","pgn","ChessLogic","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","Navigator","openingManager","currentMove","keyHandler","keyCode","previous","next","addPly","device","moveBack","opening","ChessEcoCodes","openingCode","code","lg","Button","faStepBackward","faStepForward","GlobalHeader","useState","setIsOpen","modal","setModal","toggleModal","launch","Navbar","light","expand","width","NavbarBrand","href","NavbarToggler","navbar","Nav","NavItem","NavLink","faDiscord","faComments","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","ModalFooter","SOURCE_VARIANT_COMBINATION","Source","source","addNumber","faChessRook","Badge","siteChange","newSite","supportedSources","AccordionSummary","aria-controls","id","getSourceOption","AccordionDetails","RadioGroup","setSite","getSourceRadio","Divider","AccordionActions","continue","isSourceAvailable","Radio","Dropzone","newFiles","filesChange","acceptedFiles","dropzoneText","handleFileChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","NotableChessGames","updateDetails","option","profile","imageUrl","subText","list","options","selectedDetail","placeholder","renderOption","renderDetails","tournamentUrl","selectedPlayer","selectedEvent","playerNameError","tournamentUrlError","player","nextProps","trim","startsWith","parsedUrl","URL","hostname","tournamentSite","endsWith","pathComponents","tournamentId","tournamentType","validateInputDetailsSet","playerDetailsChange","finalPlayerName","setTimeout","getLichessCardBody","getPlayerNameInput","lichessLoginState","Card","Spinner","CardBody","CardTitle","faInfoCircle","faSync","refreshLichessStatus","faSignOutAlt","logoutOfLichess","launchLichessOauth","lichessLoginName","faCheck","CardText","rel","helperText","TextField","editPlayerName","onKeyUp","playerNameKeyUp","getOnlineTournamentCard","getOnlineTournamentInput","editTournamentUrl","setPlayerDetails","notablePlayers","notablePlayerChange","notableEvents","notableEventChange","getPgnFileSelection","getLichessSelection","getChessComSelection","getGoatDBEventSelection","getGoatDBSelection","getOpeningTreeSelection","getOnlineTournamentSelection","getInputsToShow","getVariantIcon","getVariantText","faFlagCheckered","faDiceThree","faMountain","faHouseDamage","faChessKing","style","getVariantOption","changeLink","setVariant","getVariantRadio","PGNLoader","selectedSite","URLSearchParams","search","fetchLichessLoginStatus","panel","newExpanded","timestamp","now","playername","openingTreeSave","saveVersion","setEntries","importCallback","gamesDetails","fetchGOATGames","auth","bearer","responseObj","username","deleteLichessAccessToken","filters","pgnUrl","Filters","SettingsView","srcElement","tagName","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ReportControls","stopPropagation","simplifiedView","multiline","rowsMax","inputProps","fontSize","spellCheck","copyFen","moveDetails","getFenField","switchToUserTab","faUser","performanceDetails","Table","eatClicks","isNaN","TableHead","TableRow","TableCell","TableBody","launchGame","faExternalLinkAlt","removeQuestionMarksFromDate","reportFooter","TableFooter","colSpan","indexOf","playerDetails","elo","MovesTable","openPerformanceIndex","prevProps","prevState","clickedEventName","moveIndex","compareToClicked","percent","stepPositions","transition","accomplished","compareClicked","performancePopoverOpen","openMove","Popover","trigger","namespace","togglePerformancePopover","getTranspositionWarningLevel","getInfoIcon","targetCount","difference","getSingleItemRow","getMultiItemRow","tableFooter","highlightMove","getPopover","Progress","multi","bar","percentage","getProgressLabel","compareProgress","faExclamationTriangle","total","showAsPercentage","sampleResultWhite","sampleResultBlack","sampleResult","ResultsTable","whitePlayer","blackPlayer","MovesList","playerMoves","resultsTable","movesTable","switchToBookTab","BookMove","bookMoves","ControlsContainer","activeTab","activeGame","tab","highlightPlayerMove","highlightBookMove","tabs","classnames","active","faBook","faChartBar","faCog","TabContent","TabPane","tabId","bookResults","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","iconVariant","opacity","marginRight","spacing","alignItems","classes","onClose","actionText","showReportButton","other","Icon","SnackbarContent","clsx","aria-describedby","IconButton","aria-label","MainContainer","urlVariant","selectedVariant","resize","chessboardWidth","handleResize","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ModalBody","ReactDOM","render","RacingKingsChess","Chess","substring","disambiguatedMove","problematicMove","potentialMoves","filteredMoves","potentialMove","charAt","disambiguate","CrazyhouseChess","locationOfAt","piece","PAWN","toLowerCase","put","toggleTurn","tokens","isAdvancedFiltersEnabled","isFilterPanelEnabled","treeSaveDisabledReason","exportFileName","extension"],"mappings":"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","file":"static/js/main.52808a62.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\n\nclass CookieManager {\n    getLichessAccessToken() {\n        return Cookies.get('at')\n    }\n    deleteLichessAccessToken() {\n        Cookies.remove('at', { path: '/', domain:'www.openingtree.com' })\n    }\n}\n\nexport default new CookieManager();","import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\nimport {chessLogic, rootFen} from '../app/chess/ChessLogic'\n\nexport default class OpeningGraph {\n    constructor(variant) {\n        this.graph=new Graph()\n        this.hasMoves = false\n        this.variant = variant\n    }\n    setEntries(arrayEntries, pgnStats){\n        this.graph=new Graph(arrayEntries, pgnStats)\n        this.hasMoves = true\n    }\n\n    clear() {\n        this.graph = new Graph()\n        this.hasMoves = false\n    }\n\n    addPGN(pgnStats, parsedMoves, lastFen, playerColor) {\n        pgnStats.index = this.graph.pgnStats.length\n        this.graph.pgnStats.push(pgnStats)\n        this.graph.playerColor = playerColor\n        this.hasMoves = true\n        parsedMoves.forEach(parsedMove => {\n            this.addMoveForFen(parsedMove.sourceFen, parsedMove.targetFen, parsedMove.moveSan, pgnStats)\n        })\n        this.addGameResultOnFen(lastFen, pgnStats.index)\n        this.addStatsToRoot(pgnStats, this.variant)\n    }\n\n    addGameResultOnFen(fullFen, resultIndex) {\n        var currNode = this.getNodeFromGraph(fullFen, true)\n        if(!currNode.gameResults) {\n            currNode.gameResults = []\n        }\n        currNode.gameResults.push(resultIndex)\n    }\n    addStatsToRoot(pgnStats, variant) {\n        var targetNode = this.getNodeFromGraph(rootFen(variant), true)\n        if(!targetNode.details) {\n            targetNode.details = emptyDetails()\n        }\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, pgnStats)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        let node = this.getNodeFromGraph(simplifiedFen(fullFen), false)\n        let details = node && node.details\n        if (Number.isInteger(details)) {\n            details = this.getUpdatedMoveDetails(emptyDetails(), this.graph.pgnStats[details])\n        } else if(!details) {\n            return emptyDetails()\n        }\n        details = this.updateCalculatedValues(details)   \n        return details\n    }\n\n    updateCalculatedValues(details) {\n        if(Number.isInteger(details.bestWin)) {\n            details.bestWinGame = this.graph.pgnStats[details.bestWin]\n            details.bestWinElo = this.getOpponentElo(this.graph.playerColor,details.bestWinGame)\n        }\n        if(Number.isInteger(details.worstLoss)) {\n            details.worstLossGame = this.graph.pgnStats[details.worstLoss]\n            details.worstLossElo = this.getOpponentElo(this.graph.playerColor,details.worstLossGame)\n        }\n        if(Number.isInteger(details.lastPlayed)) {\n            details.lastPlayedGame = this.graph.pgnStats[details.lastPlayed]\n        }\n        if(Number.isInteger(details.longestGame)) {\n            details.longestGameInfo = this.graph.pgnStats[details.longestGame]\n        }\n        if(Number.isInteger(details.shortestGame)) {\n            details.shortestGameInfo = this.graph.pgnStats[details.shortestGame]\n        }\n        details.count = details.whiteWins+details.blackWins+details.draws\n        return details\n\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen, true)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen, true)\n        if(!currNode.playedBy) {\n            currNode.playedBy = {}\n        }\n        let moveCount = currNode.playedBy[move]\n        if(!moveCount) {\n            moveCount = 0\n        }\n        moveCount = moveCount+1\n        currNode.playedBy[move] = moveCount\n        currNode.playedByMax = Math.max(currNode.playedByMax, moveCount)\n    }\n\n    addBookNode(fullFen, book) {\n        let fen = simplifiedFen(fullFen)\n        this.graph.book.set(fen, this.transform(book))\n    }\n    transform(book) {\n        if(!book || !book.moves) {\n            return book\n        }\n        return {\n            fetch:\"success\",\n            moves:book.moves.map((move)=>{\n                let count = move.black+move.white+move.draws\n                return {\n                    san:move.san,\n                    details:{\n                        hasData:true,\n                        blackWins:move.black,\n                        whiteWins:move.white,\n                        draws:move.draws,\n                        count:count,\n                        averageElo:move.averageRating\n                    },\n                    moveCount:count\n                }\n            })\n        }\n    }\n    getBookNode(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        return this.graph.book.get(fen)\n    }\n\n    getNodeFromGraph(fullFen, addIfNull) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode && addIfNull) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject) {\n        if(Number.isInteger(currentMoveDetails)) {\n            // if this is the second stat object being added\n            // calculate the first move details and then merge it with the second one\n            currentMoveDetails = this.getUpdatedMoveDetails(emptyDetails(),\n                            this.graph.pgnStats[currentMoveDetails])\n        } else if(!currentMoveDetails) {\n            // if this is the first stat being added to this node,\n            // just write the index to calculate the stats later\n            return resultObject.index\n        }\n        \n        let whiteWin = 0, blackWin = 0, draw = 0, resultInt = 0;\n        let playerColor = this.graph.playerColor\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        let opponentElo = this.getOpponentElo(playerColor, resultObject)\n        if(resultInt === 1) {\n            let currentBestWinGame = null\n            if(Number.isInteger(currentMoveDetails.bestWin)) {\n                currentBestWinGame = this.graph.pgnStats[currentMoveDetails.bestWin]\n            }\n            if(!currentBestWinGame || parseInt(opponentElo)>parseInt(this.getOpponentElo(playerColor, currentBestWinGame))) {\n                currentMoveDetails.bestWin = resultObject.index\n            }\n        }\n        if(resultInt === -1) {\n            let currentWorstLossGame = null\n            if(Number.isInteger(currentMoveDetails.worstLoss)) {\n                currentWorstLossGame = this.graph.pgnStats[currentMoveDetails.worstLoss]\n            }\n            if(!currentWorstLossGame || parseInt(opponentElo)<parseInt(this.getOpponentElo(playerColor, currentWorstLossGame))) {\n                currentMoveDetails.worstLoss = resultObject.index\n            }\n        }\n        let currentLastPlayedGame = null\n        if(Number.isInteger(currentMoveDetails.lastPlayed)) {\n            currentLastPlayedGame = this.graph.pgnStats[currentMoveDetails.lastPlayed]\n        }\n        if(!currentLastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentLastPlayedGame.date)) {\n                currentMoveDetails.lastPlayed = resultObject.index\n        }\n        let currentLongestGame = null\n        if(Number.isInteger(currentMoveDetails.longestGame)) {\n            currentLongestGame = this.graph.pgnStats[currentMoveDetails.longestGame]\n        }\n        if(!currentLongestGame || \n            resultObject.numberOfPlys > currentLongestGame.numberOfPlys) {\n                currentMoveDetails.longestGame = resultObject.index\n        }\n\n        let currentShortestGame = null\n        if(Number.isInteger(currentMoveDetails.shortestGame)) {\n            currentShortestGame = this.graph.pgnStats[currentMoveDetails.shortestGame]\n        }\n        if(!currentShortestGame || \n            resultObject.numberOfPlys < currentShortestGame.numberOfPlys) {\n                currentMoveDetails.shortestGame = resultObject.index\n        }\n\n\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        currentMoveDetails.hasData = true\n        return currentMoveDetails\n    }\n\n    getOpponentElo(playerColor, resultObject) {\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            return resultObject.blackElo\n        }\n        return resultObject.whiteElo\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode && currNode.gameResults) {\n            return currNode.gameResults.map((index)=>this.graph.pgnStats[index])\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode && currNode.playedBy) {\n            return Array.from(Object.entries(currNode.playedBy)).map((entry)=> {\n                let chess = chessLogic(this.variant, fullFen)\n                let move = chess.move(entry[0], {sloppy: true})\n                let targetNodeDetails = this.getDetailsForFen(chess.fen())\n                return {\n                    orig:move.from,\n                    dest:move.to,\n                    level:this.levelFor(entry[1], currNode.playedByMax),\n                    san:move.san,\n                    details:targetNodeDetails,\n                    moveCount:entry[1]\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 2\n        }\n        if(moveCount/maxCount>0.3) {\n            return 1\n        }\n        return 0\n    }\n\n}\n\n\nclass Graph {\n    constructor(arrayEntries, pgnStats){\n        this.nodes = new Map()\n        this.book = new Map()\n        this.pgnStats = []\n        this.playerColor = ''\n        if(arrayEntries) {\n            arrayEntries.forEach((entry)=> {\n                this.nodes.set(entry[0],entry[1])\n            })\n        }\n        if(pgnStats) {\n            this.pgnStats = pgnStats\n        }\n    }\n}\n\nclass GraphNode {\n            playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n            //playedBy = {}\n            //gameResults = []\n}\n\nfunction emptyDetails() {\n    return {\n        hasData:false,\n//        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        shortestGame:null,\n        longestGame:null,\n//        bestWin:null,\n//        bestWinGame:null,\n//        worstLoss:null,\n//        worstLossGame:null,\n        lastPlayed:null\n//        lastPlayedGame:null\n    }\n}\n","import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}\n\n","import zlib from 'zlib'\nimport {Buffer} from 'buffer'\nimport { saveAs } from 'file-saver';\n\nexport function serializeOpeningTree(treeData, filename, callback) {\n    let chunkedArray = chunk(treeData)\n    let deflatedChunks = []\n    //push version number 1 for later backward compatibility\n    deflatedChunks.push(packControlWord(0x1))\n    deflatedChunks.push(packControlWord(chunkedArray.length))\n    let remainingChunks = chunkedArray.length\n    let hasError = false;\n    chunkedArray.forEach((chunk)=>{\n        zlib.deflate(\n            new Buffer(JSON.stringify(chunk)), \n            (error,data)=>{\n                remainingChunks--\n                if(error) {\n                    hasError = true\n                }\n                deflatedChunks.push(packControlWord(data.byteLength))\n                deflatedChunks.push(data)\n                if(remainingChunks<=0) {\n                    if(hasError) {\n                        callback(\"Could not save file\")\n                        return\n                    }\n                    saveAs(new Blob(deflatedChunks, {type: \"application/octet-stream\"}), filename)\n                    callback(null, `Saved opening tree to file ${filename}`)\n                }\n            });\n        })\n}\n\nexport function deserializeOpeningTree(file, callback) {\n    let reader = new FileReader()\n    reader.onload = function(evt) {\n        let data = evt.target.result\n        let index = 0\n        let version = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(version !== 0x1) {\n            callback(\"File is not an openingtree save file.\", null,\"Are you loading the correct file?\")\n            return\n        }\n        let numChunks = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(!numChunks) {\n            callback(\"Input file not in correct format\", null)\n            return\n        }\n        getInflatedChunks(data, index, numChunks, callback)\n    };\n    reader.onerror = function(e) {\n        callback(\"Failed to read openingtree file\", null, `${e.target.error.name}:${e.target.error.message}`)\n    }\n    reader.readAsArrayBuffer(file)\n}\n\nfunction getInflatedChunks(data, startIndex, numChunks, callback) {\n    let index = startIndex\n    let deflatedChunks = []\n    let remainingChunks = numChunks\n    let hasError=false\n    let handleInflate = (error, data)=> {\n        remainingChunks--\n        if(error) {\n            console.log(error)\n            hasError=true\n        }\n        try {\n            deflatedChunks.push(JSON.parse(data))\n        } catch (e) {\n            console.log(e)\n            hasError=true\n        }\n        if(remainingChunks===0) {\n            if(hasError) {\n                callback(\"Input file seems corrupted\", null)\n            }\n            \n            callback(null, reconstructObjectFromChunks(deflatedChunks))\n        }\n        \n    }\n    while(numChunks>0) {\n        let chunkSize = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        zlib.inflate(\n            Buffer.from(data,index,chunkSize), handleInflate)\n        index = index + chunkSize\n        numChunks--\n    }\n}\n\nfunction reconstructObjectFromChunks(deflatedChunks) {\n    let sortedChunks = deflatedChunks.sort((a,b)=>a.index-b.index)\n    let flattenedChunks = sortedChunks.slice(1).map(el=>el.chunk).flat()\n    let header = sortedChunks[0]\n    let arrays = []\n    let index = 0\n    let arraySizes = header.arraySizes || [flattenedChunks.length]\n    arraySizes.forEach((size)=>{\n        arrays.push(flattenedChunks.slice(index,index+size))\n        index+=size\n    })\n    return {\n        header:header.chunk,\n        arrays:arrays\n    }\n}\n\nfunction unpackControlWord(control) {\n    let view = new DataView(control)\n    if(view.getUint16(0)!==0x1337 || view.getUint16(6)!==0xC0D3) {\n        return null\n    }\n    return view.getUint32(2)\n}\n\nfunction packControlWord(control) {\n    var buffer = new ArrayBuffer(8); \n    var view = new DataView(buffer); \n    view.setUint16(0, 0x1337)\n    view.setUint32(2, control>>>0)\n    view.setUint16(6, 0xC0D3)\n    return buffer\n}\n\nfunction chunk(treeData) {\n    let chunk1 = {chunk:treeData.header, index:0, \n        arraySizes:treeData.arrays.map(arr=>arr.length)}\n    let chunks = [chunk1]\n    treeData.arrays.forEach((array)=>{\n        Array.prototype.push.apply(chunks, chunkArray(array, 1000, chunks.length));\n    })\n    return chunks\n}\n\nfunction chunkArray(array, chunkSize, startIndex) {\n    let chunkedArray=[]\n    \n    for (let i=0, chunkIndex=1; i<array.length; i+=chunkSize, chunkIndex++) {\n        chunkedArray.push({chunk:array.slice(i,i+chunkSize), index:startIndex+chunkIndex});\n    }\n    return chunkedArray\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport MUIAccordion from '@material-ui/core/Accordion';\nimport React from 'react'\nimport { createSubObjectWithProperties } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MUIAccordion);\n\nexport function getNumberIcon(n) {\n    return <img alt={`step ${n}`} className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}\n\nexport function copyText(elementId) {\n    /* Get the text field */\n    var copyText = document.getElementById(elementId);\n    try {\n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n        return true\n    } catch(e) {\n        return false\n    }\n}","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\nexport const SITE_EVENT_DB = \"eventdb\"\nexport const SITE_PLAYER_DB = \"playerdb\"\nexport const SITE_OPENING_TREE_FILE = \"opntfile\"\nexport const SITE_ONLINE_TOURNAMENTS = \"tournament\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\nexport const EVENT_CATEGORY_MESSAGE_SHOWN = \"message\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\nexport const RACING_KINGS_ROOT_FEN=\"8/8/8/8/8/8/krbnNBRK/qrbnNBRQ w - - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500\n\nexport const OPENING_TREE_EMAIL = 'feedback@openingtree.com'\nexport const OPENNIG_TREE_REDDIT = 'opening_tree'\nexport const OPENING_TREE_LICHESS = 'vannooz'\nexport const OPENING_TREE_CHESS_COM = 'vannooz'\nexport const OPENING_TREE_DISCORD = 'https://discord.gg/hCwKkN8'\n\nexport const OPENING_TREE_FILE_CURRENT_VERSION = 2\n\nexport const ERROR_ACTION_REPORT = 'report'\nexport const ERROR_ACTION_VISIT_OLD_SITE = 'visitOld'\nexport const ERROR_ACTION_NONE = 'noAction'\nexport const LICHESS_NOT_LOGGED_IN = 0;\nexport const LICHESS_STATE_PENDING = 1;\nexport const LICHESS_LOGGED_IN = 2;\nexport const LICHESS_FAILED_FETCH = 3;\n\nexport const ERROR_SEVERITY_ERROR = \"error\";\nexport const ERROR_SEVERITY_WARNING = \"warning\";\nexport const ERROR_SEVERITY_SUCCESS = \"success\";\n\nexport const VARIANT_STANDARD = \"standard\";\nexport const VARIANT_RACING_KINGS = \"racingkings\";\nexport const VARIANT_THREE_CHECK = \"threecheck\";\nexport const VARIANT_KING_OF_THE_HILL = \"kingofthehill\";\nexport const VARIANT_CRAZYHOUSE = \"crazyhouse\";\n\nexport const CHESS_COM_RULES_STANDARD = \"chess\";\nexport const CHESS_COM_RULES_THREE_CHECK = \"threeCheck\";\nexport const CHESS_COM_RULES_KING_OF_THE_HILL = \"kingofthehill\";\nexport const CHESS_COM_RULES_CRAZYHOUSE = \"crazyhouse\";\n\nexport const LICHESS_PERF_RACING_KINGS = \"racingKings\"\nexport const LICHESS_PERF_THREE_CHECK = \"threeCheck\"\nexport const LICHESS_PERF_KING_OF_THE_HILL = \"kingOfTheHill\"\nexport const LICHESS_PERF_CRAZYHOUSE = \"crazyhouse\"\n\nexport const LICHESS_HEADER_RACING_KINGS = \"Racing Kings\"\nexport const LICHESS_HEADER_THREE_CHECK = \"Three-check\"\nexport const LICHESS_HEADER_KING_OF_THE_HILL = \"King of the Hill\"\nexport const LICHESS_HEADER_STANDARD = \"Standard\"\nexport const LICHESS_HEADER_CRAZYHOUSE = \"Crazyhouse\"\n","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\n\nexport function simplifyCount(count){\n    if(count>=1000000){\n        return `${(count/1000000).toFixed(1)}M`\n    }        \n    if(count>=10000){\n        return `${Math.round(count/1000)}k`\n    }\n\n    return count\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            fromYear:currentDate.getFullYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getFullYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalOpponentElo, averageElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageOpponentElo = totalOpponentElo?Math.round(totalOpponentElo/totalGames):null\n    let playerWins = playerColor === Constants.PLAYER_COLOR_BLACK?black:white\n    let playerLosses = playerColor !== Constants.PLAYER_COLOR_BLACK?black:white\n    let score = playerWins+(draws/2)\n    let scorePercentage = score*100/totalGames\n    let ratingChange = Common.DP_TABLE[Math.round(scorePercentage)]\n    let performanceRating = null\n    if(averageOpponentElo) {\n        performanceRating = averageOpponentElo+ratingChange\n    }\n    return {\n        results:`+${simplifyCount(playerWins)}-${simplifyCount(playerLosses)}=${simplifyCount(draws)}`,\n        performanceRating:performanceRating,\n        averageOpponentElo: averageOpponentElo,// avg elo rating of opponents only\n        averageElo:averageElo, // avg elo rating of all players\n        score:`${Number.isInteger(scorePercentage)?scorePercentage:scorePercentage.toFixed(1)}% for ${playerColor === Constants.PLAYER_COLOR_BLACK?'black':'white'}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport { Radio, FormControlLabel, RadioGroup, FormHelperText, FormControl, FormLabel} from '@material-ui/core';\nimport deepEqual from 'deep-equal'\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(event) {\n        let playerColor = event.target.value\n        this.setState({ playerColor: playerColor })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        if(!SitePolicy.isAdvancedFiltersEnabled(this.props.site)) {\n            setImmediate(this.setFilters.bind(this))\n        }\n}\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        if(!this.state.playerColor) {\n            this.setState({colorError:\"Please select a color\"})\n            return\n        }\n        this.setState({colorError:\"\", isAdvancedFiltersOpen:false})\n        this.props.filtersChange(this.state)\n    }\n    getSummary(isDisabled) {\n        if(this.props.playerColor && !isDisabled) {\n            return <span>\n                {getNumberIcon('done')}\n                Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n                {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    componentWillReceiveProps(newProps) {\n        this.setState({...newProps.advancedFilters, playerColor:newProps.playerColor})\n    }\n\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key]===value) {\n                continue\n            }\n            if(!deepEqual(this.props.advancedFilters[key], value)) {\n                return true\n            } \n        }\n        return false\n    }\n\n    \n    render(){\n        let isDisabled = !SitePolicy.isFilterPanelEnabled(this.props.site, this.props.playerName, this.props.selectedNotablePlayer)\n        return <Accordion expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={isDisabled}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary(isDisabled)}</AccordionSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloaderfirstsection\">\n                <FormControl component=\"fieldset\" error={!!this.state.colorError}>\n                    <FormLabel component=\"legend\">Games where <b>{this.props.playerName}</b> is playing as:</FormLabel>\n                    <RadioGroup onChange={this.playerColorChange.bind(this)} value={this.state.playerColor}>\n                        <FormControlLabel className=\"whitelabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_WHITE} label={this.state.playerColor === Constants.PLAYER_COLOR_WHITE?<b>White</b>:\"White\"}/>\n                        <FormControlLabel className=\"blacklabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_BLACK} label={this.state.playerColor === Constants.PLAYER_COLOR_BLACK?<b>Black</b>:\"Black\"}/>\n                    </RadioGroup>\n                    <FormHelperText>{this.state.colorError}</FormHelperText>\n                </FormControl>\n                </div>\n                {SitePolicy.isAdvancedFiltersEnabled(this.props.site)?<div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse>\n                </div>:null}\n                </ExpansionPanelDetails>\n                <Divider />\n                <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></Accordion>\n    \n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReaderWorker'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp'\nimport Equalizer from '@material-ui/icons/Equalizer'\nimport Fade from '@material-ui/core/Fade'\nimport Save from '@material-ui/icons/Save';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {Tooltip} from '@material-ui/core'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport {serializeOpeningTree, deserializeOpeningTree} from '../../app/OpeningTreeSerializer'\nimport {proxy} from 'comlink'\nimport streamsaver from 'streamsaver'\nimport cookieManager from '../../app/CookieManager'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false,\n            exportingInProgress : false\n        }\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.encoder = new TextEncoder()\n\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n    importTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"LoadTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.importOpeningTree.bind(this))\n    }\n    importOpeningTree() {\n        deserializeOpeningTree(this.props.files[0], \n            (err,data, subMesage)=> {\n                if(err) {\n                    this.props.showError(err, null, subMesage)\n                    this.setState({exportingInProgress:false})\n                    return\n                }\n                let success = this.props.importOpeningTreeObject(data)\n                this.setState({exportingInProgress:false})\n                if(success) {\n                    this.props.showInfo(\"Successfuly loaded openingtree\")                \n                }\n            })\n    }\n    exportTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"SaveTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.exportOpeningTree.bind(this))\n    }\n    exportOpeningTree() {\n        serializeOpeningTree(this.props.exportOpeningTreeObject(), \n            SitePolicy.exportFileName(this.props.site, this.props.playerName, this.props.playerColor, null, \"tree\"), \n            (err, info) => {\n                if(err) {\n                    this.props.showError(err)                    \n                } else {\n                    this.props.showInfo(info)\n                }\n                this.setState({exportingInProgress:false})\n            })\n    }\n    abortDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n    downloadResponse(result, pendingDownloads) {\n        this.fileWriter.write(this.encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n            if(!pendingDownloads) {\n                this.abortDownloading()\n                return false\n            }\n        })\n        return true\n    }\n\n    readPgn(shouldDownloadToFile) {\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(\n                SitePolicy.exportFileName(\n                    this.props.site, this.props.playerName, \n                    this.props.playerColor, this.props.selectedNotableEvent, \"pgn\"))\n            this.fileWriter = fileStream.getWriter()\n        }\n\n        new PGNReader(this.props.variant).then((readerInstance) => {\n            this.pgnReader = readerInstance\n            this.pgnReader.fetchPGNFromSite(this.props.playerName,\n                this.props.playerColor,\n                this.props.site,\n                this.props.selectedNotablePlayer,\n                this.props.selectedNotableEvent,\n                this.props.selectedOnlineTournament,\n                shouldDownloadToFile,\n                this.props.advancedFilters,\n                proxy(this.props.notify),\n                proxy(this.props.showError),\n                proxy(this.stopDownloading.bind(this)),\n                this.props.files,\n                proxy(this.downloadResponse.bind(this)),\n                this.getTokens())\n        })\n    }\n    \n    getTokens(){\n        return {\n            lichess:cookieManager.getLichessAccessToken()\n        }\n    }\n    download() {\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    getPlayerName() {\n        if(this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.props.selectedNotablePlayer.name\n        }\n        return this.props.playerName\n    }\n    componentWillReceiveProps(newProps) {\n        if(newProps.gamesProcessed>0) {\n            this.setState({isGamesSubsectionOpen:true})\n        }\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true, loadedSite:this.props.site })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    openingTreeLoadActions() {\n        return <div className=\"pgnloadersection\">\n            <MaterialUIButton\n            onClick={this.importTreeClicked.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<GetApp/>}\n            className=\"mainButton\" disableElevation\n            disabled={this.state.exportingInProgress}\n            >\n                {this.state.exportingInProgress?\"Loading from file\":\"Load openingtree\"}\n        </MaterialUIButton></div>\n    }\n    regularActions() {\n        let downloadDisabledReason = SitePolicy.treeSaveDisabledReason(\n                                        this.state.loadedSite, \n                                        this.props.site,\n                                        this.props.gamesProcessed, \n                                        this.props.isDownloading)\n        return <div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            <div className=\"pgnloadersection\"><Tooltip placement=\"top\" title={downloadDisabledReason||\"Save a .tree file locally for faster reload later\"}>\n                <span><MaterialUIButton\n                onClick={this.exportTreeClicked.bind(this)}\n                variant=\"contained\"\n                color=\"default\"\n                startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<Save/>}\n                className=\"mainButton\" disableElevation\n                disabled={!!downloadDisabledReason || this.state.exportingInProgress}\n                >\n                    {this.state.exportingInProgress?\"Saving to file\":\"Save .tree file\"}\n                </MaterialUIButton></span></Tooltip></div>\n            }\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {!this.props.playerColor?\"Games\":this.props.playerColor === Constants.PLAYER_COLOR_WHITE?\"White games\":\"Black games\"}{` loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves&gt;&gt;\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    mainComponent() {\n        if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.openingTreeLoadActions()\n        }\n        return this.regularActions()\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import {wrap} from 'comlink'\n\nconst PGNReader = wrap(new Worker('./PGNReader.js', { type: 'module' }))\n\nexport default PGNReader","import * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport {copyText} from './loader/Common'\nimport {chessLogic} from '../app/chess/ChessLogic'\nimport OpeningGraph from '../app/OpeningGraph'\nimport {fetchBookMoves} from '../app/OpeningBook'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(!this.playerColor() || this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(san) {\n    const chess = this.chess\n    let move = chess.move(san)\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(san) {\n    this.onMove(san)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = chessLogic(this.state.variant, fen)\n    this.setState({fen:fen, lastMove:previousMove})\n}\nfunction updateProcessedGames(downloadLimit, n, parsedGame) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.state.openingGraph.addPGN(parsedGame.pgnStats, parsedGame.parsedMoves,\n            parsedGame.latestFen,parsedGame.playerColor, this.state.variant)\n    this.setState({\n        gamesProcessed: totalGamesProcessed,\n        downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest !== move.orig? move.dest:null,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes(moves) {\n    if(moves) {\n        var shapes = moves.map(this.moveToShape.bind(this))\n        return this.fillArray(shapes,  25)\n    }\n    return this.fillArray([], 25) // dummy arrow to clear out existing arrows\n}\n\nfunction getPlayerMoves() {\n    if(!this.state.openingGraph.hasMoves) {\n        return null;\n    }\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.moveCount-a.moveCount):[]\n}\n\n\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = chessLogic(this.state.variant)\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\n\nfunction launch(url) {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n\n\nfunction showError(message, trackingEvent, subMessage, action, severity) {\n    let errorActionText, errorAction\n    let messageSeverity = severity || Constants.ERROR_SEVERITY_ERROR\n    if(action === Constants.ERROR_ACTION_VISIT_OLD_SITE) {\n        errorActionText=\"Visit old site\"\n        errorAction = launch(\"https://www.openingtree.com/old\")\n    } else if(action !== Constants.ERROR_ACTION_NONE){\n        errorActionText=\"Report this\"\n        errorAction = this.toggleFeedback(true)\n    }\n    this.setState({message:message, subMessage:subMessage,\n        errorAction:errorAction, errorActionText:errorActionText,\n        messageSeverity:messageSeverity})\n    let eventName = messageSeverity+\"Shown\"\n    if(trackingEvent) {\n        eventName = eventName+\":\"+trackingEvent\n    }\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,eventName, message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:Constants.ERROR_SEVERITY_SUCCESS})\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:'', subMessage:''})\n}\n\nfunction toggleFeedback(diagnosticsOpen) {\n    return () => {\n        let feedbackOpen = this.state.feedbackOpen\n        this.closeError()\n        this.setState({feedbackOpen:!feedbackOpen,\n                diagnosticsDataOpen:diagnosticsOpen})\n    }\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction toggleDiagnosticsData() {\n    this.setState({diagnosticsDataOpen:!this.state.diagnosticsDataOpen})\n}\n\nfunction copyDiagnostics() {\n    copyText(\"diagnosticsText\")\n    this.showInfo(\"Copied Diagnostics data\")\n}\n\n\nfunction importGameState(importState) {\n    this.setState({\n      settings:importState.settings,\n      openingGraph:importState.openingGraph,\n      gamesProcessed:importState.gamesProcessed,\n      variant:importState.variant?importState.variant:Constants.VARIANT_STANDARD\n    })\n    setImmediate(this.reset.bind(this))// setImmediate because we want the variant change to take effect\n  }\n  function getChessboardWidth(){\n    // getting nearest multiple of 8 because chessground has \n    // css alignment issues if board width is not a multple of 8\n    \n    return `${nearestMultipleOf8(getChessboardWidthInternal())}px`\n  }\n  function nearestMultipleOf8(n){\n      while(n%8!==0) {\n          n++;\n      }\n      return n;\n  }\n  function getChessboardWidthInternal(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return Math.round(window.innerWidth*95/100) //95vw\n    } else if ((window.innerWidth<=1424)) {\n      return Math.round(Math.min(window.innerWidth*48/100,Math.max(512,window.innerHeight-100))) // 40vw\n    } else {\n      return Math.round(Math.min(712,Math.max(512,window.innerHeight-100)))// innherHeight-100 to leave some space for header and footer\n    }\n\n  }\n\nfunction getDiagnosticsValue() {\n  return `--------------------\n  ${navigator.userAgent}\n  -------------------\n  ${JSON.stringify(this.state)}\n  -------------------\n  `\n}\nfunction getRedditLink() {\n    return `https://www.reddit.com/message/compose/?to=${Constants.OPENNIG_TREE_REDDIT}&subject=${this.getSubject()}&message=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getEmailLink() {\n    return `mailto:${Constants.OPENING_TREE_EMAIL}?subject=${this.getSubject()}&body=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getSubject() {\n    return this.state.diagnosticsDataOpen?\"Possible Openingtree bug\":\"Feedback on Openingtree\"\n}\nfunction getBody() {\n    return this.state.diagnosticsDataOpen?this.getDiagnosticsValue():\"\"\n}\n\nfunction variantChange(newVariant) {\n    this.setState({variant:newVariant, openingGraph:new OpeningGraph(newVariant)})\n    setImmediate(this.reset.bind(this))\n}\n\n// fetch the book moves openinggraph directly if they are available\n// otherwise \n//  1. fetch them from lichess\n//  2. store them in openinggraph\n//  3. update the component so that getBookMoves gets called again\nfunction getBookMoves() {\n    let moves = this.state.openingGraph.getBookNode(this.chess.fen())\n\n    if(!moves) {\n        moves = fetchBookMoves(this.state.fen, this.state.variantChange, [\"1600\",\"1800\",\"2000\",\"2200\"],[\"bullet\",\"blitz\",\"rapid\",\"classical\"],(moves)=>{\n            this.state.openingGraph.addBookNode(this.chess.fen(), moves)\n            this.setState({update:this.state.update+1})\n        })\n        this.state.openingGraph.addBookNode(this.chess.fen(), moves)\n    }\n    return moves\n}\n\nfunction mergePlayerAndBookMoves(playerMovesToShow, bookMovesToShow) {\n    if(!playerMovesToShow) {\n        return\n    }\n    let bookMovesMap = createMap(bookMovesToShow.moves)\n    playerMovesToShow.forEach((move)=>{\n        let bookMove = bookMovesMap.get(move.san)\n        if(!bookMove) {\n            return\n        }\n        move.compareTo = getCompareToValues(bookMove)\n        bookMove.compareTo = getCompareToValues(move)\n    })\n}\n\nfunction getCompareToValues(move) {\n    return [move.details.whiteWins/move.details.count*100, \n        (move.details.whiteWins+move.details.draws)/move.details.count*100]\n}\n\nfunction createMap(movesToShow){\n    let map = new Map()\n    if(!movesToShow) {\n        return map\n    }\n    console.log(movesToShow)\n    movesToShow.forEach((move)=> {\n        map.set(move.san, move)\n    })\n    return map\n}\n\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.getPlayerMoves = getPlayerMoves\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.toggleFeedback = toggleFeedback.bind(obj)\n    obj.setDownloading = setDownloading\n    obj.toggleDiagnosticsData = toggleDiagnosticsData.bind(obj)\n    obj.copyDiagnostics = copyDiagnostics.bind(obj)\n    obj.importGameState = importGameState\n    obj.getDiagnosticsValue = getDiagnosticsValue\n    obj.getChessboardWidth = getChessboardWidth\n    obj.getEmailLink = getEmailLink\n    obj.getSubject = getSubject\n    obj.getBody = getBody.bind(obj)\n    obj.getRedditLink = getRedditLink\n    obj.variantChange = variantChange\n    obj.getBookMoves = getBookMoves\n    obj.mergePlayerAndBookMoves = mergePlayerAndBookMoves\n}\n\nexport {addStateManagement}","import request from 'request'\nimport * as Common from './Common'\n\nexport function fetchBookMoves(fen, variant, ratings, speeds, callback) {\n    let url = `https://explorer.lichess.ovh/master?fen=${fen}&play=&variant=${Common.lichessPerf(variant)}${joinParams('ratings',ratings)}${joinParams('speeds',speeds)}`\n    request.get(url, (error, response) =>{\n        if(error) {\n            callback({fetch:\"failed\"})\n            return \n        }\n        try{\n            callback(JSON.parse(response.body))\n            return\n        } catch (e) {\n            console.log(e)\n        }\n        callback({fetch:\"failed\"})\n    })\n    return {fetch:\"pending\"}\n    //https://explorer.lichess.ovh/lichess?fen=rnbqkbnr%2Fpppppppp%2F8%2F8%2F8%2F8%2FPPPPPPPP%2FRNBQKBNR%20w%20KQkq%20-%200%201&play=&variant=kingOfTheHill&speeds%5B%5D=bullet&speeds%5B%5D=blitz&speeds%5B%5D=rapid&speeds%5B%5D=classical&ratings%5B%5D=1600&ratings%5B%5D=1800&ratings%5B%5D=2000&ratings%5B%5D=2200&ratings%5B%5D=2500\n\n}\n\nfunction joinParams(paramName, ratings) {\n    return ratings.map(r=>`&${paramName}[]=${r}`).join('')\n}","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","module.exports = __webpack_public_path__ + \"static/js/0.11dd626c.chunk.worker.js\"","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport function trimString(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport function lichessVariantHeader(variant) {\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.LICHESS_HEADER_RACING_KINGS\n    } else if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.LICHESS_HEADER_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.LICHESS_HEADER_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.LICHESS_HEADER_CRAZYHOUSE\n    }\n    return Constants.LICHESS_HEADER_STANDARD\n}\nexport function lichessPerf(variant) {\n    if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.LICHESS_PERF_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.LICHESS_PERF_RACING_KINGS\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.LICHESS_PERF_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.LICHESS_PERF_CRAZYHOUSE\n    }\n}\nexport function chessDotComRules(variant) {\n    if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.CHESS_COM_RULES_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.CHESS_COM_RULES_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.CHESS_COM_RULES_CRAZYHOUSE\n    }\n    return Constants.CHESS_COM_RULES_STANDARD\n}\n\n\nexport const DP_TABLE = {\n    \"100\":800,   \"99\":677,    \"98\":589,    \"97\":538,\n    \"96\":501,    \"95\":470,    \"94\":444,    \"93\":422,\n    \"92\":401,    \"91\":383,    \"90\":366,    \"89\":351,\n    \"88\":336,    \"87\":322,    \"86\":309,    \"85\":296,\n    \"84\":284,    \"83\":273,    \"82\":262,    \"81\":251,\n    \"80\":240,    \"79\":230,    \"78\":220,    \"77\":211,\n    \"76\":202,    \"75\":193,    \"74\":184,    \"73\":175,\n    \"72\":166,    \"71\":158,    \"70\":149,    \"69\":141,\n    \"68\":133,    \"67\":125,    \"66\":117,    \"65\":110,\n    \"64\":102,    \"63\":95,     \"62\":87,     \"61\":80,\n    \"60\":72,     \"59\":65,     \"58\":57,     \"57\":50,\n    \"56\":43,     \"55\":36,     \"54\":29,     \"53\":21,\n    \"52\":14,     \"51\":7,      \"50\":0,      \"49\":-7,\n    \"48\":-14,    \"47\":-21,    \"46\":-29,    \"45\":-36,\n    \"44\":-43,    \"43\":-50,    \"42\":-57,    \"41\":-65,\n    \"40\":-72,    \"39\":-80,    \"38\":-87,    \"37\":-95,\n    \"36\":-102,   \"35\":-110,   \"34\":-117,   \"33\":-125,\n    \"32\":-133,   \"31\":-141,   \"30\":-149,   \"29\":-158,\n    \"28\":-166,   \"27\":-175,   \"26\":-184,   \"25\":-193,\n    \"24\":-202,   \"23\":-211,   \"22\":-220,   \"21\":-230,\n    \"20\":-240,   \"19\":-251,   \"18\":-262,   \"17\":-273,\n    \"16\":-284,   \"15\":-296,   \"14\":-309,   \"13\":-322,\n    \"12\":-336,   \"11\":-351,   \"10\":-366,   \"9\":-383,\n    \"8\":-401,    \"7\":-422,    \"6\":-444,    \"5\":-470,\n    \"4\":-501,    \"3\":-538,    \"2\":-589,    \"1\":-677,\n    \"0\":-800,\n}","import * as ChessLogic from './chess/ChessLogic'\n\nexport default class OpeningManager {\n    plys = []\n    currentIndex = 0\n    constructor(variant) {\n        this.plys = [{pgn:'', fen:ChessLogic.rootFen(variant), move:null}]\n        this.currentIndex = 0\n    }\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager(this.props.variant)\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n          default:\n            break\n\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.variant !== this.props.variant) {\n            this.openingManager = new OpeningManager(newProps.variant)\n            return true\n\n        }\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                // called when \"clear\" or \"starting position\" actions are hit\n                this.openingManager = new OpeningManager(newProps.variant)\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faComments, faCaretDown} from '@fortawesome/free-solid-svg-icons'\nimport { faDiscord } from '@fortawesome/free-brands-svg-icons'\nimport * as Constants from '../app/Constants'\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  NavItem, NavLink\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n\n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle}/>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(\"https://www.youtube.com/watch?v=AJ66-HqdpXE\")}>\"It's so powerful\" - IM Eric Rosen <span className=\"smallText\">[Watch video]</span></NavLink></NavItem>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(Constants.OPENING_TREE_DISCORD)}><FontAwesomeIcon icon={faDiscord} className=\"discordIcon\"/> Join our discord</NavLink></NavItem>\n          </Nav>\n          <Nav className=\"\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={props.toggleFeedback}><FontAwesomeIcon icon={faComments} className=\"feedbackIcon\"/> Send feedback</NavLink></NavItem>\n          </Nav>\n          <UncontrolledDropdown>\n              <DropdownToggle className=\"bootNavColor\" nav>\n              <FontAwesomeIcon icon={faCaretDown} className=\"moreIcon\"/>More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.openingtree.com/old\")}>\n                  Old version\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://github.com/openingtree/openingtree\")}>\n                  Github\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      \n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.npmjs.com/package/material-ui-dropzone\" target=\"_blank\" action>Dropzone</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.pgnmentor.com\" target=\"_blank\" action>PGN Mentor</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.twitch.tv/imrosen\" target=\"_blank\" action>IM Eric Rosen</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\nimport People from '@material-ui/icons/People';\nimport Save from '@material-ui/icons/Save';\nimport Divider from '@material-ui/core/Divider';\nimport DateRange from '@material-ui/icons/DateRange';\nimport {Badge} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChessRook } from '@fortawesome/free-solid-svg-icons'\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport { Button as MaterialUIButton } from '@material-ui/core'\n\n\nconst SOURCE_VARIANT_COMBINATION = {\n    [Constants.VARIANT_RACING_KINGS]:[Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_KING_OF_THE_HILL]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_THREE_CHECK]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_CRAZYHOUSE]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE]\n}\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> Load <i>PGN</i> file</span></span>\n        } else if (source === Constants.SITE_EVENT_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<DateRange className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess events</span></span>\n        } else if (source === Constants.SITE_PLAYER_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<People className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess players</span></span>\n        }  else if (source === Constants.SITE_OPENING_TREE_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Save className=\"lowOpacity\"/><span className=\"sourceName\"> Load <b>.tree</b> file</span></span>\n        } else if (source === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}{addNumber?<FontAwesomeIcon icon={faChessRook} className=\"lowOpacity\" />:<Badge className=\"sourceName\" color=\"info\">New!</Badge>}<span className=\"sourceName\"> Lichess tournaments</span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n    continue(){\n        this.props.siteChange(this.props.site)\n    }\n    setSite(event) {\n        let newSite = event.target.value\n        this.props.siteChange(newSite)\n    }\n    isSourceAvailable(source, variant) {\n        let supportedSources = SOURCE_VARIANT_COMBINATION[variant]\n        if(!supportedSources) {\n            return true\n        }\n        return supportedSources.includes(source)\n    }\n    render() {\n        return <Accordion TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <RadioGroup onChange={this.setSite.bind(this)} value={this.props.site}>\n                {this.getSourceRadio(Constants.SITE_LICHESS)}\n                {this.getSourceRadio(Constants.SITE_CHESS_DOT_COM)}\n                {this.getSourceRadio(Constants.SITE_ONLINE_TOURNAMENTS)}\n                {this.getSourceRadio(Constants.SITE_OPENING_TREE_FILE)}\n                {this.props.variant === Constants.VARIANT_STANDARD?<Divider className=\"dividerMargin\"/>:null}\n                {this.getSourceRadio(Constants.SITE_PLAYER_DB)}\n                {this.getSourceRadio(Constants.SITE_EVENT_DB)}\n                {this.getSourceRadio(Constants.SITE_PGN_FILE)}\n               </RadioGroup>\n            </AccordionDetails>\n            {this.props.site?\n            <span>\n            <Divider />\n\n            <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.continue.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></span>:\n                null\n            }\n        </Accordion>\n        \n    }\n\n    getSourceRadio(source) {\n        if(!this.isSourceAvailable(source,this.props.variant)) {\n            return null\n        }\n        return <FormControlLabel \n                className=\"sitelabel\" \n                value={source} \n                control={<Radio color=\"primary\" />} \n                label={this.getSourceOption(source)} />\n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport { trackEvent } from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\n\nexport default class Dropzone extends React.Component{\n    handleFileChange(newFiles) {\n      trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FileSaved\", newFiles.length>0?newFiles[0].name:null)\n      this.props.filesChange(newFiles)\n    }\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText={this.props.dropzoneText}\n          onChange={this.handleFileChange.bind(this)}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={this.props.filesLimit}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import SelectSearch from 'react-select-search';\nimport React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport default class NotableChessGames extends React.Component {\n\n    updateDetails = (value) => {\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"NotableGameSelected\", value.value)\n        this.props.onChange(value)\n    }\n    \n    renderDetails(option) {\n        return (<div>\n                <span><LazyLoadImage alt={option.name} className=\"profilePicture\" width=\"40\" height=\"40\" src={option.profile.imageUrl} /></span>\n                <div>{option.name}</div>\n                <div className=\"smallText\">{option.profile.subText}</div>\n                </div>);\n    }\n    render() {\n        if(!this.props.list) {\n            return <div className=\"lowOpacity textCenter\"><img alt=\"loading\" width='25' height='25' src=\"./spinner.gif\"/> Loading List</div>\n        } else if(!this.props.list.length) {\n            return <div className=\"lowOpacity textCenter\"> Could not fetch list</div>\n        }\n        let options = this.props.list.map(option=>{return {...option, value:option.name}})\n        return <SelectSearch\n            name=\"goatPlayers\"\n            value={this.props.selectedDetail.value}\n            options={options}\n            placeholder={this.props.placeholder}\n            renderOption={this.renderDetails}\n            onChange={this.updateDetails}\n        />\n    }\n}\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport { Button as MaterialUIButton, TextField, AccordionDetails } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle} from '@fortawesome/free-solid-svg-icons'\nimport {faCheck, faSync, faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\nimport Divider from '@material-ui/core/Divider';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nimport NotableChessGames from './NotableChessGames';\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap'\nimport LockOpen from '@material-ui/icons/Lock'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport {Spinner} from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            tournamentUrl:'',\n            files:[],\n            selectedPlayer:{},\n            selectedEvent:{}\n        }\n        \n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n    editTournamentUrl(event) {\n        this.setState({\n            tournamentUrl: event.target.value,\n            tournamentUrlError:''\n        })\n    }\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    notablePlayerChange(player) {\n        this.setState({\n            selectedPlayer:player})\n    }\n    notableEventChange(event) {\n        this.setState({\n            selectedEvent:event})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({playerNameError:'', tournamentUrlError: ''})\n    }\n    \n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_EVENT_DB){\n            if(!this.state.selectedEvent){\n                this.props.showError(\"Please select an event\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(!this.state.selectedPlayer){\n                this.props.showError(\"Please select a player\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload an openingtree file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            if(!this.state.tournamentUrl){\n                this.setState({\n                    tournamentUrlError:'Please enter a url'\n                })\n                return false\n            } else {\n                \n                let url = this.state.tournamentUrl.trim()\n                if(!url.startsWith(\"http\")) {\n                    url = \"https://\"+url\n                }\n                let parsedUrl = null\n                try {\n                    parsedUrl = new URL(url)\n                } catch (e) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a valid url'\n                    })\n                    return false\n                }\n                let hostname = parsedUrl.hostname\n                let tournamentSite = null;\n                if(hostname === 'lichess.org' || hostname.endsWith('.lichess.org')) {\n                    tournamentSite = Constants.SITE_LICHESS\n                } else if(hostname === 'chess.com' || hostname.endsWith('.chess.com')) {\n                    this.setState({\n                        tournamentUrlError:'chess.com tournaments are not currently supported'\n                    })\n                    return false;\n                }\n                if(!tournamentSite) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a lichess.org url'\n                    })\n                    return false;\n                }\n                let pathComponents = parsedUrl.pathname.split(\"/\")\n                let tournamentId = null\n                let tournamentType = null\n                for(let i=0;i<pathComponents.length;i++) {\n                    if(pathComponents[i]) {\n                        tournamentType = pathComponents[i]\n                        break\n                    }\n                }\n\n                for(let i=pathComponents.length-1;i>=0;i--) {\n                    if(pathComponents[i]) {\n                        tournamentId = pathComponents[i]\n                        break\n                    }\n                }\n                if(!tournamentId) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a valid tournament url'\n                    })\n                    return false;\n                }\n                \n                this.selectedOnlineTournament = {\n                    tournamentSite:tournamentSite,\n                    tournamentId:tournamentId,\n                    tournamentType:tournamentType\n                \n                }\n            }\n        }\n        return true\n    }\n    finalPlayerName(source, playerName, selectedNotablePlayer) {\n        if(source === Constants.SITE_PLAYER_DB) {\n            return selectedNotablePlayer.name\n        }\n        if(source === Constants.SITE_EVENT_DB) {\n            return ''\n        }\n        return playerName\n    }\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(\n                this.finalPlayerName(\n                    this.props.site, \n                    this.state.playerName,\n                    this.state.selectedPlayer), \n                this.state.files, \n                this.state.selectedEvent, \n                this.state.selectedPlayer,\n                this.selectedOnlineTournament)\n        }\n    }\n    \n    getSummary() {\n        if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(this.props.selectedPlayer && this.props.selectedPlayer.name) {\n                return <span>\n                        {getNumberIcon('done')}\n                        {this.props.selectedPlayer.profile.title}{'\\u00A0'}\n                        <b>{this.props.selectedPlayer.name}</b>\n                    </span>\n            }\n        } else if(this.props.site === Constants.SITE_LICHESS || \n            this.props.site === Constants.SITE_CHESS_DOT_COM){\n            if(this.props.playerName) {\n                return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n            }\n        } else if(this.props.site === Constants.SITE_PGN_FILE || \n            this.props.site === Constants.SITE_OPENING_TREE_FILE){\n            if(this.props.files.length===1) {\n                return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n            }\n            if(this.props.files.length>1) {\n                return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n            }\n        } else if(this.props.site === Constants.SITE_EVENT_DB) {\n            if(this.props.selectedEvent && this.props.selectedEvent.name) {\n                return <span>{getNumberIcon('done')}{this.props.selectedEvent.name}</span>\n            }\n        }\n        else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            if(this.props.selectedOnlineTournament) {\n                return <span>{getNumberIcon('done')}Id: <b>{this.props.selectedOnlineTournament.tournamentId}</b></span>\n            }\n        }\n        return <span>{getNumberIcon(2)}{this.title(this.props.site)}</span>\n    }\n\n    title(site){\n        if(site === Constants.SITE_ONLINE_TOURNAMENTS \n            || site === Constants.SITE_EVENT_DB) {\n            return \"Tournament details\"\n        } else if(site === Constants.SITE_OPENING_TREE_FILE \n            || site === Constants.SITE_PGN_FILE) {\n                return \"File details\"\n        } \n        return \"Player details\"\n    }\n\n    launchLichessOauth() {\n        trackEvent(\n            Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessLogin\")\n        setTimeout(()=>{\n            window.location.href = \n                'https://oauth.lichess.org/oauth/authorize?response_type=code&client_id=EBXrB9R9OXpaRvOU&scope=preference:read&redirect_uri=https%3A%2F%2Flichesslogin.openingtree.com&state='+window.location.pathname\n            }, 150)\n        }\n    getLichessSelection() {\n        return <div>\n            {this.getLichessCardBody()}\n            <br/>\n            {this.getPlayerNameInput('lichess username')}\n        </div>\n    }\n\n    getLichessCardBody() {\n        if (this.props.lichessLoginState === Constants.LICHESS_STATE_PENDING) {\n            return <Card>\n                <div className=\"center\">\n                    <Spinner className=\"bigSpinner dividerMargin\" /><br/>\n                </div>\n            </Card>\n        } else if(this.props.lichessLoginState === Constants.LICHESS_FAILED_FETCH) {\n            return <Card><CardBody className=\"singlePadding\">\n            <CardTitle className=\"smallBottomMargin redColor\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> Failed to fetch login status</CardTitle>\n            <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faSync} className=\"lowOpacity smallText leftMargin2\"/>\n            <span onClick={this.props.refreshLichessStatus} className=\"smallText linkStyle leftMargin4\"> Retry fetching status</span>\n            </CardTitle>\n            <CardTitle><FontAwesomeIcon icon={faSignOutAlt} className=\"lowOpacity smallText leftMargin2\"/>\n            <span onClick={this.props.logoutOfLichess} className=\"smallText linkStyle leftMargin4\"> Logout of lichess</span>\n            </CardTitle>\n    \n                    <MaterialUIButton\n                onClick={this.launchLichessOauth}\n                variant=\"contained\"\n                color=\"default\"\n                className=\"mainButton\" disableElevation\n                startIcon={<LockOpen />}\n                >\n                    LOGIN AGAIN\n                </MaterialUIButton>\n            </CardBody></Card>\n        } else if (this.props.lichessLoginState === Constants.LICHESS_LOGGED_IN && this.props.lichessLoginName) {\n            return <Card>\n                <CardBody className=\"singlePadding\">\n                    <CardTitle>\n                        <FontAwesomeIcon icon={faCheck} className=\"lowOpacity greenColor\"/> Logged in as\n                        <b> {this.props.lichessLoginName}</b>\n                        \n                    </CardTitle>\n                    \n                    <MaterialUIButton\n                        onClick={this.props.logoutOfLichess}\n                        variant=\"contained\"\n                        color=\"default\"\n                        className=\"mainButton\" disableElevation\n                        startIcon={<ExitToApp />}\n                        >\n                            LOGOUT\n                    </MaterialUIButton>\n                </CardBody>\n            </Card>\n        }\n        return <Card><CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> Speed up tree building (optional)</CardTitle>\n        <CardText className=\"smallText\">\n            Lichess allows much faster download of games if you login. You can learn more about this <a href = 'https://lichess.org/api#operation/apiGamesUser' rel=\"noopener noreferrer\" target=\"_blank\">here</a>. \n            Recommended for viewing your own games or when your opponent has lots of games.\n        </CardText>\n        <MaterialUIButton\n                onClick={this.launchLichessOauth}\n                variant=\"contained\"\n                color=\"default\"\n                className=\"mainButton\" disableElevation\n                startIcon={<LockOpen />}\n                >\n                    LOGIN TO LICHESS\n                </MaterialUIButton>\n        </CardBody>\n        </Card>\n    }\n\n    getChessComSelection() {\n        return this.getPlayerNameInput('chess.com username')\n    }\n\n    getPlayerNameInput(label, helperText) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.playerName}\n            helperText={this.state.playerNameError? this.state.playerNameError:helperText}\n            error={this.state.playerNameError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    getOnlineTournamentSelection() {\n        return <div>\n            {this.getOnlineTournamentCard()}\n            <br/>\n            {this.getOnlineTournamentInput('Enter tournament url', 'eg. https://lichess.org/tournament/QlooVt7W')}\n        </div>\n    }\n    getOnlineTournamentCard(){\n        return <Card>\n        <CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n        <CardText className=\"smallText\">\n            You can load all of the games of a lichess tournament by copying the  url from your address bar on those sites and pasting it below.\n            <br/><br/>\n            <b>Why is chess.com not supported?</b>\n            <br/>chess.com API has a few bugs in returning tournament games so we are not able to support them currently. Bugs have been reported to chess.com.\n            \n        </CardText>\n        </CardBody>\n        </Card>\n    }\n    \n\n    getOnlineTournamentInput(label, helperText) {\n        return <TextField\n            className=\"urlField\" name=\"onlineTournament\" id=\"onlineTournamentTextBox\" \n            margin=\"dense\" onChange={this.editTournamentUrl.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.tournamentUrl}\n            helperText={this.state.tournamentUrlError? this.state.tournamentUrlError:helperText}\n            error={this.state.tournamentUrlError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    playerNameKeyUp(evt) {\n        if(evt.keyCode === 13) { // enter key pressed\n            this.setPlayerDetails()\n        }\n    }\n    getGoatDBSelection(){\n        return <NotableChessGames \n            list={this.props.notablePlayers} \n            placeholder=\"Select a player\"\n            onChange={this.notablePlayerChange.bind(this)}\n            selectedDetail={this.state.selectedPlayer}/>\n    }\n    getGoatDBEventSelection(){\n        return <NotableChessGames \n            list={this.props.notableEvents} \n            placeholder=\"Select an event\"\n            onChange={this.notableEventChange.bind(this)}\n            selectedDetail={this.state.selectedEvent}/>\n    }\n\n    getPgnFileSelection() {\n        return <div><Dropzone filesChange={this.filesChange.bind(this)} filesLimit={10}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click here to select files\"\n                />\n                {this.getPlayerNameInput('player name in PGN', 'Leave blank to load all games')}\n                </div>\n    }\n\n    getOpeningTreeSelection() {\n        return <div>\n            <Card>\n                <CardBody className=\"singlePadding\">\n                <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n                <CardText className=\"smallText\">\n                    If you plan to revisit the same player, you can save a <b>.tree</b> file locally by loading a tree and then clicking <i>\"Save .tree file\"</i>.\n                    To reload the same tree, drop the <b>.tree</b> file in the dropzone below.\n                </CardText>\n                </CardBody>\n                </Card><br/>\n            <Dropzone filesChange={this.filesChange.bind(this)} filesLimit={1}\n                    dropzoneText=\"Drag and drop openingtree save file here or click here to select a file\"\n                />\n        </div>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return this.getPgnFileSelection()\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getLichessSelection()\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getChessComSelection()\n        } else if (this.props.site === Constants.SITE_EVENT_DB) {\n            return this.getGoatDBEventSelection()\n        } else if (this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.getGoatDBSelection()\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.getOpeningTreeSelection()\n        } else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return this.getOnlineTournamentSelection()\n        }\n        return <div/>\n    }\n\n    render() {\n        return <Accordion expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</AccordionSummary>\n                <AccordionDetails>\n                        {this.getInputsToShow()}\n                </AccordionDetails>\n                <Divider />\n                <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></Accordion>\n            \n    }\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFlagCheckered, faChessKing, faDiceThree, faMountain , faHouseDamage} from '@fortawesome/free-solid-svg-icons'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider';\n\n\nexport default class Source extends React.Component {\n\n\n    getVariantOption(variant, addNumber) {\n        return <span>\n            {addNumber?getNumberIcon('done', addNumber):null}\n            <FontAwesomeIcon icon={this.getVariantIcon(variant)} /> <span> {this.getVariantText(variant)} </span>\n        </span>\n    }\n\n    getVariantText(variant) {\n        if (variant === Constants.VARIANT_RACING_KINGS) {\n            return \"Racing kings\"\n        } else if (variant === Constants.VARIANT_THREE_CHECK) {\n            return \"Three check\"\n        } else if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n            return \"King of the hill\"\n        } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n            return \"Crazyhouse\"\n        } \n        return \"Standard rules\" \n    }\n\n    getVariantIcon(variant) {\n        if (variant === Constants.VARIANT_RACING_KINGS) {\n            return faFlagCheckered\n        } else if (variant === Constants.VARIANT_THREE_CHECK) {\n            return faDiceThree\n        } else if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n            return faMountain\n        } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n            return faHouseDamage\n        } \n        return faChessKing\n    }\n    changeLink(){\n        return this.props.expandedPanel === 'variant'?null:<span className=\"smallText\" style={{\"verticalAlign\":\"text-bottom\"}}>&nbsp;[<span className=\"linkStyle\">change</span>]</span>\n    }\n    getVariantRadio(source) {\n        return <FormControlLabel \n                className=\"sitelabel\" \n                value={source} \n                control={<Radio color=\"primary\" />} \n                label={this.getVariantOption(source)} />\n    }\n    continue(){\n        this.props.variantChange(this.props.variant)\n    }\n    setVariant(event){\n        let newVariant = event.target.value\n        this.props.variantChange(newVariant)\n    }\n\n    render() {\n        return <Accordion TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'variant'}\n            onChange={this.props.handleExpansionChange}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getVariantOption(this.props.variant, true)}\n                </div>\n                <div>\n             {this.changeLink()}\n            </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <RadioGroup onChange={this.setVariant.bind(this)} value={this.props.variant}>\n                {this.getVariantRadio(Constants.VARIANT_STANDARD)}\n                {this.getVariantRadio(Constants.VARIANT_CRAZYHOUSE)}\n                {this.getVariantRadio(Constants.VARIANT_THREE_CHECK)}\n                {this.getVariantRadio(Constants.VARIANT_KING_OF_THE_HILL)}\n                {this.getVariantRadio(Constants.VARIANT_RACING_KINGS)}\n               </RadioGroup>\n            </AccordionDetails>\n            <Divider />\n\n            <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.continue.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions>\n        </Accordion>\n        \n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\nimport Variants from './Variants'\nimport request from 'request'\nimport * as SitePolicy from '../../app/SitePolicy'\nimport cookieManager from '../../app/CookieManager'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let selectedSite = new URLSearchParams(window.location.search).get(\"source\")\n\n        this.state = {\n            playerName: '',\n            site: selectedSite?selectedSite:'',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: selectedSite?'user':'source',\n            notablePlayers:null,\n            notableEvents:null,\n            files:[],\n            selectedNotableEvent:{},\n            selectedNotablePlayer:{},\n            lichessLoginState: Constants.LICHESS_NOT_LOGGED_IN,\n            lichessLoginName: null\n\n        }\n        if(selectedSite === Constants.SITE_LICHESS) {\n            this.fetchLichessLoginStatus()\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    exportOpeningTreeObject(){\n        return {\n            header:{\n                version:2,// current openingtree file version. used to check compatibility of files\n                timestamp:Math.floor(Date.now() / 1000),\n                gamesProcessed:this.props.gamesProcessed,\n                settings:this.props.settings,\n                playerName:this.state.playername,\n                site: this.state.site,\n                advancedFilters:this.advancedFilters(),\n                variant:this.props.variant\n            },\n            arrays: [[...this.props.openingGraph.graph.nodes.entries()],\n                        [...this.props.openingGraph.graph.pgnStats]]\n        }\n    }\n\n    importOpeningTreeObject(openingTreeSave) {\n        let saveVersion = 1;\n        if(openingTreeSave.header.version) {\n            saveVersion = openingTreeSave.header.version\n        }\n        if(saveVersion < Constants.OPENING_TREE_FILE_CURRENT_VERSION) {\n            this.props.showError(\"This is an old format of openingtree file.\", null, \n                \"You can try loading it by visiting the old website\", Constants.ERROR_ACTION_VISIT_OLD_SITE)\n            return false\n        }\n        this.setState({\n            ...openingTreeSave.header.advancedFilters,\n            playerColor:openingTreeSave.header.settings.playerColor,\n            site:openingTreeSave.header.site,\n            playerName:openingTreeSave.header.settings.playerName,\n        })\n        this.props.openingGraph.setEntries(openingTreeSave.arrays[0], openingTreeSave.arrays[1])\n        this.props.importCallback({\n            settings:openingTreeSave.header.settings,\n            gamesProcessed:openingTreeSave.header.gamesProcessed,\n            openingGraph:this.props.openingGraph,\n            variant:openingTreeSave.header.variant\n        })\n        return true\n    }\n\n    playerDetailsChange(playerName, files, selectedNotableEvent, selectedNotablePlayer, selectedOnlineTournament) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:SitePolicy.isFilterPanelEnabled(this.state.site, playerName, selectedNotablePlayer)?'filters':'',\n            files:files,\n            selectedNotableEvent:selectedNotableEvent,\n            selectedNotablePlayer:selectedNotablePlayer,\n            playerColor:'',\n            selectedOnlineTournament:selectedOnlineTournament\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n    fetchGOATGames(url, callback){\n        request.get(url, (error, response) =>{\n            if(error) {\n                this.props.showError(\"Could not fetch player list. Failed to connect to DB.\")\n                callback([])\n                return \n            }\n            let gamesDetails\n            try{\n                gamesDetails = JSON.parse(response.body).list\n            } catch (e) {\n                console.log(e)\n            }\n            if(!gamesDetails) {\n                this.props.showError(\"Failed to load games.\")\n                callback([])\n            } else {\n                callback(gamesDetails)\n            }\n        })\n    }\n\n\n\n    siteChange(newSite) {\n        if(newSite === Constants.SITE_PLAYER_DB && !this.state.notablePlayers) {\n            this.fetchGOATGames('https://goatchess.github.io/list.json', (gamesDetails)=>{\n                this.setState({notablePlayers:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_EVENT_DB && !this.state.notableEvents) {\n            this.fetchGOATGames('https://goatevents.github.io/list.json', (gamesDetails)=>{\n                this.setState({notableEvents:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_LICHESS) {\n            this.fetchLichessLoginStatus()\n        }\n\n        this.setState({ site: newSite, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", newSite)\n    }\n    fetchLichessLoginStatus(){\n        let lichessAccessToken = cookieManager.getLichessAccessToken()\n        if(lichessAccessToken) {\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessTokenFound\")\n\n            this.setState({lichessLoginState:Constants.LICHESS_STATE_PENDING})\n            \n            request.get(\"https://lichess.org/api/account\", {timeout:5000, auth:{bearer:cookieManager.getLichessAccessToken()}}, (error, response)=>{\n                if(!error && response) {\n                    let responseObj = JSON.parse(response.body) \n                    if(responseObj && responseObj.username) {\n                        this.setState({\n                            lichessLoginState:Constants.LICHESS_LOGGED_IN,\n                            lichessLoginName:responseObj.username\n                        })\n                        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessFetchSuccess\")\n                        return\n                    } \n                } \n                trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessFetchFailed\")\n                this.setState({lichessLoginState:Constants.LICHESS_FAILED_FETCH})\n            })\n        } else {\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessNoToken\")\n        }\n    }\n    logoutOfLichess() {\n        cookieManager.deleteLichessAccessToken()\n        this.setState({\n            lichessLoginState:Constants.LICHESS_NOT_LOGGED_IN,\n            lichessLoginName:''\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessLogout\")\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n    variantChange(newVariant) {\n        this.setState({expandedPanel:'source'})\n        this.props.variantChange(newVariant)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"VariantChange\", newVariant)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Variants expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('variant').bind(this)}\n                variantChange={this.variantChange.bind(this)} variant={this.props.variant}/>\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}\n                variant={this.props.variant}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files} notablePlayers={this.state.notablePlayers}\n                notableEvents={this.state.notableEvents} site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}\n                pgnUrl={this.state.pgnUrl} selectedPlayer={this.state.selectedNotablePlayer} selectedEvent={this.state.selectedNotableEvent}\n                lichessLoginState={this.state.lichessLoginState} lichessLoginName={this.state.lichessLoginName}\n                logoutOfLichess={this.logoutOfLichess.bind(this)} refreshLichessStatus={this.fetchLichessLoginStatus.bind(this)}\n                selectedOnlineTournament={this.state.selectedOnlineTournament}\n            />\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} playerName={this.state.playerName} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}\n                selectedNotablePlayer={this.state.selectedNotablePlayer} />\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed} \n                selectedNotablePlayer={this.state.selectedNotablePlayer} selectedNotableEvent={this.state.selectedNotableEvent}\n                exportOpeningTreeObject={this.exportOpeningTreeObject.bind(this)} showInfo={this.props.showInfo}\n                importOpeningTreeObject={this.importOpeningTreeObject.bind(this)} selectedOnlineTournament={this.state.selectedOnlineTournament}\n                variant={this.props.variant}/>\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    constructor(props){\n        super(props)\n        window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        if(e.srcElement && e.srcElement.tagName === 'INPUT') {\n            return \n        }\n        switch(e.keyCode) {\n          case 70: // F key\n          this.toggle('orientation')()\n          break\n          default:\n            break\n\n        }\n      }\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/standard/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails} from '../app/util'\nimport {copyText} from './loader/Common'\n\nexport default class ReportControls extends React.Component {\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        copyText(\"fenField\")/* Get the text field */\n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        let moveDetails = this.props.moveDetails\n        if(!moveDetails.hasData) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(moveDetails.totalOpponentElo, \n                                                        moveDetails.averageElo,\n                                                        moveDetails.whiteWins, \n                                                        moveDetails.draws, \n                                                        moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            {!performanceDetails.performanceRating || (isNaN(performanceDetails.performanceRating) || !this.props.settings.playerName)?null:            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>}\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Results</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.results}</TableCell>\n            </TableRow>\n            {(isNaN(performanceDetails.averageOpponentElo) || performanceDetails.averageOpponentElo <= 0 || !this.props.settings.playerName)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageOpponentElo}</TableCell>\n            </TableRow>}\n            {(isNaN(performanceDetails.averageElo))?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg Elo</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {((this.props.simplifiedView || isNaN(performanceDetails.averageElo)) || !this.props.settings.playerName)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {(this.props.settings.playerName && !this.props.simplifiedView && moveDetails.bestWinElo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.bestWinElo} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.bestWinGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(this.props.settings.playerName && !this.props.simplifiedView && moveDetails.worstLossElo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.worstLossElo} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.worstLossGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(!this.props.simplifiedView && moveDetails.longestGameInfo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Longest game</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.longestGameInfo.numberOfPlys} Plys <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.longestGameInfo)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(!this.props.simplifiedView && moveDetails.shortestGameInfo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Shortest game</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.shortestGameInfo.numberOfPlys} Plys <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.shortestGameInfo)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n\n            {moveDetails.lastPlayedGame?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.removeQuestionMarksFromDate(moveDetails.lastPlayedGame.date)} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.lastPlayedGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            </TableBody>\n            {!this.props.reportFooter?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">{this.props.reportFooter}</TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n\n    removeQuestionMarksFromDate(date) {\n        if(date.indexOf('?') === -1) {\n            return date\n        }\n        return date.slice(0, date.indexOf('.'))\n    }\n}","export function playerDetails(name, elo) {\n    return `${name}${elo?`(${elo})`:''}`\n}\n","import React from 'react'\nimport {Progress, Popover } from \"reactstrap\"\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faInfoCircle, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport ReportControls from '../ReportControls'\nimport {Container, Row, Col} from 'reactstrap'\nimport \"react-step-progress-bar/styles.css\";\nimport {trackEvent} from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\nimport { ProgressBar,Step } from \"react-step-progress-bar\";\nimport {playerDetails} from './MovesCommon'\nimport {simplifyCount} from '../../app/util'\n\nexport default class MovesTable extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            openPerformanceIndex: null\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n\n    move(san) {\n        return () => {\n            this.props.onMove(san)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, this.props.clickedEventName)\n        }\n    }\n\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    \n    compareClicked(san){\n        return (e)=>{\n            e.stopPropagation()\n            this.props.compareToClicked(san)\n        }\n    }\n\n    compareProgress(currMove){\n        let steps = currMove.compareTo\n        if(!steps) {\n            return null\n        }\n        return (\n            <ProgressBar\n              percent={0}\n              stepPositions={steps}\n            >\n                \n              <Step transition=\"scale\">\n                {({ accomplished }) => (\n                  <img onClick = {this.compareClicked(currMove.san)}\n                    className=\"pointerExternalLink\"\n                    width=\"16\"\n                    height=\"20\"\n                    src=\"./images/arrow-white.png\"\n                  />\n                )}\n              </Step>\n              <Step transition=\"scale\">\n                {({ accomplished }) => (\n                  <img onClick= {this.compareClicked(currMove.san)}\n                    className=\"pointerExternalLink\"\n                    style={{ filter: `grayscale(80%)` }}\n                    width=\"14\"\n                    height=\"18\"\n                    src=\"./images/arrow-black.png\"\n                  />\n                )}\n              </Step>\n            </ProgressBar>\n          )\n    }\n\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`p${this.props.namespace}${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} \n                isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} \n                settings={this.props.settings} reportFooter ={this.reportFooter(moveIndex)}/>\n            </Popover>\n    }\n\n    reportFooter(moveIndex) {\n        let currMove = this.props.movesToShow[moveIndex]\n\n        if(this.getTranspositionWarningLevel(moveIndex)!=='none') {\n            return <div>{this.getInfoIcon(moveIndex)}<b> This move has transpositions</b> <div>{currMove.san} has been played only {currMove.moveCount} times but the resulting position has appeared {currMove.details.count} times through other move orders.</div></div>\n        }\n    }\n\n    getTranspositionWarningLevel(moveIndex){\n        let currMove = this.props.movesToShow[moveIndex]\n        let targetCount = currMove.details.count\n        let difference = targetCount - currMove.moveCount\n        if (difference>0) {\n            if(difference>10 && difference/targetCount>0.1) {\n                return \"warning\"\n            } else {\n                return \"info\"\n            }\n        }\n        return \"none\"\n    }\n\n    render() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b></TableCell>\n        </TableRow></TableHead>  \n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let lastPlayedGame = move.details.lastPlayedGame\n            return lastPlayedGame && move.moveCount === 1?\n                this.getSingleItemRow(move,lastPlayedGame):\n                this.getMultiItemRow(move, moveIndex)\n                \n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n            <TableCell colSpan=\"3\">\n                {this.props.tableFooter}\n            </TableCell>\n        </TableRow></TableFooter>\n    </Table>\n    }\n    getMultiItemRow(move, moveIndex) {\n        return <TableRow className={`${this.props.highlightMove === move.san?'bgColor ':''}moveRow`} key = {`m${move.orig}${move.dest}${move.san}`} onClick={this.move(move.san)}>\n            <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n            <TableCell size=\"small\" id={`p${this.props.namespace}${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                {simplifyCount(move.moveCount)}{this.getInfoIcon(moveIndex)}\n                {this.getPopover(moveIndex)}\n            </TableCell>\n            <TableCell>\n                <Container>\n                <Row><Col className=\"navCol\">\n                <Progress className = \"border\" multi>\n                    <Progress bar className=\"whiteMove\" value={`${this.percentage(move.details.whiteWins,move.details.count)}`}>{this.getProgressLabel(move.details.whiteWins,move.details.count)}</Progress>\n                    <Progress bar className=\"grayMove\" value={`${this.percentage(move.details.draws,move.details.count)}`}>{this.getProgressLabel(move.details.draws,move.details.count)}</Progress>\n                    <Progress bar className=\"blackMove\" value={`${this.percentage(move.details.blackWins,move.details.count)}`}>{this.getProgressLabel(move.details.blackWins,move.details.count)}</Progress>\n                </Progress></Col></Row>\n                <Row className=\"zeroHeight\"><Col className=\"navCol\">\n                {this.compareProgress(move)}\n                </Col></Row>\n                </Container>\n            </TableCell>\n        </TableRow>\n    }\n\n    getInfoIcon(moveIndex) {\n        if(this.getTranspositionWarningLevel(moveIndex) === \"warning\"){\n            return <FontAwesomeIcon \n                className={`leftPadding redColor lowOpacity`} \n                icon={faExclamationTriangle}/>\n        }\n        return <FontAwesomeIcon \n            className={`lowOpacity leftPadding`} \n            icon={faInfoCircle}/>\n\n    }\n\n    getProgressLabel(count, total){\n        let percentage = this.percentage(count,total)\n        if(percentage<10) {\n            return ''\n        }\n        if(this.props.showAsPercentage) {\n            return `${percentage.toFixed(1)}%`\n        }\n        return count\n\n    }\n\n    percentage(count, total){\n        return count/total*100\n    }\n    getSingleItemRow(move,lastPlayedGame) {\n        let sampleResultWhite = playerDetails(lastPlayedGame.white, lastPlayedGame.whiteElo)\n        let sampleResultBlack = playerDetails(lastPlayedGame.black, lastPlayedGame.blackElo)\n        let sampleResult = lastPlayedGame.result\n\n        return <TableRow className={`${this.props.highlightMove === move.san?'bgColor ':''}moveRow`} key = {`${move.orig}${move.dest}`} onClick={this.move(move.orig, move.dest, move.san)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n                        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n    }\n\n}\n","import React from 'react'\nimport { Table, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport {playerDetails} from './MovesCommon'\n\nexport default class ResultsTable extends React.Component {\n    render() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = playerDetails(result.white, result.whiteElo)\n                    let blackPlayer = playerDetails(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport MovesTable from './MovesTable'\nimport ResultsTable from './ResultsTable';\n\nexport default class MovesList extends React.Component {\n\n    render(){\n        if(!this.props.playerMoves) {\n            return <div className = \"infoMessage\" >No moves to show. Please select a source from the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and enter the details.</div>\n        }\n        return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n\n    movesTable() {\n        return <MovesTable movesToShow={this.props.playerMoves} namespace='moves'\n                launchGame={this.props.launchGame} settings={this.props.settings}\n                turnColor={this.props.turnColor} onMove={this.props.onMove}\n                clickedEventName=\"MoveClicked\" tableFooter={this.tableFooter()}\n                highlightMove={this.props.highlightMove} \n                compareToClicked={this.props.switchToBookTab}/>\n    }\n    resultsTable() {\n        return <ResultsTable gameResults={this.props.gameResults}\n                launchGame={this.props.launchGame}/>\n    }\n\n    tableFooter() {\n        let hasMoves = (this.props.playerMoves && this.props.playerMoves.length>0)\n        if(this.props.settings.playerName) {\n            if(hasMoves) {\n                return <span>\n                    Showing moves that have been  played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                    this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                    </span>\n            } else {\n                return <span>No moves found played by {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                    this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.</span>\n            }\n        } else {\n            if(hasMoves) {\n                return <span>\n                    Showing all moves that have been played by <b>{this.props.turnColor}</b> in this position.\n                    </span>\n            } else {\n                return <span>\n                    No moves found played by <b>{this.props.turnColor}</b> in this position.\n                    </span>\n            }\n        }\n    }\n\n}","import React from 'react'\nimport MovesTable from './MovesTable'\nimport ResultsTable from './ResultsTable';\n\nexport default class BookMove extends React.Component {\n\n    render(){\n        if(!this.props.bookMoves) {\n            return <div className = \"infoMessage\" >No book moves found in this position</div>\n        }\n        return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n\n    movesTable() {\n        return <MovesTable movesToShow={this.props.bookMoves.moves} namespace='book'\n                launchGame={this.props.launchGame} settings={this.props.settings}\n                turnColor={this.props.turnColor} onMove={this.props.onMove}\n                clickedEventName=\"BookMoveClicked\" showAsPercentage\n                highlightMove={this.props.highlightMove} \n                compareToClicked={this.props.switchToMovesTab}/>\n    }\n    resultsTable() {\n        return <ResultsTable gameResults={this.props.gameResults}\n                launchGame={this.props.launchGame}/>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col,Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar, faBook } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './moves/MovesList'\nimport BookMoves from './moves/BookMoves'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\nimport {Modal, ModalHeader, ModalFooter} from 'reactstrap'\nimport {Table, TableRow, TableBody, TableCell} from '@material-ui/core'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n          activeGame:null\n      }\n      this.toggleModal = ()=>{\n        this.setState({activeGame:null})\n      }\n    }\n    \n\n    launchGame(game) {\n      if(game.url) {\n          return (e) => {\n              e.stopPropagation()\n              window.open(game.url, '_blank');\n              trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n          }\n      }\n      return ((e) => {\n        e.stopPropagation()\n        this.setState({activeGame:game})\n      })\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab(highlightMove) {\n      this.toggle('moves')\n      if(highlightMove) {\n        this.setState({highlightPlayerMove:highlightMove})\n        setTimeout(() => {\n          this.setState({\n            highlightPlayerMove:null\n          })\n        }, 1000);\n      }\n    }\n    switchToBookTab(highlightMove) {\n      this.toggle('book')\n      if(highlightMove) {\n        this.setState({highlightBookMove:highlightMove})\n        setTimeout(() => {\n          this.setState({\n            highlightBookMove:null\n          })\n        }, 1000);\n      }\n    }\n\n    render(){\n        return <div>\n              <Modal isOpen={this.state.activeGame} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Game details</ModalHeader>\n              {!this.state.activeGame?null:\n              <Table>\n                \n                <TableBody>\n                  {\n                    Object.entries(this.state.activeGame.headers).map((entry)=>!entry[1]?null:<TableRow className=\"performanceRatingRow\">\n                        <TableCell className=\"performanceRatingRow\">{entry[0]}</TableCell>\n                        <TableCell className=\"performanceRatingRow\">{entry[1]}</TableCell>\n                    </TableRow>\n                    )}\n                  \n                </TableBody>\n              </Table>\n              }\n              <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleModal}>Done</Button>\n        </ModalFooter>\n              </Modal>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'book' })}\n            onClick={() => { this.toggle('book'); }}\n          >\n            <FontAwesomeIcon icon={faBook} /> {this.state.activeTab === 'book'?\"Opening book\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              showInfo = {this.props.showInfo}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              openingGraph={this.props.openingGraph}\n              importCallback={this.props.importCallback}\n              variant={this.props.variant}\n              variantChange={this.props.variantChange}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              playerMoves={this.props.playerMoves} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              switchToBookTab={this.switchToBookTab.bind(this)}\n              highlightMove={this.state.highlightPlayerMove}\n              />\n        </TabPane>\n        <TabPane tabId=\"book\">\n            <BookMoves \n              bookMoves={this.props.bookMoves} \n              gameResults={this.props.bookResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              switchToMovesTab = {this.switchToMovesTab.bind(this)}\n              highlightMove = {this.state.highlightBookMove}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame.bind(this)} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo} reportFooter={this.reportFooter()}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n\n    reportFooter(){\n      return <span>Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></span>\n    }\n}","import green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, subMessage, action, actionText, showReportButton, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <div><span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message} \n                    \n                </span>\n                {!subMessage?null:<div className=\"smallText\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{subMessage}</div>}\n                </div>\n            }\n            action={[ \n                !showReportButton?null:<Button key=\"report\" onClick = {action} color=\"inherit\" size=\"small\">\n                  {actionText}\n                </Button>,\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    onReport: PropTypes.func,\n    subMessage: PropTypes.string,\n    showReportButton: PropTypes.bool,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);","import React from 'react'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport OpeningGraph from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar, TextField} from '@material-ui/core'\nimport SnackbarContentWrapper from './SnackbarContentWrapper'\nimport * as Constants from '../app/Constants'\nimport {  Modal, ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,Collapse\n} from 'reactstrap'\nimport {chessLogic} from '../app/chess/ChessLogic'\n\nimport {FormControlLabel, Checkbox} from '@material-ui/core'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    let urlVariant = new URLSearchParams(window.location.search).get(\"variant\")\n    let selectedVariant = urlVariant?urlVariant:Constants.VARIANT_STANDARD\n    this.chess = chessLogic(selectedVariant)\n    addStateManagement(this)\n    this.state = {\n        resize:0,\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:new OpeningGraph(selectedVariant),\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:''\n        },\n        message:'',\n        downloadingGames:false,\n        feedbackOpen:false,\n        diagnosticsDataOpen:false,\n        variant:selectedVariant,\n        update:0//increase count to force update the component\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['paleRed', 'paleRed', 'red']\n    window.addEventListener('resize', this.handleResize.bind(this))\n  }\n  handleResize() {\n    this.setState({resize:this.state.resize+1})\n    this.chessboardWidth = this.getChessboardWidth()\n  }\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    let playerMoves = this.getPlayerMoves()\n    let bookMoves = this.getBookMoves()\n    this.mergePlayerAndBookMoves(playerMoves, bookMoves)\n    return <div className=\"rootView\"> \n        <GlobalHeader toggleFeedback = {this.toggleFeedback(false)}/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}>\n            <Navigator fen = {this.state.fen} move={this.state.lastMove} \n              onChange ={this.navigateTo.bind(this)}\n              variant = {this.state.variant}\n            />\n    </Col><Col lg=\"6\"><Chessground key={this.state.resize}\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes(playerMoves)\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                playerMoves={playerMoves}\n                bookMoves={bookMoves}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                importCallback={this.importGameState.bind(this)}\n                variant={this.state.variant}\n                variantChange={this.variantChange.bind(this)}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'bottom', horizontal:\"left\" }} \n            open={snackBarOpen} autoHideDuration={6000} \n            onClose={this.closeError.bind(this)}\n    >\n    <SnackbarContentWrapper\n                            onClose={this.closeError.bind(this)}\n                            variant={this.state.messageSeverity}\n                            message={this.state.message}\n                            subMessage={this.state.subMessage}\n                            showReportButton={this.state.messageSeverity==='error'}\n                            action={this.state.errorAction}\n                            actionText={this.state.errorActionText}\n                        />\n    </Snackbar>\n\n    <Modal isOpen={this.state.feedbackOpen} toggle={this.toggleFeedback(false)}>\n        <ModalHeader toggle={this.toggleFeedback(false)}>Feedback</ModalHeader>\n        <ModalBody>\n          Your feedback is greatly appreciated. Reach out to me for feedback, suggestions, bug report or just a game of chess.\n          <ul>\n            <li>Email me: <a rel=\"noopener noreferrer\" href={this.getEmailLink()} target=\"_blank\">{Constants.OPENING_TREE_EMAIL}</a></li>\n            <li>Message me on reddit <a rel=\"noopener noreferrer\" href={this.getRedditLink()} target=\"_blank\">u/{Constants.OPENNIG_TREE_REDDIT}</a></li>\n            <li>Message me on lichess: <a rel=\"noopener noreferrer\" href={`https://lichess.org/inbox/${Constants.OPENING_TREE_LICHESS}`} target=\"_blank\">{Constants.OPENING_TREE_LICHESS}</a></li>\n            <li>Message me on chess.com: <a rel=\"noopener noreferrer\" href={`https://www.chess.com/messages/compose/${Constants.OPENING_TREE_CHESS_COM}`} target=\"_blank\">{Constants.OPENING_TREE_CHESS_COM}</a></li>\n            <li>Join my <a rel=\"noopener noreferrer\" href={Constants.OPENING_TREE_DISCORD}target=\"_blank\">discord server</a> to chat</li>\n          </ul>\n          <FormControlLabel\n        control={\n          <Checkbox\n            checked={this.state.diagnosticsDataOpen}\n            onChange={this.toggleDiagnosticsData}\n            name=\"diagnostics\"\n            color=\"primary\"\n          />\n        }\n        label=\"Add diagnostics data to message\"\n      />\n          <Collapse isOpen={this.state.diagnosticsDataOpen}>\n            <TextField id=\"diagnosticsText\" label=\"Click to copy.\" variant=\"outlined\" \n            className=\"fullWidth\" value={this.getDiagnosticsValue()} \n            rowsMax={4} onClick={this.copyDiagnostics} multiline/>\n            </Collapse>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleFeedback(false)}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","import Chess from 'chess.js'\n\nexport default class RacingKingsChess {\n    constructor(fen){\n        this.chess = new Chess(fen);\n        this.SQUARES = this.chess.SQUARES\n    }\n    fen(){\n        return this.chess.fen()\n    }\n    turn() {\n        return this.chess.turn()\n    }\n    moves(options) {\n        // checks are not allowed in racing kings \n        // so remove moves that cause a check\n        return this.chess.moves(options).filter((move)=>{\n            let san = move.san || move\n            return !san.endsWith(\"+\") && !san.endsWith(\"#\")\n        })\n    }\n\n    move(moveObject, options) {\n        if(typeof moveObject !== \"string\") {\n            return this.chess.move(moveObject, options)\n        }\n        \n        if (moveObject.endsWith('#')) {\n            // a move ending in checkmate in racing kings will not \n            // be a checkmate under standard rules. so remove the # at the end \n            // to make it pass as a standard notation \n            moveObject = moveObject.substring(0, moveObject.length - 1);\n        } \n        let move = this.chess.move(moveObject, options)\n        if(move) {\n            return move\n        }\n        let disambiguatedMove = disambiguate(moveObject, this.moves())\n        if(!disambiguatedMove) {\n            // disambiguation failed\n            return move\n        }\n        // making this move failed so try disambiguating\n        return this.chess.move(disambiguatedMove, options)\n    }\n\n}\n\n// this is needed because in certain positions, while a disambiguating notation is needed \n// in standard chess, it is not needed in racing kings. \n// for example in this position \"1q4R1/1kN2Q2/8/5K2/8/4Nn2/8/b7 w - - 1 21\"\n// Move Nd5 is ambiguous in standard chess but is clear in Racing kings\n// because Ncd5 will lead to check\n\n// The way this function works is by actually finding the disambiguated move Ned5\n// to pass to the chess.js library. Since the move Ncd5 will end with a check (+) \n// it will fail the filter below\nfunction disambiguate(problematicMove, potentialMoves) {\n    let filteredMoves = potentialMoves.filter((potentialMove)=>{\n        if(problematicMove.charAt(0) !== potentialMove.charAt(0)) {\n            return false;\n        }\n        return problematicMove.slice(-2) === potentialMove.slice(-2)\n    })\n    if(filteredMoves.length !== 1) {\n        return null\n    }\n    return filteredMoves[0]\n}","import Chess from 'chess.js'\n\nexport default class CrazyhouseChess {\n    constructor(fen){\n        this.chess = new Chess(fen);\n        this.SQUARES = this.chess.SQUARES\n    }\n    fen(){\n        return this.chess.fen()\n    }\n    turn() {\n        return this.chess.turn()\n    }\n    moves(options) {\n        return this.chess.moves(options)\n    }\n\n    move(moveObject, options) {\n        let move = this.chess.move(moveObject, options)\n        if(move) {\n            return move\n        }\n        if(typeof moveObject === \"string\") {\n            return this.moveSan(moveObject)\n        } else {\n            return this.moveSan(moveObject.san)\n        }\n    }\n\n    moveSan(san) {\n        if(san.includes('@')){\n            let locationOfAt = san.indexOf('@')\n            let piece = ''\n            if(locationOfAt === 0) {\n                piece = this.chess.PAWN\n            } else {\n                piece = san.charAt(0).toLowerCase()\n            }\n            let location = san.slice(locationOfAt+1,locationOfAt+3)\n            let success = this.chess.put({type:piece, color:this.turn()}, location)\n            if(!success) {\n                return null\n            }\n            let color = this.turn()\n\n            this.toggleTurn()\n            return {\n                color: color,\n                from:location,\n                to:location,\n                san:san\n            }\n        }\n        return null\n    }\n    toggleTurn() {\n        var tokens = this.chess.fen().split(' ');\n        // switch the color\n        tokens[1] = tokens[1] === 'b'? 'w' : 'b'\n        // remove en passent\n        tokens[3] = '-'\n        this.chess.load(tokens.join(' '));\n    }\n    \n}\n\n","import * as Constants from '../Constants'\nimport Chess from 'chess.js'\nimport RacingKingsChess from './RacingKingsChess'\nimport CrazyhouseChess from './CrazyhouseChess'\n\nexport function chessLogic(variant, fen) {\n    if(!fen) {\n        fen = rootFen(variant)\n    }\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return new RacingKingsChess(fen)\n    }\n    if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return new CrazyhouseChess(fen)\n    }\n    return new Chess(fen)\n}\n\nexport function rootFen(variant) {\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.RACING_KINGS_ROOT_FEN\n    }\n    return Constants.ROOT_FEN\n}","import * as Constants from './Constants'\n\nexport function isAdvancedFiltersEnabled(source) {\n    return source === Constants.SITE_CHESS_DOT_COM ||\n        source === Constants.SITE_LICHESS\n}\n\n\nexport function isFilterPanelEnabled(source, playerName) {\n    if(source === Constants.SITE_EVENT_DB ||\n        source === Constants.SITE_OPENING_TREE_FILE ||\n        source === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return false\n    }\n    return !!playerName\n}\n\nexport function treeSaveDisabledReason(loadedSite, selectedSite, gamesProcessed, isDownloading){\n    if(selectedSite === Constants.SITE_ONLINE_TOURNAMENTS) {\n        return \"Not currently supported for tournaments\"\n    }\n    if(selectedSite !== Constants.SITE_LICHESS && \n        selectedSite !== Constants.SITE_CHESS_DOT_COM) {\n        return \"Only supported for chess.com and lichess\"\n    }\n    if(loadedSite !== selectedSite || gamesProcessed<=0) {\n        return \"You need to analyze games before saving\"\n    }\n    if(isDownloading) {\n        return \"Action not supported while games are loading\"\n    }\n    return ''\n}\nexport function exportFileName(source, playerName, playerColor, selectedEvent, extension) {\n    if(source === Constants.SITE_EVENT_DB) {\n        return `${selectedEvent.name}.${extension}`\n    }\n    if(playerName) {\n        return `${playerName}-${playerColor}.${extension}`\n    }\n    return `openingtree-exportedgames.${extension}`\n}"],"sourceRoot":""}